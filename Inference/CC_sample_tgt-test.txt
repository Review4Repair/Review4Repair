<|4-s|> private <|s|> int <|s|> m Max Num Blacklist Bssid <|s|> = <|s|> INVALID _ LIST _ SIZE ; <|nl|> <|4-s|> private <|s|> int <|s|> m Max Num Whitelist Ssid <|s|> = <|s|> INVALID _ LIST _ SIZE ; <|nl|>
<|12-s|> } <|nl|> <|nl|> <|12-s|> if <|s|> ( fallback To Framework Roaming ) <|s|> { <|nl|> <|16-s|> Log . e ( TAG , <|s|> " Fall <|s|> back <|s|> to <|s|> framework <|s|> roaming " ); <|nl|> <|16-s|> m Firmware Roaming Supported <|s|> = <|s|> false ; <|nl|> <|16-s|> return <|s|> false ; <|nl|> <|12-s|> } <|nl|>
<|4-s|> <|s|> * <|s|> Get <|s|> the <|s|> maximum <|s|> size <|s|> of <|s|> BSSID <|s|> blacklist <|s|> firmware <|s|> supports . <|nl|> <|4-s|> <|s|> * <|nl|> <|4-s|> <|s|> * <|s|> @ return <|s|> INVALID _ LIST _ SIZE <|s|> if <|s|> firmware <|s|> roaming <|s|> is <|s|> not <|s|> supported , <|s|> or <|nl|> <|4-s|> <|s|> * <|s|> maximum <|s|> size <|s|> of <|s|> the <|s|> BSSID <|s|> blacklist <|s|> firmware <|s|> supports . <|nl|>
<|12-s|> Log . e ( TAG , <|s|> " get Max Num Blacklist Bssid : <|s|> Firmware <|s|> roaming <|s|> is <|s|> not <|s|> supported " ); <|nl|> <|12-s|> return <|s|> INVALID _ LIST _ SIZE ; <|nl|>
<|12-s|> Log . e ( TAG , <|s|> " get Max Num Blacklist Bssid : <|s|> Firmware <|s|> roaming <|s|> is <|s|> not <|s|> supported " ); <|nl|> <|12-s|> return <|s|> INVALID _ LIST _ SIZE ; <|nl|>
<|12-s|> Log . e ( TAG , <|s|> " get Max Num Whitelist Ssid : <|s|> Firmware <|s|> roaming <|s|> is <|s|> not <|s|> supported " ); <|nl|> <|12-s|> return <|s|> INVALID _ LIST _ SIZE ; <|nl|>
<|4-s|> private <|s|> static <|s|> final <|s|> String <|s|> TAG <|s|> = <|s|> " Wifi Connectivity Helper Test " ; <|nl|>
<|8-s|> assert False ( m Wifi Connectivity Helper . get Firmware Roaming Info ( ) ); <|nl|> <|8-s|> assert False ( m Wifi Connectivity Helper . is Firmware Roaming Supported ( ) ); <|nl|> <|8-s|> assert Equals ( Wifi Connectivity Helper . INVALID _ LIST _ SIZE , <|nl|> <|16-s|> m Wifi Connectivity Helper . get Max Num Blacklist Bssid ( ) ); <|nl|> <|8-s|> assert Equals ( Wifi Connectivity Helper . INVALID _ LIST _ SIZE , <|nl|> <|16-s|> m Wifi Connectivity Helper . get Max Num Whitelist Ssid ( ) ); <|nl|>
<|8-s|> assert True ( m Wifi Connectivity Helper . get Firmware Roaming Info ( ) ); <|nl|>
<|8-s|> } <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2017 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|16-s|> boolean <|s|> found <|s|> = <|s|> m Callback Queue . remove ( callback ); <|nl|> <|16-s|> if <|s|> ( found ) <|s|> { <|nl|> <|16-s|> <|4-s|> return <|s|> true ; <|nl|>
<|16-s|> return <|s|> m Callback Queue . contains ( callback ); <|nl|>
<|8-s|> // <|s|> 1 . <|s|> subscribe <|nl|>
<|8-s|> m Camera . unlock ( ); <|nl|>
<|8-s|> m Camera . unlock ( ); <|nl|>
<|16-s|> <|4-s|> Binder . get Calling Uid ( ) ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|16-s|> <|4-s|> m Gsm Roaming <|s|> = <|s|> reg Code Is Roaming ( registration State ); <|nl|> <|16-s|> <|4-s|> m New Reject Code <|s|> = <|s|> reason For Denial ; <|nl|>
<|4-s|> private <|s|> int <|s|> get Reg State From Hal Reg State ( int <|s|> reg State ) <|s|> { <|nl|>
<|del|> <|nl|>
<|s|> * <|12-s|> <|s|> < td > 20 TBD </ td > <|nl|>
<|4-s|> public <|s|> void <|s|> test Socket Read Timeout ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|>
<|16-s|> <|4-s|> ! write Completed . await ( TIMEOUT _ MILLIS <|s|> * <|s|> 2 , <|s|> Time Unit . MILLISECONDS ); <|nl|>
<|16-s|> Log . d ( TAG , <|s|> " Firmware <|s|> roaming <|s|> supported <|s|> with <|s|> capabilities : <|s|> max <|s|> num <|s|> blacklist <|s|> bssid = " <|nl|>
<|12-s|> Array List < String > <|s|> whitelist Ssids ) <|s|> { <|nl|>
<|8-s|> if <|s|> ( bssid <|s|> == <|s|> null <|s|> || <|s|> file Name <|s|> == <|s|> null ) <|s|> { <|nl|> <|12-s|> Log . e ( m TAG , <|s|> " Invalid <|s|> arguments <|s|> for <|s|> Icon <|s|> request . " ); <|nl|> <|12-s|> return <|s|> false ; <|nl|> <|8-s|> } <|nl|>
<|s|> * <|8-s|> <|2-s|> ex . <|s|> start Monitoring <|s|> does <|s|> nothing <|s|> and <|s|> will <|s|> not <|s|> send <|s|> a <|s|> connection / disconnection <|s|> event <|nl|>
<|4-s|> <|s|> * <|s|> @ return <|s|> generated <|s|> pin <|s|> if <|s|> operation <|s|> was <|s|> successful , <|s|> null <|s|> otherwise . <|nl|>
<|4-s|> /* * <|nl|> <|4-s|> <|s|> * <|s|> Enable <|s|> verbose <|s|> logging <|s|> for <|s|> all <|s|> sub <|s|> modules . <|nl|> <|4-s|> <|s|> */ <|nl|>
<|16-s|> && <|s|> m Supplicant Sta Iface Hal . start Rx Filter ( ); <|nl|>
<|16-s|> && <|s|> m Supplicant Sta Iface Hal . start Rx Filter ( ); <|nl|>
<|16-s|> && <|s|> m Supplicant Sta Iface Hal . start Rx Filter ( ); <|nl|>
<|16-s|> && <|s|> m Supplicant Sta Iface Hal . start Rx Filter ( ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> // <|s|> TODO ( b // 3608736 5 ) <|s|> Remove <|s|> this . <|s|> Link <|s|> layer <|s|> stats <|s|> is <|s|> enabled <|s|> when <|s|> the <|s|> HAL <|s|> is <|s|> started . <|nl|>
<|4-s|> /* * <|nl|> <|4-s|> <|s|> * <|s|> Indicates <|s|> whether <|s|> get Channels For Band <|s|> is <|s|> supported . <|nl|> <|4-s|> <|s|> * <|nl|> <|4-s|> <|s|> * <|s|> @ return <|s|> true <|s|> if <|s|> it <|s|> is . <|nl|> <|4-s|> <|s|> */ <|nl|> <|4-s|> public <|s|> boolean <|s|> is Get Channels For Band Supported ( ) <|s|> { <|nl|>
<|nl|> <|4-s|> /* * <|nl|> <|4-s|> <|s|> * <|s|> Stops <|s|> all <|s|> logging <|s|> and <|s|> resets <|s|> the <|s|> logger <|s|> callback . <|nl|> <|4-s|> <|s|> * <|s|> This <|s|> stops <|s|> both <|s|> the <|s|> alerts <|s|> and <|s|> ring <|s|> buffer <|s|> data <|s|> collection . <|nl|> <|4-s|> <|s|> */ <|nl|>
<|del|> <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> String <|s|> KEY _ SIGNAL _ STRENGTH _ EARFCN _ THRESHOLD _ INT <|s|> = <|nl|>
<|4-s|> public <|s|> Icc Open Logical Channel Response <|s|> icc Open Logical Channel ( String <|s|> AID , <|s|> int <|s|> p 2 ) <|s|> { <|nl|>
<|s|> * <|s|> The <|s|> gscan <|s|> API <|s|> is <|s|> used <|s|> to <|s|> perform <|s|> background <|s|> scans <|s|> and <|s|> wificond <|s|> is <|s|> used <|s|> for <|s|> oneshot <|s|> scans . <|nl|>
<|s|> * <|s|> The <|s|> gscan <|s|> API <|s|> is <|s|> used <|s|> to <|s|> perform <|s|> background <|s|> scans <|s|> and <|s|> wificond <|s|> is <|s|> used <|s|> for <|s|> oneshot <|s|> scans . <|nl|>
<|8-s|> description . append Text ( to String ( ) ); <|nl|>
<|4-s|> // <|s|> Android - added : <|s|> Make <|s|> to String <|s|> explicit <|s|> that <|s|> this <|s|> is <|s|> an <|s|> SSLServer Socket <|s|> ( http :// b / 6602228 ) <|nl|>
<|4-s|> <|s|> * <|s|> Lookup <|s|> the <|s|> ANQP <|s|> elements <|s|> associated <|s|> with <|s|> the <|s|> given <|s|> AP <|s|> from <|s|> the <|s|> cache . <|s|> An <|s|> empty <|s|> map <|nl|>
<|4-s|> <|s|> * <|s|> Lookup <|s|> the <|s|> ANQP <|s|> elements <|s|> associated <|s|> with <|s|> the <|s|> given <|s|> AP <|s|> from <|s|> the <|s|> cache . <|s|> An <|s|> empty <|s|> map <|nl|>
<|12-s|> set Speakerphone On ( false ); <|nl|> <|12-s|> // <|s|> Do <|s|> not <|s|> enable <|s|> SCO <|s|> audio <|s|> here , <|s|> since <|s|> RING <|s|> is <|s|> being <|s|> sent <|s|> to <|s|> the <|s|> headset . <|nl|>
<|8-s|> return <|s|> icc Open Logical Channel ( get Sub Id ( ) , <|s|> AID , <|s|> - 1 ); <|nl|>
<|8-s|> final <|s|> Ip Prefix <|s|> local 64 <|s|> = <|s|> get Unique Local Prefix ( ulp , <|s|> subnet Id , <|s|> 64 ); <|nl|>
<|4-s|> private <|s|> int <|s|> m Lte Rsrp Boost ; <|s|> // <|s|> offset <|s|> to <|s|> be <|s|> reduced <|s|> from <|s|> the <|s|> rsrp <|s|> threshold <|s|> while <|s|> calculating <|nl|> <|16-s|> <|16-s|> // <|s|> signal <|s|> strength <|s|> level <|nl|>
<|4-s|> public <|s|> void <|s|> set Lte Rsrp Boost ( int <|s|> lte Rsrp Boost ) <|s|> { <|nl|> <|8-s|> m Lte Rsrp Boost <|s|> = <|s|> lte Rsrp Boost ; <|nl|>
<|12-s|> } <|s|> else <|s|> if <|s|> ( m Lte Rsrp <|s|> >= <|s|> ( thresh Rsrp [ 4 ] <|s|> - <|s|> m Lte Rsrp Boost ) ) <|s|> { <|nl|>
<|4-s|> <|s|> * <|s|> Format <|s|> of <|s|> the <|s|> String <|s|> array <|s|> is <|s|> expected <|s|> to <|s|> be <|s|> { " erafcn 1 _ start - earfcn 1 _ end " , <|nl|> <|4-s|> <|s|> * <|s|> " earfcn 2 _ start - earfcn 2 _ end " <|s|> ... <|s|> } <|nl|>
<|4-s|> <|s|> * <|s|> configuration <|s|> is <|s|> used <|s|> to <|s|> start <|s|> the <|s|> Wi - Fi <|s|> hotspot , <|s|> and <|s|> must <|s|> be <|s|> non - null . <|nl|>
<|8-s|> reset ( m Wifi Connectivity Helper ); <|nl|> <|8-s|> // <|s|> Wifi Connectivity Manager <|s|> is <|s|> on <|s|> by <|s|> default <|nl|>
<|8-s|> verify ( m Wifi State Machine ) . start Roam To Network ( eq ( CANDIDATE _ NETWORK _ ID ) , <|nl|> <|16-s|> m Candidate Scan Result Captor . capture ( ) ); <|nl|> <|8-s|> assert Equals ( m Candidate Scan Result Captor . get Value ( ) . BSSID , <|s|> CANDIDATE _ BSSID ); <|nl|>
<|8-s|> verify ( m Wifi State Machine , <|s|> times ( 0 ) ) . start Roam To Network ( any Int ( ) , <|s|> any Object ( ) ); <|nl|>
<|del|> <|nl|>
<|8-s|> } <|s|> else <|s|> { <|nl|>
<|12-s|> " com . android . cellbroadcastreceiver . intent . extra . ID " ; <|nl|>
<|del|> <|nl|>
<|8-s|> if <|s|> ( ACTION _ MARK _ AS _ READ . equals ( action ) ) <|s|> { <|nl|> <|12-s|> final <|s|> long <|s|> delivery Time <|s|> = <|s|> intent . get Long Extra ( EXTRA _ DELIVERY _ TIME , <|s|> - 1 ); <|nl|>
<|4-s|> /* * <|s|> Intent <|s|> extra <|s|> for <|s|> passing <|s|> a <|s|> Sms Cb Message <|s|> */ <|nl|>
<|12-s|> // <|s|> For <|s|> FEATURE _ WATCH <|s|> we <|s|> want <|s|> to <|s|> mark <|s|> as <|s|> read <|nl|> <|12-s|> intent <|s|> = <|s|> create Mark As Read Intent ( context , <|s|> message . get Delivery Time ( ) ); <|nl|>
<|4-s|> static <|s|> Intent <|s|> create Mark As Read Intent ( Context <|s|> context , <|s|> long <|s|> delivery Time ) <|s|> { <|nl|>
<|4-s|> <|s|> * <|nl|> <|4-s|> <|s|> * <|s|> Returned <|s|> instances <|s|> of <|s|> INetd <|s|> should <|s|> not <|s|> be <|s|> cached . <|nl|> <|4-s|> <|s|> * <|nl|>
<|4-s|> public <|s|> static <|s|> INetd <|s|> get ( int <|s|> max Timeout Ms ) <|s|> { <|nl|> <|8-s|> int <|s|> timeout Ms <|s|> = <|s|> BASE _ TIMEOUT _ MS ; <|nl|> <|8-s|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> > <|s|> - 1 ; <|s|> i ++ ) <|s|> { <|nl|>
<|12-s|> } <|s|> catch <|s|> ( Interrupted Exception <|s|> e ) <|s|> { <|nl|> <|16-s|> // <|s|> If <|s|> this <|s|> occurs <|s|> we <|s|> can <|s|> lose <|s|> track <|s|> of <|s|> some <|s|> time <|s|> slept . <|nl|> <|12-s|> } <|nl|> <|12-s|> if <|s|> ( max Timeout Ms <|s|> > <|s|> 0 ) <|s|> max Timeout Ms <|s|> -= <|s|> timeout Ms ; <|nl|>
<|8-s|> void <|s|> run ( INetd <|s|> netd ) <|s|> throws <|s|> Remote Exception ; <|nl|>
<|4-s|> <|s|> * <|s|> the <|s|> command <|s|> succeeds <|s|> or <|s|> a <|s|> runtime <|s|> exception <|s|> is <|s|> thrown . <|nl|>
<|12-s|> } <|s|> catch <|s|> ( Remote Exception <|s|> re ) <|s|> { <|nl|> <|16-s|> Log . e ( TAG , <|s|> " error <|s|> communicated <|s|> with <|s|> netd : <|s|> " <|s|> + <|s|> re ); <|nl|> <|12-s|> } <|nl|>
<|12-s|> } <|s|> catch <|s|> ( Remote Exception <|s|> re ) <|s|> { <|nl|> <|16-s|> Log . e ( TAG , <|s|> " error <|s|> communicated <|s|> with <|s|> netd : <|s|> " <|s|> + <|s|> re ); <|nl|> <|12-s|> } <|nl|>
<|8-s|> final <|s|> int <|s|> NUMBER _ REPETITION <|s|> = <|s|> 3 ; <|nl|>
<|12-s|> <|s|> * <|s|> Ignore <|s|> Passpoint <|s|> networks . <|s|> Passpoint <|s|> networks <|s|> are <|s|> also <|s|> considered <|s|> as <|s|> " saved " <|nl|> <|12-s|> <|s|> * <|s|> network , <|s|> but <|s|> without <|s|> being <|s|> persisted <|s|> to <|s|> the <|s|> storage . <|s|> They <|s|> are <|s|> managed <|nl|>
<|16-s|> <|s|> * <|s|> Ignore <|s|> Passpoint <|s|> networks . <|s|> Passpoint <|s|> networks <|s|> are <|s|> also <|s|> considered <|s|> as <|s|> " saved " <|nl|> <|16-s|> <|s|> * <|s|> network , <|s|> but <|s|> without <|s|> being <|s|> persisted <|s|> to <|s|> the <|s|> storage . <|s|> They <|s|> are <|s|> being <|s|> evaluated <|nl|>
<|del|> <|nl|>
<|8-s|> final <|s|> Mode <|s|> current <|s|> = <|s|> m Mode ; <|nl|> <|8-s|> if <|s|> ( current <|s|> != <|s|> Mode . IDLE ) <|s|> { <|nl|>
<|16-s|> Log . e ( TAG , <|s|> " Already <|s|> in <|s|> mode : <|s|> " <|s|> + <|s|> current . description ); <|nl|>
<|16-s|> Log . e ( TAG , <|s|> " Local <|s|> hotspot <|s|> not <|s|> running . " ); <|nl|>
<|del|> <|nl|>
<|4-s|> private <|s|> static <|s|> class <|s|> Downstream <|s|> { <|nl|>
<|4-s|> private <|s|> final <|s|> Linked List < Downstream > <|s|> m Active Downstreams ; <|nl|>
<|12-s|> m Active Downstreams . offer ( new <|s|> Downstream ( downstream , <|s|> m Next Subnet Id ++ ) ); <|nl|>
<|8-s|> final <|s|> byte [ ] <|s|> in 6 addr <|s|> = <|s|> Arrays . copy Of ( ulp , <|s|> Network Constants . IPV 6 _ ADDR _ LEN ); <|nl|>
<|12-s|> // <|s|> At <|s|> this <|s|> time <|s|> the <|s|> timer Receiver <|s|> should <|s|> not <|s|> fire , <|s|> even <|s|> though <|s|> the <|s|> activity <|s|> has <|s|> shut <|nl|>
<|4-s|> <|s|> * <|s|> inclusive <|s|> ranges <|s|> for <|s|> which <|s|> the <|s|> lte <|s|> rsrp <|s|> boost <|s|> is <|s|> applied <|s|> */ <|nl|>
<|4-s|> private <|s|> final <|s|> Object <|s|> m Lte Rsrp Boost Lock <|s|> = <|s|> new <|s|> Object ( ); <|nl|> <|4-s|> private <|s|> static <|s|> final <|s|> int <|s|> INVALID _ LTE _ EARFCN <|s|> = <|s|> - 1 ; <|nl|>
<|16-s|> update Service State Lte Earfcn Boost ( m New SS , <|s|> get Lte Earfcn ( data Reg State Result ) ); <|nl|>
<|16-s|> service State . set Lte Earfcn Rsrp Boost ( m Lte Rsrp Boost ); <|nl|>
<|16-s|> <|8-s|> conn . set Precise Disconnect Cause ( <|nl|> <|16-s|> <|16-s|> get Precise Disconnect Cause From Reason Info ( reason Info ) ); <|nl|>
<|4-s|> private <|s|> int <|s|> m Precise Disconnect Cause <|s|> = <|s|> 0 ; <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> int <|s|> LOCAL _ ILLEGAL _ STATE <|16-s|> <|12-s|> <|2-s|> = <|s|> 1201 ; <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> int <|s|> LOCAL _ INTERNAL _ ERROR <|16-s|> <|12-s|> <|s|> = <|s|> 1202 ; <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> int <|s|> LOCAL _ IMS _ SERVICE _ DOWN <|16-s|> <|8-s|> <|2-s|> <|s|> = <|s|> 1203 ; <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> int <|s|> LOCAL _ POWER _ OFF <|16-s|> <|16-s|> <|2-s|> = <|s|> 1205 ; <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> int <|s|> LOCAL _ MAX _ CALL _ EXCEEDED <|16-s|> <|8-s|> <|2-s|> = <|s|> 1213 ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> while <|s|> ( true ) <|s|> { <|nl|>
<|16-s|> Log . e ( TAG , <|s|> " error <|s|> communicating <|s|> with <|s|> netd : <|s|> " <|s|> + <|s|> re ); <|nl|>
<|del|> <|nl|>
<|8-s|> get Context ( ) . register Receiver ( m BCMReceiver , <|s|> bt Change Filter ); <|nl|>
<|8-s|> // <|s|> BEGIN <|s|> Android - removed : <|s|> Certificate <|s|> checking <|nl|> <|8-s|> // <|s|> Android <|s|> doesn ' t <|s|> use <|s|> this <|s|> mechanism <|s|> for <|s|> checking <|s|> untrusted <|s|> certificates . <|nl|>
<|16-s|> tear Down ( ); <|nl|> <|16-s|> return ; <|nl|>
<|8-s|> assert True ( Phone Number Utils . compare ( " 2023458246 " , <|s|> " 2023458246 " ) ); <|nl|> <|nl|>
<|nl|> <|8-s|> assert Equals ( " + 18004664114 " , <|s|> Phone Number Utils . format Number To E 164 ( " 800 - GOOG - 114 " , <|s|> " US " ) ); <|nl|>
<|del|> <|nl|>
<|8-s|> private <|s|> void <|s|> process Slc Connected ( ) <|s|> { <|nl|>
<|del|> <|nl|>
<|12-s|> m Wifi Config Store . enable All Networks ( ); <|nl|> <|12-s|> m Wifi Config Store . load Configured Networks ( ); <|nl|>
<|12-s|> m Wifi Config Store . enable All Networks ( ); <|nl|> <|12-s|> m Wifi Config Store . load Configured Networks ( ); <|nl|>
<|8-s|> // <|s|> supporting <|s|> Quick <|s|> Settings <|s|> UI <|s|> component , <|s|> according <|s|> to <|s|> the <|s|> CDD : <|nl|> <|8-s|> // <|s|> http :// source . android . com / compatibility / 7 . 1 / android - 7 . 1 - cdd . html # 3 _ 13 _ quick _ settings <|nl|>
<|4-s|> class <|s|> Advertiser Info <|s|> { <|nl|>
<|del|> <|nl|>
<|16-s|> if <|s|> ( link Addr . get Prefix Length ( ) <|s|> != <|s|> RFC 7421 _ PREFIX _ LENGTH ) <|s|> continue ; <|nl|>
<|del|> <|nl|>
<|8-s|> } <|s|> catch <|s|> ( Remote Exception <|s|> re ) <|s|> { <|nl|> <|12-s|> log Error ( " Unable <|s|> to <|s|> change <|s|> interface <|s|> settings : <|s|> % s " , <|s|> re ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> final <|s|> int <|s|> dialog Type <|s|> = <|s|> get Intent ( ) . get Int Extra ( DIALOG _ TYPE _ KEY , <|s|> INVALID _ PICK ); <|nl|>
<|16-s|> { " + 8112345 * 00000 " , <|s|> " + 8112345 " , <|s|> " + 8112345 * 00000 " } , <|nl|> <|16-s|> { " 12345 * 00000 " , <|s|> " 12346 " , <|s|> " 12346 " } }; <|nl|>
<|4-s|> <|s|> * <|s|> Set <|s|> by <|s|> the <|s|> framework <|s|> to <|s|> indicate <|s|> that <|s|> a <|s|> connection <|s|> has <|s|> an <|s|> active <|s|> RTT <|s|> session <|s|> associated <|s|> with <|nl|> <|4-s|> <|s|> * <|s|> it . <|nl|>
<|4-s|> // <|s|> Max <|s|> number <|s|> of <|s|> HF <|s|> connections <|s|> at <|s|> any <|s|> time <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|16-s|> Log . i ( this , <|s|> " Skipping <|s|> binding <|s|> to <|s|> % s <|s|> - <|s|> doesn ' t <|s|> support <|s|> self - mgd <|s|> calls " , <|nl|> <|16-s|> <|8-s|> m In Call Service Info ); <|nl|> <|16-s|> m Is Connected <|s|> = <|s|> false ; <|nl|> <|16-s|> return <|s|> CONNECTION _ NOT _ SUPPORTED ; <|nl|>
<|16-s|> <|16-s|> <|8-s|> String <|s|> number , <|nl|> <|16-s|> <|16-s|> <|8-s|> Caller Info Async Query . On Query Complete Listener <|s|> listener , <|nl|> <|16-s|> <|16-s|> <|8-s|> Object <|s|> cookie ) <|s|> { <|nl|>
<|4-s|> @ Visible For Testing <|nl|> <|4-s|> public <|s|> static <|s|> final <|s|> int <|s|> NOTIFICATION _ INCOMING _ CALL <|s|> = <|s|> 1 ; <|nl|>
<|del|> <|nl|>
<|8-s|> File Type Detector <|s|> default File Type Detector <|s|> = <|s|> sun . nio . fs . Default File Type Detector . create ( ); <|nl|> <|8-s|> // <|s|> The <|s|> method <|s|> uses <|s|> file <|s|> extensions <|s|> to <|s|> deduce <|s|> mime <|s|> type , <|s|> therefore , <|s|> it <|s|> doesn ' t <|s|> check <|s|> for <|nl|> <|8-s|> // <|s|> file <|s|> existence . <|nl|>
<|4-s|> // <|s|> Package <|s|> name <|s|> for <|s|> platform <|s|> carrier <|s|> config <|s|> app , <|s|> bundled <|s|> with <|s|> system <|s|> image . <|nl|> <|4-s|> private <|s|> final <|s|> String <|s|> m Platform Carrier Config Package ; <|nl|>
<|8-s|> int <|s|> default Val <|s|> = <|s|> ( m System Properties . get ( " ro . tether . denied " ) . equals ( " true " ) <|s|> ? <|s|> 0 <|s|> : <|s|> 1 ); <|nl|>
<|8-s|> } <|nl|>
<|4-s|> <|s|> * <|s|> Wifi Connectivity Helper # get Firmware Roaming Info <|nl|>
<|4-s|> <|s|> * <|s|> Wifi Connectivity Helper # get Firmware Roaming Info <|nl|>
<|4-s|> public <|s|> void <|s|> use Any Bssid To Connect When Firmware Roaming On And Config Has No Bssid Specified ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> void <|s|> no Framework Roaming If Connected And Firmware Roaming Supported ( ) <|s|> { <|nl|>
<|del|> <|nl|>
<|16-s|> sbuf . append ( " <|s|> Firmware <|s|> roaming <|s|> equivalent <|s|> BSSID <|s|> bonus : <|s|> " ) <|nl|>
<|16-s|> int <|s|> data Index <|s|> = <|s|> Os Constants . CAP _ TO _ INDEX ( i ); <|nl|> <|16-s|> int <|s|> cap Mask <|s|> = <|s|> Os Constants . CAP _ TO _ MASK ( i ); <|nl|> <|16-s|> if <|s|> ( ( data [ data Index ] . inheritable <|s|> & <|s|> cap Mask ) <|s|> != <|s|> 0 ) <|s|> { <|nl|>
<|12-s|> if <|s|> ( DBG ) <|s|> Log . d ( TAG , <|s|> " Received <|s|> empty <|s|> country <|s|> code , <|s|> reset <|s|> to <|s|> default <|s|> country <|s|> code " ); <|nl|>
<|4-s|> public <|s|> static <|s|> int <|s|> CAP _ TO _ INDEX ( int <|s|> x ) <|s|> { <|s|> return <|s|> x <|s|> >>> <|s|> 5 ; <|s|> } <|nl|>
<|16-s|> m Network Selector . select Network ( scan Details , <|s|> build Bssid Blacklist ( ) , <|s|> m Wifi Info , <|nl|>
<|4-s|> public <|s|> void <|s|> use Any Bssid To Connect When Firmware Roaming On And Config Has No Bssid Specified ( ) <|s|> { <|nl|>
<|8-s|> m Local Log . log ( log ); <|nl|>
<|16-s|> <|4-s|> m Screen On , <|s|> m Gps Parser , <|s|> m Flashlight Parser , <|s|> m Camera Parser , <|s|> m Wifi Parser , <|nl|> <|16-s|> <|4-s|> m Cpu Parser , <|s|> m Phone Parser ); <|nl|>
<|16-s|> <|4-s|> m Screen On , <|s|> m Gps Parser , <|s|> m Flashlight Parser , <|s|> m Camera Parser , <|s|> m Wifi Parser , <|nl|> <|16-s|> <|4-s|> m Cpu Parser ); <|nl|>
<|12-s|> bind Data ( m Phone Parser , <|s|> R . string . battery _ stats _ phone _ signal _ label , <|nl|> <|16-s|> <|4-s|> R . id . cell _ network _ group ); <|nl|>
<|8-s|> } <|s|> else <|s|> { <|nl|> <|12-s|> // <|s|> With <|s|> platforms <|s|> that <|s|> have <|s|> no <|s|> home <|s|> screen , <|s|> focus <|s|> is <|s|> returned <|s|> to <|s|> something <|s|> else <|s|> that <|s|> is <|nl|> <|12-s|> // <|s|> considered <|s|> a <|s|> completion <|s|> of <|s|> the <|s|> tracked <|s|> activity <|s|> flow , <|s|> and <|s|> hence <|s|> time <|s|> tracking <|s|> is <|nl|> <|12-s|> // <|s|> triggered . <|nl|>
<|s|> * <|s|> will <|s|> fail <|s|> and <|s|> return <|s|> the <|s|> appropriate <|s|> error <|s|> value . <|s|> Ie <|s|> calling <|nl|> <|s|> * <|s|> get Slot Index ( INVALID _ SUBSCRIPTION _ ID ) <|s|> will <|s|> return <|s|> INVALID _ SIM _ SLOT _ INDEX <|s|> and <|s|> calling <|nl|> <|s|> * <|s|> get Sub Info For Subscriber ( INVALID _ SUBSCRIPTION _ ID ) <|s|> will <|s|> return <|s|> null . <|nl|>
<|s|> * <|s|> Any <|s|> setters <|s|> which <|s|> take <|s|> sub Id , <|s|> slot Index <|s|> or <|s|> phone Id <|s|> as <|s|> a <|s|> parameter <|s|> will <|s|> throw <|s|> an <|s|> exception <|s|> if <|s|> the <|nl|>
<|s|> * <|s|> will <|s|> fail <|s|> and <|s|> return <|s|> the <|s|> appropriate <|s|> error <|s|> value . <|s|> Ie <|s|> calling <|s|> get Slot Index ( INVALID _ SUBSCRIPTION _ ID ) <|nl|>
<|4-s|> <|s|> * <|s|> @ param <|s|> slot Index <|s|> the <|s|> slot <|s|> which <|s|> the <|s|> SIM <|s|> is <|s|> inserted <|nl|>
<|16-s|> " <|s|> slot Index : " <|s|> + <|s|> slot Index ); <|nl|>
<|16-s|> " <|s|> slot Index : " <|s|> + <|s|> slot Index ); <|nl|>
<|4-s|> final <|s|> int [ ] [ ] <|s|> m Slot Index To Sub Id ; <|nl|>
<|4-s|> public <|s|> Subscription Info <|s|> get Active Subscription Info For Sim Slot Index ( int <|s|> slot Index , <|s|> String <|s|> cp ) { <|nl|>
<|4-s|> private <|s|> boolean <|s|> is Invalid Slot Id ( int <|s|> slot Index ) <|s|> { <|nl|> <|8-s|> if <|s|> ( slot Index <|s|> < <|s|> 0 <|s|> || <|s|> slot Index <|s|> >= <|s|> m Slot Index To Sub Id . length ) <|s|> return <|s|> true ; <|nl|>
<|4-s|> public <|s|> int [ ] <|s|> get Sub Id ( int <|s|> slot Index ) <|s|> { <|nl|> <|8-s|> if <|s|> ( is Invalid Slot Id ( slot Index ) ) <|s|> { <|nl|>
<|4-s|> public <|s|> void <|s|> set Slot Sub Id ( int <|s|> slot Index , <|s|> int <|s|> sub Id ) <|s|> { <|nl|> <|8-s|> if <|s|> ( is Invalid Slot Id ( slot Index ) ) <|s|> { <|nl|> <|12-s|> throw <|s|> new <|s|> Runtime Exception ( " invalid <|s|> slot <|s|> specified " <|s|> + <|s|> slot Index ); <|nl|>
<|4-s|> public <|s|> Subscription Info <|s|> get Active Subscription Info For Sim Slot Index ( int <|s|> slot Index , <|nl|>
<|4-s|> public <|s|> int [ ] <|s|> get Sub Id ( int <|s|> slot Index ) <|s|> { <|nl|> <|8-s|> if <|s|> ( VDBG ) <|s|> print Stack Trace ( " [ get Sub Id ] + <|s|> slot Index = " <|s|> + <|s|> slot Index ); <|nl|>
<|4-s|> private <|s|> int [ ] <|s|> get Dummy Sub Ids ( int <|s|> slot Index ) <|s|> { <|nl|>
<|12-s|> for <|s|> ( Entry < Integer , <|s|> Integer > <|s|> entry <|s|> : <|s|> s Slot Index To Sub Id . entry Set ( ) ) <|s|> { <|nl|> <|16-s|> pw . println ( " <|s|> s Slot Index To Sub Id [ " <|s|> + <|s|> entry . get Key ( ) <|s|> + <|s|> " ]: <|s|> sub Id = " <|s|> + <|s|> entry . get Value ( ) ); <|nl|>
<|4-s|> final <|s|> int [ ] [ ] <|s|> m Slot Index To Sub Id ; <|nl|>
<|4-s|> public <|s|> Subscription Info <|s|> get Active Subscription Info For Sim Slot Index ( int <|s|> slot Index , <|s|> String <|s|> cp ) { <|nl|>
<|4-s|> private <|s|> boolean <|s|> is Invalid Slot Id ( int <|s|> slot Index ) <|s|> { <|nl|> <|8-s|> if <|s|> ( slot Index <|s|> < <|s|> 0 <|s|> || <|s|> slot Index <|s|> >= <|s|> m Slot Index To Sub Id . length ) <|s|> return <|s|> true ; <|nl|>
<|4-s|> public <|s|> void <|s|> set Slot Sub Id ( int <|s|> slot Index , <|s|> int <|s|> sub Id ) <|s|> { <|nl|> <|8-s|> if <|s|> ( is Invalid Slot Id ( slot Index ) ) <|s|> { <|nl|> <|12-s|> throw <|s|> new <|s|> Runtime Exception ( " invalid <|s|> slot <|s|> specified " <|s|> + <|s|> slot Index ); <|nl|>
<|8-s|> final <|s|> Resources <|s|> r <|s|> = <|s|> context . get Resources ( ); <|nl|>
<|4-s|> <|s|> * <|s|> Returns <|s|> a <|s|> constant <|s|> indicating <|s|> the <|s|> state <|s|> of <|s|> sim <|s|> for <|s|> the <|s|> slot <|s|> index . <|nl|>
<|4-s|> public <|s|> boolean <|s|> on Create ( ) <|s|> { <|nl|> <|8-s|> m Service State <|s|> = <|s|> new <|s|> Service State ( ); <|nl|> <|8-s|> m Service State . set State Out Of Service ( ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> public <|s|> static <|s|> Uri <|s|> get Uri For Field And Sub Id ( String <|s|> field , <|s|> int <|s|> sub Id ) <|s|> { <|nl|>
<|12-s|> /* * <|s|> Python <|s|> doesn ' t <|s|> have <|s|> multi <|s|> map , <|s|> if <|s|> advertise <|s|> data <|s|> should <|s|> repeat <|s|> use <|nl|> <|12-s|> <|2-s|> * <|s|> service Uuid , <|s|> service Uuid 2 , <|s|> service Uuid 3 ... <|s|> . <|s|> For <|s|> that <|s|> use <|s|> " starts With " <|nl|> <|12-s|> <|2-s|> */ <|nl|>
<|12-s|> /* * <|s|> Python <|s|> doesn ' t <|s|> have <|s|> multi <|s|> map , <|s|> if <|s|> advertise <|s|> data <|s|> should <|s|> repeat <|s|> use <|nl|> <|12-s|> <|2-s|> * <|s|> service Uuid , <|s|> service Uuid 2 , <|s|> service Uuid 3 ... <|s|> . <|s|> For <|s|> that <|s|> use <|s|> " starts With " <|nl|> <|12-s|> <|2-s|> */ <|nl|>
<|12-s|> } <|s|> else <|s|> if <|s|> ( key . equals ( " interval " ) ) <|s|> { <|nl|>
<|4-s|> public <|s|> void <|s|> use Any Bssid To Connect When Firmware Roaming On And Config Has No Bssid Specified ( ) <|s|> { <|nl|>
<|12-s|> } <|nl|> <|12-s|> result <|s|> <<= <|s|> 7 ; <|nl|> <|12-s|> result <|s|> |= <|s|> b <|s|> & <|s|> 0 x 7 f ; <|nl|>
<|del|> <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2017 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|8-s|> } <|nl|> <|8-s|> if <|s|> ( passphrase <|s|> != <|s|> null <|s|> && <|s|> passphrase . length ( ) <|s|> != <|s|> 0 ) <|s|> { <|nl|> <|12-s|> req . cipher Type <|s|> = <|s|> get Strongest Cipher Suite Type ( capabilities . supported Cipher Suites ); <|nl|> <|12-s|> req . security Config <|s|> = <|s|> Nan Data Path Security Config . PASSPHRASE ; <|nl|> <|12-s|> convert Native Byte Array To Array List ( passphrase . get Bytes ( ) , <|s|> req . passphrase ); <|nl|> <|8-s|> } <|nl|>
<|4-s|> <|s|> * <|s|> Initiate <|s|> a <|s|> P 2 P <|s|> service <|s|> discovery <|s|> indefinitely . <|nl|> <|4-s|> <|s|> * <|s|> Will <|s|> trigger <|s|> { @ link <|s|> Wifi P 2 p Monitor # P 2 P _ DEVICE _ FOUND _ EVENT } <|s|> on <|s|> finding <|s|> devices . <|nl|>
<|4-s|> private <|s|> Sparse Array < Thread > <|s|> m Threads <|s|> = <|s|> new <|s|> Sparse Array < > ( ); <|nl|> <|4-s|> private <|s|> Atomic Integer <|s|> m Next Connection Id <|s|> = <|s|> new <|s|> Atomic Integer ( 1 ); <|nl|>
<|del|> <|nl|>
<|8-s|> Toast . make Text ( this , <|s|> message . what , <|s|> Toast . LENGTH _ SHORT ) . show ( ); <|nl|> <|8-s|> if <|s|> ( message . what <|s|> != <|s|> R . string . disconnected ) <|s|> { <|nl|> <|12-s|> update Foreground Notification ( message . what ); <|nl|>
<|4-s|> private <|s|> void <|s|> connect ( ) <|s|> { <|nl|>
<|del|> <|nl|>
<|8-s|> // <|s|> Tell <|s|> the <|s|> Adapter Service <|s|> that <|s|> it <|s|> is <|s|> a <|s|> mock <|s|> ( see <|s|> is Mock <|s|> documentation ) <|nl|>
<|4-s|> private <|s|> Phone <|s|> m Phone ; <|nl|>
<|4-s|> <|s|> * <|s|> Firmware <|s|> supports <|s|> controlled <|s|> roaming . <|nl|> <|4-s|> <|s|> * <|s|> Connect <|s|> to <|s|> a <|s|> network <|s|> which <|s|> has <|s|> a <|s|> config <|s|> specified <|s|> BSSID . <|nl|>
<|4-s|> <|s|> * <|s|> Firmware <|s|> does <|s|> not <|s|> support <|s|> controlled <|s|> roaming . <|nl|> <|4-s|> <|s|> * <|s|> Connect <|s|> to <|s|> a <|s|> network <|s|> which <|s|> doesn ' t <|s|> have <|s|> a <|s|> config <|s|> specified <|s|> BSSID . <|nl|>
<|8-s|> verify ( m Wifi State Machine ) . start Connect To Network ( CANDIDATE _ NETWORK _ ID , <|s|> CANDIDATE _ BSSID ); <|nl|>
<|4-s|> <|s|> * <|s|> Firmware <|s|> does <|s|> not <|s|> support <|s|> controlled <|s|> roaming . <|nl|> <|4-s|> <|s|> * <|s|> Connect <|s|> to <|s|> a <|s|> network <|s|> which <|s|> has <|s|> a <|s|> config <|s|> specified <|s|> BSSID . <|nl|>
<|8-s|> verify ( m Wifi State Machine ) . start Connect To Network ( CANDIDATE _ NETWORK _ ID , <|s|> CANDIDATE _ BSSID ); <|nl|>
<|4-s|> public <|s|> synchronized <|s|> void <|s|> set Lockdown ( boolean <|s|> lockdown ) <|s|> { <|nl|>
<|8-s|> m Lockdown <|s|> = <|s|> lockdown ; <|nl|> <|nl|> <|8-s|> // <|s|> Update <|s|> app <|s|> lockdown <|s|> setting <|s|> if <|s|> it <|s|> changed . <|s|> Legacy <|s|> VPN <|s|> lockdown <|s|> status <|s|> is <|s|> controlled <|s|> by <|nl|> <|8-s|> // <|s|> Lockdown Vpn Tracker . is Enabled ( ) <|s|> which <|s|> keeps <|s|> track <|s|> of <|s|> its <|s|> own <|s|> state . <|nl|> <|8-s|> if <|s|> ( m Always On ) <|s|> { <|nl|> <|12-s|> save Always On Package ( ); <|nl|> <|8-s|> } <|nl|>
<|8-s|> final <|s|> List < String > <|s|> exempted Packages <|s|> = <|nl|> <|16-s|> is Null Or Legacy Vpn ( m Package ) <|s|> ? <|s|> null <|s|> : <|s|> Collections . singleton List ( m Package ); <|nl|> <|8-s|> set Vpn Forced With Exemptions Locked ( enforce , <|s|> exempted Packages ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
// <|s|> Android - changed : <|s|> Removed <|s|> Annotated Element <|s|> super - class <|s|> due <|s|> to <|s|> excluded <|s|> support <|nl|> // <|s|> for <|s|> runtime <|s|> type <|s|> annotations <|nl|> public <|s|> interface <|s|> Type Variable < D <|s|> extends <|s|> Generic Declaration > <|s|> extends <|s|> Type <|s|> { <|nl|>
<|4-s|> <|s|> * <|s|> This <|s|> function <|s|> is <|s|> used <|s|> only <|s|> at <|s|> boot <|s|> time <|nl|>
<|8-s|> when ( m Framework Facade . in Storage Manager Crypt Keeper Bounce ( ) ) . then Return ( true ); <|nl|>
<|8-s|> when ( m Framework Facade . in Storage Manager Crypt Keeper Bounce ( ) ) . then Return ( false ); <|nl|>
<|8-s|> when ( m Framework Facade . in Storage Manager Crypt Keeper Bounce ( ) ) . then Return ( false ); <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> int <|s|> SUPPLICANT _ STATE _ CHANGE _ EVENT <|8-s|> = <|s|> BASE <|s|> + <|s|> 6 ; <|nl|>
<|12-s|> m Wifi Monitor . broadcast Pno Scan Result Event ( m Client Interface Name ); <|nl|>
<|16-s|> <|4-s|> || <|s|> carrier Config . get Boolean ( <|nl|> <|16-s|> <|8-s|> Carrier Config Manager . KEY _ HIDE _ ENHANCED _ 4 G _ LTE _ BOOL ) ) <|s|> { <|nl|>
<|16-s|> <|4-s|> || <|s|> carrier Config . get Boolean ( <|nl|> <|16-s|> <|8-s|> Carrier Config Manager . KEY _ HIDE _ ENHANCED _ 4 G _ LTE _ BOOL ) ) <|s|> { <|nl|>
<|8-s|> Network Request <|s|> request <|s|> = <|s|> make Request ( 1 ); <|nl|>
<|8-s|> // <|s|> unregistering <|s|> the <|s|> callback <|s|> should <|s|> make <|s|> it <|s|> registrable <|s|> again . <|nl|>
<|16-s|> <|4-s|> max Blacklist Size ) ); <|nl|>
<|8-s|> m Connectivity Helper . get Firmware Roaming Info ( ); <|nl|> <|8-s|> clear Bssid Blacklist ( ); <|nl|>
<|del|> <|nl|>
<|8-s|> m Local Log . log ( log ); <|nl|>
<|16-s|> <|8-s|> . append ( m Same Bssid Award ) . append ( " , " ); <|nl|>
<|16-s|> <|4-s|> . append ( " , " ); <|nl|>
<|16-s|> <|4-s|> . append ( " , " ); <|nl|>
<|12-s|> test Blocked ( 217 ); <|s|> // <|s|> __ NR _ add _ key <|nl|> <|12-s|> test Blocked ( 219 ); <|s|> // <|s|> __ NR _ keyctl <|nl|> <|12-s|> test Allowed ( 56 ); <|s|> // <|s|> __ NR _ openat <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2017 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|del|> <|nl|>
<|16-s|> <|8-s|> m User Wants Suspend Opt . set ( m Facade . get Integer Setting ( m Context , <|nl|>
<|4-s|> <|s|> * <|s|> This <|s|> will <|s|> reset <|s|> Sap Proxy . <|nl|>
<|nl|> <|12-s|> configs [ index ] <|s|> = <|s|> generate Wifi Config ( id . int Value ( ) , <|s|> 0 , <|s|> ssids [ index ] , <|s|> false , <|s|> true , <|s|> null , <|nl|> <|16-s|> <|4-s|> null , <|s|> securities [ index ] ); <|nl|>
<|nl|> <|12-s|> configs [ index ] <|s|> = <|s|> generate Wifi Config ( id . int Value ( ) , <|s|> 0 , <|s|> ssids [ index ] , <|s|> false , <|s|> true , <|s|> null , <|nl|> <|16-s|> <|4-s|> null , <|s|> securities [ index ] ); <|nl|>
<|4-s|> // <|s|> Android - changed : <|s|> CTS <|s|> and <|s|> Android JUnit Runner <|s|> rely <|s|> on <|s|> specific <|s|> format <|s|> to <|s|> test <|s|> names , <|s|> changing <|nl|> <|4-s|> // <|s|> them <|s|> will <|s|> prevent <|s|> CTS <|s|> and <|s|> Android JUnit Runner <|s|> from <|s|> working <|s|> properly ; <|s|> see <|s|> b / 3654180 9 <|nl|>
<|4-s|> private <|s|> Test Looper <|s|> m Looper ; <|nl|>
<|del|> <|nl|>
<|16-s|> <|4-s|> m Wifi Connection Statistics . num Wifi Manager Join Attempt ++ ; <|nl|> <|16-s|> <|4-s|> boolean <|s|> has Credential Changed <|s|> = <|s|> false ; <|nl|>
<|16-s|> <|4-s|> m Wifi Connection Statistics . num Wifi Manager Join Attempt ++ ; <|nl|> <|16-s|> <|4-s|> boolean <|s|> has Credential Changed <|s|> = <|s|> false ; <|nl|>
<|8-s|> // <|s|> Reset <|s|> the <|s|> | has Ever Connected | <|s|> flag <|s|> if <|s|> the <|s|> credential <|s|> parameters <|s|> changed <|s|> in <|s|> this <|s|> update . <|nl|> <|8-s|> boolean <|s|> has Credential Changed <|s|> = <|nl|> <|16-s|> new Network <|s|> || <|s|> Wifi Configuration Util . has Credential Changed ( <|nl|> <|16-s|> <|8-s|> existing Internal Config , <|s|> new Internal Config ); <|nl|>
<|8-s|> synchronized <|s|> ( m Sap Proxy Lock ) <|s|> { <|nl|>
<|12-s|> @ Override <|nl|> <|12-s|> public <|s|> void <|s|> on Connection Updated ( String <|s|> address , <|s|> int <|s|> interval , <|s|> int <|s|> latency , <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2017 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|del|> <|nl|>
<|4-s|> private <|s|> static <|s|> final <|s|> int <|s|> NETD _ FETCH _ TIMEOUT <|s|> = <|s|> 1000 ; <|s|> // ms <|nl|>
<|8-s|> if <|s|> ( is Netd Alive ( ) ) <|s|> { <|nl|> <|12-s|> Slog . d ( TAG , <|s|> " Ip Sec Service <|s|> is <|s|> ready " ); <|nl|>
<|8-s|> // <|s|> Avoid <|s|> blocking <|s|> the <|s|> system <|s|> server <|s|> to <|s|> do <|s|> this <|nl|> <|8-s|> Thread <|s|> t <|s|> = <|nl|> <|16-s|> new <|s|> Thread ( <|nl|>
<|12-s|> // <|s|> qualify <|s|> as <|s|> the <|s|> user <|s|> leaving <|s|> the <|s|> activity ' s <|s|> flow . <|s|> The <|s|> time <|s|> tracking <|s|> is <|s|> considered <|nl|> <|12-s|> // <|s|> complete <|s|> only <|s|> when <|s|> the <|s|> user <|s|> switches <|s|> to <|s|> another <|s|> activity <|s|> that <|s|> is <|s|> not <|s|> part <|s|> of <|s|> the <|nl|> <|12-s|> // <|s|> tracked <|s|> flow . <|nl|>
<|12-s|> if <|s|> ( m Active Downstreams . offer ( new <|s|> Downstream ( downstream , <|s|> m Next Subnet Id ) ) ) <|s|> { <|nl|> <|16-s|> m Next Subnet Id <|s|> = <|s|> ( short ) <|s|> Math . max ( 0 , <|s|> m Next Subnet Id <|s|> + <|s|> 1 ); <|2-s|> // <|s|> always <|s|> positive <|nl|> <|12-s|> } <|nl|>
<|12-s|> public <|s|> Ip Sec Manager <|s|> create Service ( ) <|s|> { <|nl|>
<|16-s|> IIp Sec Service <|s|> service <|s|> = <|s|> IIp Sec Service . Stub . as Interface ( b ); <|nl|> <|16-s|> return <|s|> new <|s|> Ip Sec Manager ( service ); <|nl|>
<|4-s|> private <|s|> static <|s|> final <|s|> int <|s|> NETD _ FETCH _ TIMEOUT <|s|> = <|s|> 5000 ; <|s|> // ms <|nl|>
<|4-s|> private <|s|> static <|s|> final <|s|> int <|s|> NETD _ FETCH _ TIMEOUT <|s|> = <|s|> 5000 ; <|s|> // ms <|nl|>
<|del|> <|nl|>
<|4-s|> public <|s|> interface <|s|> Prefs <|s|> { <|nl|> <|8-s|> String <|s|> NAME <|s|> = <|s|> " connection " ; <|nl|> <|8-s|> String <|s|> SERVER _ ADDRESS <|s|> = <|s|> " server . address " ; <|nl|> <|8-s|> String <|s|> SERVER _ PORT <|s|> = <|s|> " server . port " ; <|nl|> <|8-s|> String <|s|> SHARED _ SECRET <|s|> = <|s|> " shared . secret " ; <|nl|>
<|4-s|> private <|s|> static <|s|> final <|s|> int <|s|> MAX _ HANDSHAKE _ ATTEMPTS <|s|> = <|s|> 50 ; <|nl|>
<|16-s|> throw <|s|> new <|s|> Illegal State Exception ( " Cannot <|s|> protect <|s|> the <|s|> tunnel " ); <|nl|>
<|16-s|> return <|s|> configure ( new <|s|> String ( packet . array ( ) , <|s|> 1 , <|s|> length <|s|> - <|s|> 1 , <|s|> US _ ASCII ) . trim ( ) ); <|nl|>
<|16-s|> return <|s|> configure ( new <|s|> String ( packet . array ( ) , <|s|> 1 , <|s|> length <|s|> - <|s|> 1 , <|s|> US _ ASCII ) . trim ( ) ); <|nl|>
<|12-s|> } <|s|> catch <|s|> ( Security Exception <|s|> e ) <|s|> { <|nl|>
<|16-s|> Log . e ( TAG , <|s|> " Interrupting <|s|> thread " , <|s|> e ); <|nl|> <|12-s|> } <|s|> catch <|s|> ( IOException <|s|> e ) <|s|> { <|nl|> <|16-s|> Log . e ( TAG , <|s|> " Closing <|s|> VPN <|s|> interface " , <|s|> e ); <|nl|>
<|nl|>
<|del|> <|nl|>
<|12-s|> // <|s|> Android - added : <|s|> Throw <|s|> an <|s|> exception <|s|> when <|s|> the <|s|> underlying <|s|> cipher <|s|> does . <|2-s|> http :// b / 36636576 <|nl|>
<|4-s|> <|s|> * <|s|> @ param <|s|> notify Type <|s|> is <|s|> one <|s|> state <|s|> of <|nl|> <|4-s|> <|s|> * <|12-s|> PS / CS _ * _ ENABLE / DISABLE / <|nl|> <|4-s|> <|s|> * <|12-s|> CS _ REJECT _ CAUSE _ ENABLED / CS _ REJECT _ CAUSE _ DISABLED <|nl|>
<|4-s|> private <|s|> void <|s|> set Notification ( int <|s|> notify Type ) <|s|> { <|nl|>
<|4-s|> public <|s|> void <|s|> prepare For Forced Connection ( int <|s|> net Id ) <|s|> { <|nl|> <|8-s|> local Log ( " prepare For Forced Connection : <|s|> net Id = " <|s|> + <|s|> net Id ); <|nl|>
<|4-s|> <|s|> * <|s|> supplied <|s|> network <|s|> SSID <|s|> and <|s|> security <|s|> information . <|nl|>
<|12-s|> Uid Detail <|s|> uid Detail <|s|> = <|s|> new <|s|> Uid Detail Provider ( context ) . get Uid Detail ( m App Item . key , <|s|> true ); <|nl|> <|12-s|> m Icon <|s|> = <|s|> uid Detail . icon ; <|nl|> <|12-s|> m Label <|s|> = <|s|> uid Detail . label ; <|nl|>
<|12-s|> Uid Detail <|s|> uid Detail <|s|> = <|s|> new <|s|> Uid Detail Provider ( context ) . get Uid Detail ( m App Item . key , <|s|> true ); <|nl|> <|12-s|> m Icon <|s|> = <|s|> uid Detail . icon ; <|nl|> <|12-s|> m Label <|s|> = <|s|> uid Detail . label ; <|nl|>
<|12-s|> old Thread . interrupt ( ); <|nl|>
<|2-s|> public <|s|> static <|s|> final <|s|> Property Id < List < String >> <|s|> BOOST _ LOCK _ CLASSNAME <|s|> = <|nl|>
<|4-s|> if <|s|> ( lock Class . length <|s|> == <|s|> 0 ) <|s|> { <|nl|>
<|4-s|> <|s|> * <|s|> 2 . 5 <|s|> lft . equals ( rgt ) <|s|> returns <|s|> true <|nl|>
<|4-s|> <|s|> * <|s|> 2 . 5 <|s|> lft . equals ( rgt ) <|s|> returns <|s|> true <|nl|>
<|4-s|> <|s|> * <|s|> 2 . 5 <|s|> lft . equals ( rgt ) <|s|> returns <|s|> true <|nl|>
<|16-s|> <|4-s|> Strict Mode . set Thread Policy ( old Policy ); <|nl|>
<|4-s|> <|s|> * <|s|> Non - persistently <|s|> change <|s|> WFC <|s|> enabled <|s|> setting <|s|> and <|s|> WFC <|s|> mode <|s|> for <|s|> slot <|nl|>
<|4-s|> <|s|> * <|s|> Non - persistently <|s|> change <|s|> WFC <|s|> enabled <|s|> setting <|s|> and <|s|> WFC <|s|> mode <|s|> for <|s|> slot <|nl|>
<|4-s|> public <|s|> void <|s|> set Wfc Non Persistent For Slot ( boolean <|s|> enabled , <|s|> int <|s|> wfc Mode ) <|s|> { <|nl|>
<|4-s|> private <|s|> static <|s|> final <|s|> boolean <|s|> DBG <|s|> = <|s|> Log . is Loggable ( TAG , <|s|> Log . DEBUG ); <|nl|>
<|del|> <|nl|>
<|8-s|> return <|s|> o <|s|> instanceof <|s|> Match All Network Specifier ; <|nl|>
<|del|> <|nl|>
<|8-s|> return <|s|> m Network Specifier <|s|> == <|s|> null <|s|> || <|s|> m Network Specifier . satisfied By ( nc . m Network Specifier ) <|nl|> <|16-s|> || <|s|> nc . m Network Specifier <|s|> instanceof <|s|> Match All Network Specifier ; <|nl|>
<|8-s|> if <|s|> ( m Network Specifier <|s|> != <|s|> null <|s|> && <|s|> ! Network Specifier . is Whitelisted Network Specifier ( <|nl|> <|16-s|> m Network Specifier ) ) <|s|> { <|nl|> <|12-s|> throw <|s|> new <|s|> Illegal State Exception ( " Invalid <|s|> network <|s|> specifier " ); <|nl|> <|8-s|> } <|nl|> <|8-s|> dest . write Parcelable ( ( Parcelable ) <|s|> m Network Specifier , <|s|> flags ); <|nl|>
<|8-s|> if <|s|> ( m Network Specifier <|s|> != <|s|> null <|s|> && <|s|> ! Network Specifier . is Whitelisted Network Specifier ( <|nl|> <|16-s|> m Network Specifier ) ) <|s|> { <|nl|> <|12-s|> throw <|s|> new <|s|> Illegal State Exception ( " Invalid <|s|> network <|s|> specifier " ); <|nl|> <|8-s|> } <|nl|> <|8-s|> dest . write Parcelable ( ( Parcelable ) <|s|> m Network Specifier , <|s|> flags ); <|nl|>
<|8-s|> Preconditions . check String Not Empty ( specifier ); <|nl|>
<|8-s|> return <|s|> equals ( other ); <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2017 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|8-s|> if <|s|> ( other <|s|> == <|s|> null ) <|s|> return <|s|> false ; <|nl|>
<|4-s|> private <|s|> Ip Sec Service ( Context <|s|> context ) <|s|> { <|nl|>
<|4-s|> static <|s|> Ip Sec Service <|s|> create ( Context <|s|> context ) <|s|> throws <|s|> Interrupted Exception <|s|> { <|nl|> <|8-s|> final <|s|> Ip Sec Service <|s|> service <|s|> = <|s|> new <|s|> Ip Sec Service ( context ); <|nl|>
<|del|> <|nl|>
<|4-s|> private <|s|> final <|s|> Sparse Array < Spi Record > <|s|> m Spi Records <|s|> = <|s|> new <|s|> Sparse Array < > ( ); <|nl|> <|4-s|> private <|s|> final <|s|> Sparse Array < Transform Record > <|s|> m Transform Records <|s|> = <|s|> new <|s|> Sparse Array < > ( ); <|nl|>
<|8-s|> return <|s|> ret Bundle ; <|nl|>
<|4-s|> public <|s|> Bundle <|s|> create Transport Mode Transform ( Ip Sec Config <|s|> c , <|s|> IBinder <|s|> binder ) <|s|> { <|nl|> <|8-s|> // <|s|> TODO : <|s|> Basic <|s|> input <|s|> validation <|s|> here <|s|> since <|s|> it ' s <|s|> coming <|s|> over <|s|> the <|s|> Binder <|nl|>
<|8-s|> for <|s|> ( int <|s|> direction <|s|> : <|s|> DIRECTIONS ) <|s|> { <|nl|>
<|16-s|> <|4-s|> ret Bundle . put Int ( <|nl|> <|16-s|> <|12-s|> Ip Sec Transform . KEY _ RESOURCE _ ID , <|s|> Ip Sec Transform . INVALID _ RESOURCE _ ID ); <|nl|>
<|16-s|> <|4-s|> ret Bundle . put Int ( <|nl|> <|16-s|> <|12-s|> Ip Sec Transform . KEY _ RESOURCE _ ID , <|s|> Ip Sec Transform . INVALID _ RESOURCE _ ID ); <|nl|>
<|8-s|> synchronized <|s|> ( m Transform Records ) <|s|> { <|nl|> <|12-s|> Transform Record <|s|> record ; <|nl|>
<|12-s|> // <|s|> TODO : <|s|> if <|s|> release Resources ( ) <|s|> throws <|s|> Remote Exception , <|s|> we <|s|> can <|s|> try <|s|> again <|s|> to <|s|> clean <|s|> up <|s|> on <|s|> binder <|s|> death . <|nl|> <|12-s|> // <|s|> Need <|s|> to <|s|> make <|s|> sure <|s|> that <|s|> path <|s|> is <|s|> actually <|s|> functional <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> <|s|> * <|s|> The <|s|> reason <|s|> code <|s|> if <|s|> there <|s|> is <|s|> no <|s|> error <|s|> during <|s|> authentication . <|nl|> <|4-s|> <|s|> * <|s|> It <|s|> could <|s|> also <|s|> imply <|s|> that <|s|> there <|s|> no <|s|> authentication <|s|> in <|s|> progress , <|nl|> <|4-s|> <|s|> * <|s|> this <|s|> reason <|s|> code <|s|> also <|s|> serves <|s|> as <|s|> a <|s|> reset <|s|> value . <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> if <|s|> ( m Network Specifier <|s|> != <|s|> null <|s|> && <|s|> ! Network Specifier . is Whitelisted Network Specifier ( <|nl|> <|16-s|> m Network Specifier ) ) <|s|> { <|nl|> <|12-s|> throw <|s|> new <|s|> Illegal State Exception ( " Invalid <|s|> network <|s|> specifier " ); <|nl|> <|8-s|> } <|nl|> <|8-s|> dest . write Parcelable ( ( Parcelable ) <|s|> m Network Specifier , <|s|> flags ); <|nl|>
<|s|> * <|s|> class <|s|> via <|s|> other <|s|> APIs . <|nl|> <|s|> * <|nl|> <|s|> * <|s|> @ hide <|nl|>
<|16-s|> <|8-s|> ( ( call . is Self Managed ( ) <|s|> != <|s|> foreground Call . is Self Managed ( ) ) <|s|> || <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2017 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|4-s|> * <|16-s|> <|4-s|> <|s|> advertisement <|s|> is <|s|> connectable , <|s|> three <|s|> bytes <|s|> will <|s|> be <|s|> added <|s|> for <|s|> flags . <|nl|>
<|4-s|> * <|16-s|> <|4-s|> <|s|> advertisement <|s|> is <|s|> connectable , <|s|> three <|s|> bytes <|s|> will <|s|> be <|s|> added <|s|> for <|s|> flags . <|nl|>
<|4-s|> <|s|> * <|s|> @ deprecated <|s|> Use <|s|> { @ link <|s|> Subscription Manager . ACTION _ DEFAULT _ SUBSCRIPTION _ CHANGED } <|nl|>
<|4-s|> <|s|> * <|s|> @ deprecated <|s|> Use <|s|> { @ link <|s|> Subscription Manager . ACTION _ DEFAULT _ SMS _ SUBSCRIPTION _ CHANGED } <|nl|>
<|8-s|> final <|s|> int <|s|> initial Rotation <|s|> = <|s|> 4 <|s|> - <|s|> rotation Step ; <|nl|> <|8-s|> set Device Rotation ( initial Rotation ); <|nl|>
<|12-s|> throw <|s|> new <|s|> Illegal Argument Exception ( " Invalid <|s|> network <|s|> specifier " ); <|nl|>
<|16-s|> } <|s|> catch <|s|> ( Exception <|s|> e ) <|s|> { <|nl|> <|16-s|> <|4-s|> Log . e ( TAG , <|s|> " Exception : <|s|> e = " <|s|> + <|s|> e ); <|nl|>
<|8-s|> if <|s|> ( is Ims Connection ( ) ) <|s|> { <|nl|> <|12-s|> Ims Phone <|s|> ims Phone <|s|> = <|s|> ( Ims Phone ) <|s|> get Phone ( ); <|nl|>
<|8-s|> if <|s|> ( ! is Ims Connection ( ) ) <|s|> { <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2017 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|8-s|> // <|s|> Match All Network Specifier <|s|> is <|s|> taken <|s|> care <|s|> in <|s|> Network Capabilities # satisfied By Specifier . <|nl|> <|8-s|> return <|s|> equals ( other ); <|nl|>
<|4-s|> public <|s|> static <|s|> List < String > <|s|> get Time Zone Ids With Unique Offsets ( String <|s|> country ) <|s|> { <|nl|>
<|16-s|> return <|s|> " on Start Rtt " ; <|nl|> <|12-s|> case <|s|> ON _ RTT _ REQUEST _ RESPONSE : <|nl|> <|16-s|> return <|s|> " on Rtt Request Response " ; <|nl|> <|12-s|> case <|s|> ON _ STOP _ RTT : <|nl|> <|16-s|> return <|s|> " on Stop Rtt " ; <|nl|>
<|del|> <|nl|>
<|16-s|> Log . e ( TAG , <|s|> " Failed <|s|> to <|s|> delete <|s|> SPI <|s|> reservation <|s|> with <|s|> ID : <|s|> " <|s|> + <|s|> m Resource Id ); <|nl|>
<|12-s|> throw <|s|> new <|s|> Remote Exception ( " Failed <|s|> to <|s|> Get <|s|> Netd <|s|> Instance " ); <|nl|>
<|12-s|> int <|s|> direction , <|s|> String <|s|> remote Address , <|s|> int <|s|> requested Spi , <|s|> IBinder <|s|> binder ) <|nl|> <|12-s|> throws <|s|> Remote Exception <|s|> { <|nl|>
<|4-s|> public <|s|> Bundle <|s|> create Transport Mode Transform ( Ip Sec Config <|s|> c , <|s|> IBinder <|s|> binder ) <|nl|> <|12-s|> throws <|s|> Remote Exception <|s|> { <|nl|>
<|12-s|> // <|s|> We <|s|> want <|s|> to <|s|> non - destructively <|s|> get <|s|> so <|s|> that <|s|> we <|s|> can <|s|> check <|s|> credentials <|s|> before <|s|> removing <|nl|> <|12-s|> // <|s|> this <|s|> from <|s|> the <|s|> records . <|nl|>
<|12-s|> if <|s|> ( record . pid <|s|> != <|s|> Binder . get Calling Pid ( ) <|s|> || <|s|> record . uid <|s|> != <|s|> Binder . get Calling Uid ( ) ) <|s|> { <|nl|>
<|12-s|> // <|s|> TODO : <|s|> if <|s|> release Resources ( ) <|s|> throws <|s|> Remote Exception , <|s|> we <|s|> can <|s|> try <|s|> again <|s|> to <|s|> clean <|s|> up <|s|> on <|nl|> <|12-s|> // <|s|> binder <|s|> death . <|s|> Need <|s|> to <|s|> make <|s|> sure <|s|> that <|s|> path <|s|> is <|s|> actually <|s|> functional . <|nl|>
<|4-s|> public <|s|> void <|s|> apply Transport Mode Transform ( Parcel File Descriptor <|s|> socket , <|s|> int <|s|> resource Id ) <|nl|> <|12-s|> throws <|s|> Remote Exception <|s|> { <|nl|>
<|4-s|> public <|s|> void <|s|> remove Transport Mode Transform ( Parcel File Descriptor <|s|> socket , <|s|> int <|s|> resource Id ) <|nl|> <|12-s|> throws <|s|> Remote Exception <|s|> { <|nl|>
<|del|> <|nl|>
<|4-s|> Ip Sec Config ( ) <|s|> { } <|nl|>
import <|s|> static <|s|> android . net . Ip Sec Manager . INVALID _ RESOURCE _ ID ; <|nl|> import <|s|> static <|s|> android . net . Ip Sec Manager . KEY _ STATUS ; <|nl|> import <|s|> static <|s|> android . net . Ip Sec Manager . KEY _ RESOURCE _ ID ; <|nl|>
<|del|> <|nl|>
<|4-s|> private <|s|> void <|s|> check Result Status And Throw ( int <|s|> status ) <|nl|>
<|4-s|> private <|s|> void <|s|> check Result Status And Throw ( int <|s|> status ) <|nl|>
<|4-s|> private <|s|> Atomic Integer <|s|> m Next Resource Id <|s|> = <|s|> new <|s|> Atomic Integer ( 0 x 00 FADED 0 ); <|nl|>
<|12-s|> pid <|s|> = <|s|> Binder . get Calling Pid ( ); <|nl|> <|12-s|> uid <|s|> = <|s|> Binder . get Calling Uid ( ); <|nl|>
<|12-s|> for <|s|> ( int <|s|> direction <|s|> : <|s|> DIRECTIONS ) <|s|> { <|nl|>
<|16-s|> <|4-s|> Log . e ( TAG , <|s|> " Failed <|s|> to <|s|> delete <|s|> SA <|s|> with <|s|> ID : <|s|> " <|s|> + <|s|> m Resource Id ); <|nl|>
<|12-s|> // <|s|> TODO : <|s|> Add <|s|> appropriate <|s|> checks <|s|> when <|s|> other <|s|> Service Specific Exception <|s|> types <|s|> are <|s|> supported <|nl|> <|12-s|> ret Bundle . put Int ( KEY _ STATUS , <|s|> Ip Sec Manager . Status . SPI _ UNAVAILABLE ); <|nl|> <|12-s|> ret Bundle . put Int ( KEY _ RESOURCE _ ID , <|s|> resource Id ); <|nl|> <|12-s|> ret Bundle . put Int ( KEY _ SPI , <|s|> spi ); <|nl|>
<|12-s|> // <|s|> We <|s|> want <|s|> to <|s|> non - destructively <|s|> get <|s|> so <|s|> that <|s|> we <|s|> can <|s|> check <|s|> credentials <|s|> before <|s|> removing <|nl|> <|12-s|> // <|s|> this <|s|> from <|s|> the <|s|> records . <|nl|>
<|12-s|> // <|s|> TODO : <|s|> if <|s|> release Resources ( ) <|s|> throws <|s|> Remote Exception , <|s|> we <|s|> can <|s|> try <|s|> again <|s|> to <|s|> clean <|s|> up <|s|> on <|s|> binder <|s|> death . <|nl|> <|12-s|> // <|s|> Need <|s|> to <|s|> make <|s|> sure <|s|> that <|s|> path <|s|> is <|s|> actually <|s|> functional <|nl|>
<|16-s|> for <|s|> ( int <|s|> direction <|s|> : <|s|> DIRECTIONS ) <|s|> { <|nl|>
<|4-s|> private <|s|> static <|s|> final <|s|> boolean <|s|> DBG <|s|> = <|s|> Log . is Loggable ( TAG , <|s|> Log . DEBUG ); <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2017 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|4-s|> public <|s|> void <|s|> test Alloc Spi ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|>
<|del|> <|nl|>
<|8-s|> Ip Sec Manager . Security Parameter Index <|s|> in Spi <|s|> = <|nl|> <|16-s|> m ISM . reserve Security Parameter Index ( <|nl|> <|16-s|> <|8-s|> Ip Sec Transform . DIRECTION _ IN , <|s|> local , <|s|> out Spi . get Spi ( ) ); <|nl|>
<|12-s|> debug Log ( " acl State Change Callback : <|s|> Adapter <|s|> State : <|s|> " <|nl|> <|16-s|> <|4-s|> + <|s|> Bluetooth Adapter . name For State ( state ) <|s|> + <|s|> " <|s|> Connected : <|s|> " <|s|> + <|s|> device ); <|nl|>
<|16-s|> return <|s|> match ; <|nl|>
<|del|> <|nl|>
<|8-s|> validate ( " < timezones > \ n " <|nl|>
<|8-s|> Time Zone Finder <|s|> finder <|s|> = <|s|> validate ( " < timezones > \ n " <|nl|>
<|del|> <|nl|>
<|12-s|> for <|s|> ( int <|s|> direction <|s|> : <|s|> DIRECTIONS ) <|s|> { <|nl|>
<|12-s|> random Spi <|s|> = <|nl|> <|16-s|> <|4-s|> m ISM . reserve Security Parameter Index ( <|nl|> <|16-s|> <|12-s|> Ip Sec Transform . DIRECTION _ OUT , <|nl|> <|16-s|> <|12-s|> addr , <|nl|> <|16-s|> <|12-s|> Ip Sec Manager . INVALID _ SECURITY _ PARAMETER _ INDEX ); <|nl|> <|12-s|> assert True ( random Spi . get Spi ( ) <|s|> != <|s|> Ip Sec Manager . INVALID _ SECURITY _ PARAMETER _ INDEX ); <|nl|>
<|16-s|> m ISM . reserve Security Parameter Index ( <|nl|> <|16-s|> <|8-s|> Ip Sec Transform . DIRECTION _ OUT , <|nl|> <|16-s|> <|8-s|> local , <|nl|> <|16-s|> <|8-s|> Ip Sec Manager . INVALID _ SECURITY _ PARAMETER _ INDEX ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|12-s|> return <|s|> set Network Specifier Object ( Text Utils . is Empty ( network Specifier ) <|s|> ? <|s|> null <|nl|> <|16-s|> <|4-s|> : <|s|> new <|s|> String Network Specifier ( network Specifier ) ); <|nl|>
<|8-s|> public <|s|> Builder <|s|> set Network Specifier Object ( Network Specifier <|s|> network Specifier ) <|s|> { <|nl|>
<|s|> * <|s|> Applications <|s|> cannot <|s|> instantiate <|s|> this <|s|> class <|s|> by <|s|> themselves , <|s|> but <|s|> can <|s|> obtain <|s|> instances <|s|> of <|nl|> <|s|> * <|s|> subclasses <|s|> of <|s|> this <|s|> class <|s|> via <|s|> other <|s|> APIs . <|nl|>
<|del|> <|nl|>
<|8-s|> m Wifi Controller . send Message ( CMD _ WIFI _ TOGGLED ); <|nl|>
<|s|> * <|s|> @ see <|8-s|> <|2-s|> java . util . Locale <|nl|> <|s|> * <|s|> @ see <|8-s|> <|2-s|> Decimal Format <|nl|> <|s|> * <|s|> @ author <|4-s|> <|2-s|> <|s|> Mark <|s|> Davis <|nl|> <|s|> * <|s|> @ author <|4-s|> <|2-s|> <|s|> Alan <|s|> Liu <|nl|>
<|8-s|> } <|s|> catch <|s|> ( IOException <|s|> e ) <|s|> { <|nl|> <|12-s|> fail ( " Exception <|s|> creating <|s|> file <|s|> / data / misc / bluetooth / test . file : <|s|> " <|s|> + <|s|> e ); <|nl|>
<|4-s|> /* * <|s|> Tests <|s|> that <|s|> a <|s|> distro <|s|> with <|s|> a <|s|> bad <|s|> tzlookup <|s|> file <|s|> will <|s|> not <|s|> update <|s|> the <|s|> content . <|s|> */ <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|12-s|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> length ; <|s|> i ++ ) <|s|> { <|nl|> <|16-s|> char <|s|> c <|s|> = <|s|> symbol . char At ( i ); <|nl|>
<|16-s|> final <|s|> char <|s|> c <|s|> = <|s|> symbol . char At ( i ); <|nl|>
<|16-s|> <|16-s|> <|8-s|> <|s|> // <|s|> when <|s|> RNDIS <|s|> is <|s|> enabled <|nl|> <|nl|>
<|12-s|> tether State . m State Machine . send Message ( Tether Interface State Machine . CMD _ TETHER _ REQUESTED ); <|nl|>
<|16-s|> <|16-s|> <|8-s|> <|s|> // <|s|> when <|s|> RNDIS <|s|> is <|s|> enabled <|nl|> <|nl|>
<|12-s|> m Active Downstreams . offer ( downstream ); <|nl|>
<|16-s|> m Deprecated Info Tracker . remove Prefixes ( new Params . prefixes ); <|nl|> <|16-s|> m Deprecated Info Tracker . remove Dnses ( new Params . dnses ); <|nl|>
<|4-s|> public <|s|> void <|s|> working Local Only Hotspot ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|>
<|8-s|> // <|s|> per - interface <|s|> state <|s|> machine <|s|> to <|s|> start <|s|> up , <|s|> and <|s|> telling <|s|> us <|s|> that <|nl|> <|8-s|> // <|s|> hotspot <|s|> mode <|s|> is <|s|> to <|s|> be <|s|> started . <|nl|>
<|8-s|> if <|s|> ( m Network Specifier <|s|> != <|s|> null <|s|> && <|s|> ! m Network Specifier . equals ( nc . m Network Specifier ) ) <|s|> { <|nl|>
<|8-s|> set Network Specifier ( nc . m Network Specifier ); <|nl|>
<|nl|> <|8-s|> Match All Network Specifier . check Not Match All Network Specifier ( <|nl|> <|16-s|> network Capabilities . get Network Specifier ( ) ); <|nl|> <|nl|>
<|nl|> <|8-s|> Match All Network Specifier . check Not Match All Network Specifier ( <|nl|> <|16-s|> network Capabilities . get Network Specifier ( ) ); <|nl|> <|nl|>
<|nl|> <|8-s|> Match All Network Specifier . check Not Match All Network Specifier ( <|nl|> <|16-s|> network Capabilities . get Network Specifier ( ) ); <|nl|> <|nl|>
<|8-s|> public <|s|> void <|s|> set Network Specifier ( Network Specifier <|s|> network Specifier ) <|s|> { <|nl|> <|12-s|> m Network Capabilities . set Network Specifier ( network Specifier ); <|nl|>
<|8-s|> Network Request <|s|> r Bar <|s|> = <|s|> new Wifi Request Builder ( ) . set Network Specifier ( <|nl|> <|16-s|> new <|s|> String Network Specifier ( " bar " ) ) . build ( ); <|nl|>
<|8-s|> m Wi Fi Network Agent . set Network Specifier ( new <|s|> String Network Specifier ( " foo " ) ); <|nl|>
<|8-s|> m Wi Fi Network Agent . set Network Specifier ( new <|s|> String Network Specifier ( " bar " ) ); <|nl|>
<|12-s|> fail ( " Parceling <|s|> a <|s|> non - parcelable <|s|> specifier <|s|> did <|s|> not <|s|> throw <|s|> an <|s|> exception " ); <|nl|>
<|12-s|> try <|s|> { <|nl|> <|16-s|> sub Id <|s|> = <|s|> Integer . parse Int ( ( ( String Network Specifier ) <|s|> specifier ) . specifier ); <|nl|> <|12-s|> } <|s|> catch <|s|> ( Number Format Exception <|s|> e ) <|s|> { <|nl|> <|16-s|> Rlog . e ( LOG _ TAG , <|s|> " Number Format Exception <|s|> on <|s|> " <|nl|> <|16-s|> <|8-s|> + <|s|> ( ( String Network Specifier ) <|s|> specifier ) . specifier ); <|nl|> <|16-s|> sub Id <|s|> = <|s|> INVALID _ SUBSCRIPTION _ ID ; <|nl|> <|12-s|> } <|nl|>
<|del|> <|nl|>
<|8-s|> Preconditions . check Argument Nonnegative ( new Size ); <|nl|> <|8-s|> if <|s|> ( new Size <|s|> <= <|s|> m Values . length ) <|s|> { <|nl|> <|12-s|> Arrays . fill ( m Values , <|s|> new Size , <|s|> m Values . length , <|s|> 0 ); <|nl|> <|8-s|> } <|s|> else <|s|> { <|nl|> <|12-s|> ensure Capacity ( new Size <|s|> - <|s|> m Size ); <|nl|>
<|8-s|> } <|nl|> <|8-s|> m Size <|s|> = <|s|> new Size ; <|nl|>
<|8-s|> } <|nl|> <|8-s|> m Size <|s|> = <|s|> new Size ; <|nl|>
<|8-s|> } <|nl|> <|8-s|> m Size <|s|> = <|s|> new Size ; <|nl|>
<|del|> <|nl|>
<|4-s|> xi [ 2 ] <|s|> = <|s|> 0 x 8000000 1 ; <|nl|>
<|del|> <|nl|>
<|4-s|> @ Rpc ( description <|s|> = <|s|> " Request <|s|> a <|s|> Wi - Fi <|s|> Aware <|s|> network " ) <|nl|>
<|8-s|> if <|s|> ( network Request . network Capabilities . get Network Specifier ( ) <|s|> instanceof <|nl|> <|16-s|> String Network Specifier ) <|s|> { <|nl|> <|12-s|> String <|s|> ns <|s|> = <|nl|> <|16-s|> <|4-s|> ( ( String Network Specifier ) <|s|> network Request . network Capabilities <|nl|> <|16-s|> <|12-s|> . get Network Specifier ( ) ) . specifier ; <|nl|>
<|12-s|> network Request . network Capabilities . set Network Specifier ( <|nl|> <|16-s|> <|4-s|> Wifi Aware Manager Facade . get Network Specifier ( j ) ); <|nl|>
<|12-s|> network Request . network Capabilities . set Network Specifier ( <|nl|> <|16-s|> <|4-s|> Wifi Aware Manager Facade . get Network Specifier ( j ) ); <|nl|>
<|16-s|> Log . d ( TAG , <|s|> " insert : <|s|> no <|s|> sub Id <|s|> provided <|s|> in <|s|> uri " ); <|nl|> <|16-s|> throw <|s|> e ; <|nl|>
<|8-s|> // <|s|> Don ' t <|s|> pick <|s|> the <|s|> subnet - router <|s|> anycast <|s|> address , <|s|> since <|s|> that <|s|> might <|s|> be <|nl|> <|8-s|> // <|s|> in <|s|> use <|s|> on <|s|> the <|s|> upstream <|s|> already . <|nl|>
<|16-s|> <|4-s|> final <|s|> Mode <|s|> mode <|s|> = <|s|> ( Mode ) <|s|> message . obj ; <|nl|>
<|nl|> <|8-s|> a . resize ( 2 ); <|nl|> <|8-s|> assert Equals ( 0 , <|s|> backing Array [ 2 ] ); <|nl|> <|8-s|> assert Equals ( 0 , <|s|> backing Array [ 3 ] ); <|nl|> <|nl|>
<|nl|> <|8-s|> a . resize ( 2 ); <|nl|> <|8-s|> assert Equals ( 0 , <|s|> backing Array [ 2 ] ); <|nl|> <|8-s|> assert Equals ( 0 , <|s|> backing Array [ 3 ] ); <|nl|> <|nl|>
<|8-s|> } <|s|> catch <|s|> ( Spi Unavailable Exception <|s|> unlikely ) <|s|> { <|nl|> <|12-s|> throw <|s|> new <|s|> Resource Unavailable Exception ( " No <|s|> SPIs <|s|> available " ); <|nl|>
<|8-s|> } <|s|> catch <|s|> ( Spi Unavailable Exception <|s|> unlikely ) <|s|> { <|nl|> <|12-s|> throw <|s|> new <|s|> Resource Unavailable Exception ( " No <|s|> SPIs <|s|> available " ); <|nl|>
<|12-s|> i Address <|s|> = <|s|> Inet Address . get Local Host ( ); <|nl|>
<|4-s|> int [ ] <|s|> xx <|s|> = <|s|> new <|s|> int [ 2 ]; <|nl|> <|4-s|> int [ ] <|s|> yy <|s|> = <|s|> new <|s|> int [ 469 ]; <|nl|> <|4-s|> reduc ( xx , <|s|> yy ); <|nl|>
<|16-s|> log ( " is Phone State Idle <|s|> false : <|s|> Voice <|s|> call <|s|> active <|s|> on <|s|> phone <|s|> " <|s|> + <|s|> i ); <|nl|>
<|16-s|> Log . wtf ( TAG , <|s|> " Unknown <|s|> interface <|s|> state : <|s|> " <|s|> + <|s|> requested State ); <|nl|> <|16-s|> return ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> private <|s|> final <|s|> Hash Set < Tether Interface State Machine > <|s|> m Forwarded Downstreams ; <|nl|>
<|16-s|> Log . wtf ( TAG , <|s|> " Unknown <|s|> interface <|s|> state : <|s|> " <|s|> + <|s|> state ); <|nl|>
<|12-s|> m Is Merge Call Supported <|s|> = <|s|> is Carrier Merge Call Supported ( ); <|nl|> <|12-s|> m Is Merge Ims Call Supported <|s|> = <|s|> is Carrier Merge Ims Call Supported ( ); <|nl|>
<|4-s|> public <|s|> Unit Test <|s|> m Test ; <|nl|>
<|t|> <|4-s|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> reachable Obj Num ; <|s|> i ++ ) <|s|> { <|nl|>
<|8-s|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> unreachable Obj Num ; <|s|> i ++ ) <|s|> { <|nl|>
<|8-s|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> unreachable Obj Num ; <|s|> i ++ ) <|s|> { <|nl|>
<|del|> <|nl|>
public <|s|> final <|s|> class <|s|> Wifi Aware Network Specifier <|s|> extends <|s|> Network Specifier <|s|> implements <|s|> Parcelable <|s|> { <|nl|>
<|8-s|> /* <|s|> variables <|s|> to <|s|> accumulate <|s|> attrs <|s|> */ <|nl|>
<|16-s|> <|8-s|> Log . w ( TAG , <|s|> " invalid <|s|> attribute <|s|> id <|s|> is <|s|> requested : <|s|> " <|s|> + <|s|> attrib Id ); <|nl|>
<|8-s|> } <|nl|> <|8-s|> final <|s|> Network Agent Info <|s|> default Nai <|s|> = <|s|> get Default Network ( ); <|nl|> <|8-s|> if <|s|> ( default Nai <|s|> != <|s|> null <|s|> && <|s|> default Nai . network . net Id <|s|> == <|s|> net Id ) <|s|> { <|nl|> <|12-s|> set Default Dns System Properties ( dnses ); <|nl|> <|8-s|> } <|nl|>
<|8-s|> <|s|> * <|s|> A <|s|> " | " <|s|> separated <|s|> list <|s|> of <|s|> URLs <|s|> used <|s|> for <|s|> captive <|s|> portal <|s|> detection <|s|> in <|s|> addition <|s|> to <|s|> the <|nl|> <|8-s|> <|s|> * <|s|> fallback <|s|> HTTP <|s|> url <|s|> associated <|s|> with <|s|> the <|s|> CAPTIVE _ PORTAL _ FALLBACK _ URL <|s|> settings . <|nl|>
<|8-s|> String <|s|> first Url <|s|> = <|s|> get Setting ( context , <|nl|> <|16-s|> Settings . Global . CAPTIVE _ PORTAL _ FALLBACK _ URL , <|s|> DEFAULT _ FALLBACK _ URL ); <|nl|>
// <|s|> Android - changed : <|s|> removed <|s|> Value Based <|s|> paragraph . <|nl|>
<|16-s|> secondary Phy <|s|> != <|s|> Bluetooth Device . PHY _ LE _ 2 M <|s|> && <|nl|>
<|8-s|> // <|s|> BEGIN <|s|> Android - changed : <|s|> implement <|s|> using <|s|> android . icu . text . Time Zone Names <|nl|>
<|del|> <|nl|>
<|16-s|> is Ringer Audible <|s|> || <|s|> ( is Hfp Device Attached <|s|> && <|s|> should Ring For Contact ) <|s|> || <|s|> is Self Managed ; <|nl|>
<|12-s|> Log . i ( this , <|s|> " start Ringing : <|s|> skipping <|s|> because <|s|> ringer <|s|> would <|s|> not <|s|> be <|s|> audible . <|s|> " <|s|> + <|nl|> <|16-s|> <|4-s|> " is Volume Over Zero = % s , <|s|> should Ring For Contact = % s , <|s|> is Ringtone Present = % s " , <|nl|> <|16-s|> <|4-s|> is Volume Over Zero , <|s|> should Ring For Contact , <|s|> is Ringtone Present ); <|nl|>
<|8-s|> int <|s|> idx <|s|> = <|s|> Math . abs ( m Next Fallback Url Index ) <|s|> % <|s|> m Captive Portal Fallback Urls . length ; <|nl|> <|8-s|> m Next Fallback Url Index <|s|> += <|s|> new <|s|> Random ( ) . next Int ( ); <|s|> // <|s|> randomely <|s|> change <|s|> url <|s|> without <|s|> memory . <|nl|>
<|12-s|> m TSIBinder . is In Call ( " blah " ); <|nl|> <|12-s|> fail ( ); <|nl|>
<|12-s|> m TSIBinder . is In Managed Call ( " blah " ); <|nl|> <|12-s|> fail ( ); <|nl|>
<|16-s|> <|8-s|> ( actual <|s|> == <|s|> ( i <|s|> & <|s|> ~ INET _ ECN _ MASK ) ); <|s|> // <|s|> IP _ TOS : <|s|> ECN <|s|> bits <|s|> should <|s|> be <|s|> 0 <|nl|>
<|8-s|> // <|s|> Android - removed : <|s|> Logic <|s|> dealing <|s|> with <|s|> value <|s|> type <|s|> moved <|s|> to <|s|> socket Set Option . <|nl|>
<|12-s|> /* <|s|> check <|s|> type <|s|> safety <|s|> b 4 <|s|> going <|s|> native . <|2-s|> These <|s|> should <|s|> never <|nl|>
<|12-s|> <|s|> * <|nl|>
<|16-s|> /* <|s|> true <|s|> only <|s|> if <|s|> disabling <|s|> - <|s|> enabling <|s|> should <|s|> be <|s|> Integer <|s|> * <|nl|>
<|8-s|> // <|s|> Android - removed : <|s|> Logic <|s|> dealing <|s|> with <|s|> value <|s|> type <|s|> moved <|s|> to <|s|> socket Get Option . <|nl|>
<|8-s|> /* <|nl|>
<|8-s|> <|s|> * <|nl|>
<|4-s|> // <|s|> Android - changed : <|s|> Method <|s|> signature <|s|> changed , <|s|> socket { Get , Set } Option <|s|> work <|s|> directly <|s|> with <|s|> Object <|nl|> <|4-s|> // <|s|> values . <|nl|>
<|4-s|> System . out . println ( test ( ) ); <|nl|>
<|12-s|> throw <|s|> new <|s|> Illegal Argument Exception ( " Priority <|s|> out <|s|> of <|s|> range : <|s|> " <|s|> + <|s|> new Priority ); <|nl|>
<|4-s|> if <|s|> ( do Disable Reporting <|s|> == <|s|> null ) <|s|> { <|nl|>
<|4-s|> <|2-s|> do Enable Reporting <|s|> = <|s|> testwatcher _ class . get Declared Method ( " Enable Reporting " ); <|nl|> <|4-s|> <|2-s|> do Disable Reporting <|s|> = <|s|> testwatcher _ class . get Declared Method ( " Disable Reporting " ); <|nl|>
<|2-s|> public <|s|> static <|s|> void <|s|> Simd Mul Add ( int [ ] <|s|> array 1 , <|s|> int [ ] <|s|> array 2 ) <|s|> { <|nl|>
<|4-s|> <|2-s|> array 2 [ j ] <|s|> += <|s|> 12345 <|s|> * <|s|> array 1 [ j ]; <|nl|>
<|4-s|> <|2-s|> array 2 [ j ] <|s|> += <|s|> 12345 <|s|> * <|s|> array 1 [ j ]; <|nl|>
<|16-s|> if <|s|> ( result <|s|> != <|s|> null ) <|s|> { <|nl|> <|16-s|> <|4-s|> Async Result . for Message ( result , <|s|> null , <|nl|> <|16-s|> <|12-s|> Command Exception . from Ril Errno ( REQUEST _ NOT _ SUPPORTED ) ); <|nl|> <|16-s|> <|4-s|> result . send To Target ( ); <|nl|> <|16-s|> } <|nl|>
<|8-s|> } <|nl|> <|8-s|> Link Properties <|s|> lp <|s|> = <|s|> get Link Properties ( nai ); <|nl|> <|8-s|> if <|s|> ( is Network With Link Properties Blocked ( lp , <|s|> uid , <|s|> false ) ) <|s|> { <|nl|> <|12-s|> return ; <|nl|> <|8-s|> } <|nl|> <|8-s|> nai . network Monitor . send Message ( Network Monitor . CMD _ FORCE _ REEVALUATION , <|s|> uid ); <|nl|>
<|del|> <|nl|>
<|12-s|> // <|s|> We <|s|> may <|s|> be <|s|> presenting <|s|> a <|s|> queue <|s|> with <|s|> only <|s|> 1 <|s|> item <|s|> ( the <|s|> current <|s|> one ) <|nl|> <|12-s|> int <|s|> count <|s|> = <|s|> media Controller . get Metadata ( ) <|s|> != <|s|> null <|s|> ? <|s|> 1 <|s|> : <|s|> 0 ; <|nl|> <|12-s|> m Media Interface . get Total Num Of Items Rsp ( bdaddr , <|s|> Avrcp Constants . RSP _ NO _ ERROR , <|s|> 0 , <|s|> count ); <|nl|>
<|12-s|> if <|s|> ( wifi Security <|s|> == <|s|> Wifi Security . PSK <|nl|> <|16-s|> <|4-s|> && <|s|> password . length ( ) <|s|> < <|s|> Form Page Displayer . PSK _ MIN _ LENGTH ) <|s|> { <|nl|>
<|8-s|> Util . set Short ( buffer , <|s|> ( short ) <|s|> 0 , <|s|> ( short ) <|s|> 0 ); <|nl|>
<|12-s|> Ims Phone Connection <|s|> original Connection <|s|> = <|s|> ( Ims Phone Connection ) <|s|> m Original Connection ; <|nl|> <|12-s|> original Connection . send Rtt Modify Request ( text Stream ); <|nl|>
<|8-s|> return <|s|> result ; <|nl|>
<|del|> <|nl|>
<|nl|>
<|12-s|> final <|s|> short <|s|> thirty Seconds In Milliseconds <|s|> = <|s|> 0 x 7530 ; <|s|> // <|s|> = <|s|> 1000 <|s|> * <|s|> 30 <|nl|>
<|del|> <|nl|>
<|8-s|> update Switch Preference ( m Bt Hci Snoop Log , <|s|> System Properties . get Boolean ( <|nl|> <|16-s|> BLUETOOTH _ BTSNOOP _ ENABLE _ PROPERTY , <|s|> false ) ); <|nl|>
<|16-s|> <|8-s|> String <|s|> address <|s|> = <|s|> Utils . get Address String From Byte ( m Address ); <|nl|> <|16-s|> <|8-s|> debug Log ( " Address <|s|> is : " <|s|> + <|s|> address ); <|nl|> <|16-s|> <|8-s|> intent <|s|> = <|s|> new <|s|> Intent ( Bluetooth Adapter . ACTION _ BD _ ADDR _ CHANGED ); <|nl|> <|16-s|> <|8-s|> intent . put Extra ( Bluetooth Adapter . EXTRA _ BD _ ADDR , <|s|> address ); <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> String <|s|> ACTION _ BD _ ADDR _ CHANGED <|s|> = <|nl|> <|8-s|> " android . bluetooth . adapter . action . BD _ ADDR _ CHANGED " ; <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> String <|s|> ACTION _ BD _ ADDR _ CHANGED <|s|> = <|nl|> <|8-s|> " android . bluetooth . adapter . action . BD _ ADDR _ CHANGED " ; <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> String <|s|> EXTRA _ BD _ ADDR <|s|> = <|nl|> <|8-s|> <|2-s|> " android . bluetooth . adapter . extra . BD _ ADDR " ; <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> String <|s|> EXTRA _ BD _ ADDR <|s|> = <|nl|> <|8-s|> <|2-s|> " android . bluetooth . adapter . extra . BD _ ADDR " ; <|nl|>
<|16-s|> <|4-s|> if <|s|> ( DBG ) <|s|> Slog . d ( TAG , <|s|> " Bluetooth <|s|> Adapter <|s|> MAC <|s|> Address <|s|> changed <|s|> to <|s|> " <|s|> + <|s|> new Address ); <|nl|>
<|16-s|> <|4-s|> if <|s|> ( DBG ) <|s|> Slog . e ( TAG , <|s|> " No <|s|> Bluetooth <|s|> Adapter <|s|> MAC <|s|> Address <|s|> parameter <|s|> found " ); <|nl|>
<|8-s|> /* <|s|> retrieve <|s|> NMR 1 <|s|> AOSP <|s|> service _ contexts <|s|> file <|s|> from <|s|> jar <|s|> */ <|nl|> <|8-s|> if <|s|> ( ! is File Starts With ( aosp Svc File , <|s|> device Svc File ) ) <|s|> { <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2017 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|16-s|> return <|s|> Consts . SW _ WRONG _ KEY ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|2-s|> // / <|s|> CHECK - DAG : <|4-s|> <|s|> Vec Multiply Accumulate <|s|> kind : Add <|s|> loop : << Loop >> <|4-s|> <|2-s|> outer _ loop : none <|nl|> <|nl|> <|2-s|> // / <|s|> CHECK - START - ARM 64 : <|s|> void <|s|> Main . Simd Mul Add ( int [ ] , <|s|> int [ ] ) <|s|> instruction _ simplifier _ arm 64 <|s|> ( after ) <|nl|> <|2-s|> // / <|s|> CHECK - NOT : <|4-s|> <|s|> Vec Mull <|nl|> <|2-s|> // / <|s|> CHECK - NOT : <|4-s|> <|s|> Vec Add <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2017 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|8-s|> cleanup ( ); <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2017 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|16-s|> <|4-s|> <|2-s|> <|s|> + <|s|> line <|s|> + <|s|> " \ n " , <|nl|> <|16-s|> <|4-s|> <|2-s|> <|s|> line . equals ( " equal " ) <|s|> || <|s|> line . equals ( " subset " ) ); <|nl|>
<|2-s|> protected <|s|> abstract <|s|> boolean <|s|> is Desugar Enabled ( ); <|nl|>
<|8-s|> input 1 D <|s|> = <|s|> Allocation . create Sized ( RS , <|nl|> <|16-s|> <|16-s|> <|8-s|> <|s|> Element . U 8 ( RS ) , <|nl|> <|16-s|> <|16-s|> <|8-s|> <|s|> width <|s|> * <|s|> height , <|nl|> <|16-s|> <|16-s|> <|8-s|> <|s|> Allocation . USAGE _ SCRIPT ); <|nl|>
<|del|> <|nl|>
<|16-s|> Log . d ( TAG , <|s|> " Notification <|s|> cancel <|s|> " <|s|> + <|s|> m Device . get Address ( ) <|s|> + <|s|> " <|s|> ( " <|s|> + <|nl|>
<|del|> <|nl|>
<|4-s|> public <|s|> static <|s|> List < String > <|s|> get Time Zone Ids With Unique Offsets ( String <|s|> country ) <|s|> { <|nl|>
<|4-s|> <|s|> * <|s|> When <|s|> Carrier Config <|s|> KEY _ CARRIER _ VOLTE _ OVERRIDE _ WFC _ PROVISIONING _ BOOL <|s|> is <|s|> true , <|s|> and <|s|> Vo LTE <|s|> is <|s|> not <|nl|>
<|4-s|> <|s|> * <|s|> When <|s|> Carrier Config <|s|> KEY _ CARRIER _ VOLTE _ OVERRIDE _ WFC _ PROVISIONING _ BOOL <|s|> is <|s|> true , <|s|> and <|s|> Vo LTE <|s|> is <|s|> not <|nl|>
<|8-s|> Array List < String > <|s|> available List <|s|> = <|s|> new <|s|> Array List < String > ( ); <|nl|> <|8-s|> Array List < String > <|s|> active List <|s|> = <|s|> new <|s|> Array List < String > ( ); <|nl|> <|8-s|> Array List < String > <|s|> errored List <|s|> = <|s|> new <|s|> Array List < String > ( ); <|nl|>
<|4-s|> long <|s|> m Timeout Ms <|s|> = <|s|> 100 ; <|s|> // <|s|> non - final <|s|> so <|s|> that <|s|> tests <|s|> can <|s|> adjust <|s|> the <|s|> value . <|nl|>
<|8-s|> Nsd Service Info <|s|> request <|s|> = <|s|> new <|s|> Nsd Service Info ( " a _ name " , <|s|> " a _ type " ); <|nl|> <|8-s|> Nsd Service Info <|s|> reply <|s|> = <|s|> new <|s|> Nsd Service Info ( " resolved _ name " , <|s|> " resolved _ type " ); <|nl|>
<|8-s|> public <|s|> static <|s|> Mock Service Handler <|s|> create ( Context <|s|> context ) <|s|> { <|nl|>
<|16-s|> // <|s|> Another <|s|> message <|s|> associated <|s|> with <|s|> that <|s|> key <|s|> notified <|s|> the <|s|> listener <|s|> first . <|nl|> <|16-s|> // <|s|> This <|s|> is <|s|> expected <|s|> for <|s|> replies <|s|> and <|s|> timeouts <|s|> to <|s|> resolve Service ( ) . <|nl|>
<|4-s|> <|s|> * <|s|> Intent <|s|> used <|s|> to <|s|> broadcast <|s|> the <|s|> change <|s|> in <|s|> the <|s|> Bluetooth <|s|> address <|nl|> <|4-s|> <|s|> * <|s|> of <|s|> the <|s|> local <|s|> Bluetooth <|s|> adapter . <|nl|>
<|4-s|> <|s|> * <|s|> # EXTRA _ BLUETOOTH _ ADDRESS } <|s|> containing <|s|> the <|s|> Bluetooth <|s|> address . <|nl|>
<|4-s|> <|s|> * <|s|> Bluetooth <|s|> address . <|nl|>
<|16-s|> <|4-s|> if <|s|> ( DBG ) <|s|> Slog . d ( TAG , <|s|> " Bluetooth <|s|> Adapter <|s|> address <|s|> changed <|s|> to <|s|> " <|s|> + <|s|> new Address ); <|nl|>
<|16-s|> <|4-s|> if <|s|> ( DBG ) <|s|> Slog . e ( TAG , <|s|> " No <|s|> Bluetooth <|s|> Adapter <|s|> address <|s|> parameter <|s|> found " ); <|nl|>
<|8-s|> filter <|s|> = <|s|> new <|s|> Intent Filter ( Bluetooth Adapter . ACTION _ BLUETOOTH _ ADDRESS _ CHANGED ); <|nl|> <|8-s|> filter . set Priority ( Intent Filter . SYSTEM _ HIGH _ PRIORITY ); <|nl|> <|8-s|> m Context . register Receiver ( m Receiver , <|s|> filter ); <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> String <|s|> ACTION _ BLUETOOTH _ ADDRESS _ CHANGED <|s|> = <|nl|> <|8-s|> " android . bluetooth . adapter . action . BLUETOOTH _ ADDRESS _ CHANGED " ; <|nl|>
<|4-s|> @ Override <|nl|> <|4-s|> public <|s|> void <|s|> on Create ( ) <|s|> { <|nl|> <|4-s|> } <|nl|>
<|4-s|> <|s|> * <|s|> @ deprecated <|s|> This <|s|> method <|s|> suffers <|s|> from <|s|> a <|s|> potential <|s|> integer <|s|> overflow <|s|> and <|s|> may <|s|> be <|s|> removed <|s|> or <|nl|> <|4-s|> <|s|> * <|4-s|> <|s|> changed <|s|> in <|s|> a <|s|> future <|s|> release . <|s|> See <|s|> < a <|s|> href = " http :// bugs . icu - project . org / trac / ticket / 11632 " > <|nl|> <|4-s|> <|s|> * <|4-s|> <|s|> ICU <|s|> ticket <|s|> # 11632 </ a > <|s|> for <|s|> details . <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2017 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|s|> * <|s|> < tr > < td > Android <|s|> O </ td > <|nl|>
<|4-s|> // <|s|> Test <|s|> we <|s|> will <|s|> bind <|s|> fine <|s|> if <|s|> we <|s|> make <|s|> no <|s|> changes . <|nl|>
<|del|> <|nl|>
<|4-s|> private <|s|> void <|s|> ensure Valid Network Specifier ( Network Capabilities <|s|> nc ) <|s|> { <|nl|> <|8-s|> if <|s|> ( nc <|s|> == <|s|> null ) <|s|> { <|nl|> <|12-s|> return ; <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2017 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|del|> <|nl|>
<|8-s|> } <|nl|> <|8-s|> qtaguid Reader . close ( ); <|nl|>
<|8-s|> return <|s|> m Ims Manager . is Volte Enabled By Platform For Slot ( ); <|nl|>
<|s|> * <|s|> A <|s|> utility <|s|> class <|s|> for <|s|> handling <|s|> unsigned <|s|> integers <|s|> and <|s|> unsigned <|s|> arithmetics , <|s|> as <|s|> well <|s|> as <|s|> syntactic <|nl|> <|s|> * <|s|> sugar <|s|> methods <|s|> for <|s|> Byte Buffer . <|s|> Useful <|s|> for <|s|> networking <|s|> and <|s|> packet <|s|> manipulations . <|nl|>
<|16-s|> <|4-s|> ite . get Cause ( ) . get Class ( ) . get Name ( ) <|s|> + <|s|> " : <|s|> " <|s|> + <|s|> ite . get Cause ( ) . get Message ( ) ); <|nl|>
<|4-s|> <|s|> * <|s|> @ deprecated <|s|> This <|s|> method <|s|> suffers <|s|> from <|s|> a <|s|> potential <|s|> integer <|s|> overflow <|s|> and <|s|> may <|s|> be <|s|> removed <|s|> in <|s|> a <|nl|> <|4-s|> <|s|> * <|4-s|> <|s|> future <|s|> release . <|s|> Overriding <|s|> this <|s|> method <|s|> in <|s|> subclasses <|s|> will <|s|> not <|s|> have <|s|> the <|s|> desired <|s|> effect . <|nl|> <|4-s|> <|s|> * <|4-s|> <|s|> See <|s|> ICU <|s|> ticket <|s|> # 11632 . <|nl|>
<|4-s|> <|s|> * <|s|> @ deprecated <|s|> This <|s|> method <|s|> suffers <|s|> from <|s|> a <|s|> potential <|s|> integer <|s|> overflow <|s|> and <|s|> may <|s|> be <|s|> removed <|s|> in <|s|> a <|nl|> <|4-s|> <|s|> * <|4-s|> <|s|> future <|s|> release . <|s|> Overriding <|s|> this <|s|> method <|s|> in <|s|> subclasses <|s|> will <|s|> not <|s|> have <|s|> the <|s|> desired <|s|> effect . <|nl|> <|4-s|> <|s|> * <|4-s|> <|s|> See <|s|> ICU <|s|> ticket <|s|> # 11632 . <|nl|>
<|del|> <|nl|>
<|4-s|> // <|s|> BEGIN <|s|> Android - removed : <|s|> unused <|s|> code <|nl|>
<|16-s|> start Wps ( ); <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> long <|s|> INVALID _ VALUE _ PARAMETER <|s|> = <|s|> - 1 ; <|nl|>
<|del|> <|nl|>
<|12-s|> /* <|s|> Here <|s|> we <|s|> might <|s|> have <|s|> changed <|s|> crucial <|s|> data , <|s|> hence <|s|> reset <|s|> DB <|s|> identifier <|s|> */ <|nl|>
<|12-s|> /* <|s|> We <|s|> will <|s|> continue <|s|> the <|s|> process <|s|> when <|s|> we <|s|> receive <|nl|> <|12-s|> <|s|> * <|s|> Bluetooth Device . ACTION _ CONNECTION _ ACCESS _ REPLY <|s|> from <|s|> Settings <|s|> app . <|s|> */ <|nl|>
<|del|> <|nl|>
<|16-s|> <|4-s|> /* <|s|> ' p ' <|s|> and <|s|> ' w ' <|s|> are <|s|> the <|s|> standard <|s|> characters <|s|> for <|s|> pause <|s|> and <|s|> wait <|nl|> <|16-s|> <|4-s|> <|s|> * <|s|> ( see <|s|> RFC <|s|> 3601 ) <|s|> so <|s|> use <|s|> those <|s|> when <|s|> exporting <|s|> phone <|s|> numbers <|s|> via <|s|> v Card . */ <|nl|>
<|16-s|> <|4-s|> /* <|s|> ' p ' <|s|> and <|s|> ' w ' <|s|> are <|s|> the <|s|> standard <|s|> characters <|s|> for <|s|> pause <|s|> and <|s|> wait <|nl|> <|16-s|> <|4-s|> <|s|> * <|s|> ( see <|s|> RFC <|s|> 3601 ) <|s|> so <|s|> use <|s|> those <|s|> when <|s|> exporting <|s|> phone <|s|> numbers <|s|> via <|s|> v Card . */ <|nl|>
<|16-s|> <|8-s|> Log . d ( TAG , <|s|> " bit . prop . equals <|s|> current <|s|> prop <|s|> : " <|s|> + <|s|> prop ); <|nl|>
<|16-s|> <|4-s|> Log . d ( TAG , <|s|> " checking <|s|> for <|s|> prop <|s|> : " <|s|> + <|s|> bit . prop ); <|nl|>
<|16-s|> <|12-s|> Log . d ( TAG , <|s|> " bit . prop . equals <|s|> current <|s|> prop <|s|> : " <|s|> + <|s|> bit . prop ); <|nl|>
<|12-s|> // <|s|> fetch <|s|> Pbap <|s|> Params <|s|> to <|s|> check <|s|> if <|s|> significant <|s|> change <|s|> has <|s|> happened <|s|> to <|s|> Database <|nl|> <|12-s|> Bluetooth Pbap Utils . fetch Pbap Params ( m Context ); <|nl|> <|nl|>
<|8-s|> if <|s|> ( bonded Devices <|s|> == <|s|> null ) <|s|> { <|nl|> <|12-s|> Log . e ( TAG , <|s|> " Bonded <|s|> devices <|s|> list <|s|> is <|s|> null " ); <|nl|> <|12-s|> return <|s|> false ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> Set < Bluetooth Device > <|s|> bonded Devices <|s|> = <|s|> m Bluetooth Adapter . get Bonded Devices ( ); <|nl|> <|8-s|> if <|s|> ( bonded Devices <|s|> == <|s|> null ) <|s|> return <|s|> false ; <|nl|> <|8-s|> for <|s|> ( Bluetooth Device <|s|> bd <|s|> : <|s|> bonded Devices ) <|s|> { <|nl|>
<|12-s|> Log . v ( TAG , <|s|> " Not Play <|s|> is <|s|> specified <|s|> for <|s|> baseline <|s|> case <|s|> that <|s|> only <|s|> Bluetooth <|s|> is <|s|> on " ); <|nl|>
<|8-s|> // <|s|> play Time <|s|> and <|s|> music Url <|s|> are <|s|> necessary <|nl|>
<|8-s|> // <|s|> TODO : <|s|> disconnect <|s|> client 1 <|nl|> <|8-s|> // <|s|> TODO : <|s|> disconnect <|s|> client 2 <|nl|>
<|8-s|> assert File Contents ( UNICODE _ STRING . get Bytes ( Charset . default Charset ( ) ) , <|s|> test File ); <|nl|>
<|12-s|> Print Stream <|s|> print Stream <|s|> = <|s|> new <|s|> Print Stream ( bos , <|s|> true <|s|> /* <|s|> auto Flush <|s|> */ , <|s|> " utf - 8 " ); <|nl|>
<|12-s|> pw . print ( " No <|s|> active <|s|> Apf Filter " ); <|nl|> <|12-s|> pw . println ( ( provisioning Config <|s|> != <|s|> null ) <|nl|> <|16-s|> <|4-s|> ? <|s|> " ; <|s|> provisioned <|s|> capabilities : <|s|> " <|s|> + <|s|> provisioning Config . m Apf Capabilities <|nl|> <|16-s|> <|4-s|> : <|s|> " " ); <|nl|>
<|12-s|> pw . print ( " No <|s|> active <|s|> Apf Filter " ); <|nl|> <|12-s|> pw . println ( ( provisioning Config <|s|> != <|s|> null ) <|nl|> <|16-s|> <|4-s|> ? <|s|> " ; <|s|> provisioned <|s|> capabilities : <|s|> " <|s|> + <|s|> provisioning Config . m Apf Capabilities <|nl|> <|16-s|> <|4-s|> : <|s|> " " ); <|nl|>
<|8-s|> pw . println ( Objects . to String ( provisioning Config , <|s|> " N / A " ) ); <|nl|>
<|12-s|> key <|s|> = <|s|> next Listener Key ( ); <|nl|>
<|12-s|> results . put Int ( " set Id " , <|s|> set Index ); <|nl|>
<|8-s|> Class Loader <|s|> class Loader <|s|> = <|s|> null ; <|nl|> <|8-s|> if <|s|> ( System . get Property ( " java . vendor " ) . contains ( " Android " ) ) <|s|> { <|nl|> <|12-s|> class Loader <|s|> = <|s|> get Class Loader Initialized With Dex File ( ); <|nl|> <|8-s|> } <|s|> else <|s|> { <|nl|> <|12-s|> class Loader <|s|> = <|s|> get Class Loader Initialized With Class File ( ); <|nl|> <|8-s|> } <|nl|>
<|4-s|> <|s|> * <|s|> This <|s|> simplifies <|s|> dealing <|s|> with <|s|> multiple <|s|> dex <|s|> files <|s|> in <|s|> the <|s|> Android <|nl|> <|4-s|> <|s|> * <|s|> build <|s|> system <|s|> and <|s|> with <|s|> Jack <|s|> which <|s|> discards <|s|> the <|s|> JSR 45 <|s|> metadata . <|nl|>
<|nl|> <|4-s|> public <|s|> void <|s|> test Can Start ( ) <|s|> { <|nl|>
<|12-s|> if <|s|> ( ( length <|s|> == <|s|> 10 <|s|> || <|s|> length <|s|> == <|s|> 26 <|s|> || <|s|> length <|s|> == <|s|> 32 <|s|> || <|s|> length <|s|> == <|s|> 58 ) <|nl|>
<|12-s|> } <|s|> else <|s|> if <|s|> ( length <|s|> == <|s|> 5 <|s|> || <|s|> length <|s|> == <|s|> 13 <|s|> || <|s|> length <|s|> == <|s|> 16 <|s|> || <|s|> length <|s|> == <|s|> 29 ) <|s|> { <|nl|>
<|4-s|> long [ ] <|s|> expected _ 1 <|s|> = <|s|> { 5 L , <|s|> 7 L , <|s|> 7 L , <|s|> 7 L , <|s|> 7 L , <|s|> 7 L , <|s|> 7 L , <|s|> 7 L , <|s|> 7 L }; <|nl|>
<|8-s|> return <|s|> suggestions . get Result ( ); <|nl|>
<|12-s|> // <|s|> sure <|s|> we <|s|> are <|s|> not <|s|> interpreting <|s|> all <|s|> their <|s|> code <|s|> in <|s|> that <|s|> process . <|nl|>
<|8-s|> // <|s|> Source Debug Extension <|s|> metadata <|s|> can <|s|> be <|s|> reported <|s|> back <|s|> to <|s|> the <|s|> debugger . <|nl|>
<|12-s|> " android . telephony . mbms . action . DOWNLOAD _ RESULT _ INTERNAL " ; <|nl|>
<|4-s|> <|s|> * <|s|> The <|s|> MBMS <|s|> middleware <|s|> should <|s|> send <|s|> this <|s|> when <|s|> it <|s|> wishes <|s|> to <|s|> clean <|s|> up <|s|> temp <|2-s|> files <|s|> in <|s|> the <|s|> app ' s <|nl|> <|4-s|> <|s|> * <|s|> filesystem . <|s|> Mandatory <|s|> extras <|s|> are : <|nl|>
<|12-s|> " android . telephony . mbms . action . CLEANUP " ; <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> String <|s|> EXTRA _ RESULT <|s|> = <|s|> " android . telephony . mbms . extra . RESULT " ; <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> String <|s|> EXTRA _ PAUSED _ LIST <|s|> = <|s|> " android . telephony . mbms . extra . PAUSED _ LIST " ; <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> String <|s|> EXTRA _ PAUSED _ LIST <|s|> = <|s|> " android . telephony . mbms . extra . PAUSED _ LIST " ; <|nl|>
<|4-s|> private <|s|> final <|s|> IMbms Download Manager Callback <|s|> m Callback ; <|nl|>
<|4-s|> private <|s|> Mbms Download Manager ( Context <|s|> context , <|s|> IMbms Download Manager Callback <|s|> callback , <|nl|>
<|4-s|> private <|s|> Mbms Streaming Manager ( Context <|s|> context , <|s|> IMbms Streaming Manager Callback <|s|> listener , <|nl|> <|16-s|> <|4-s|> String <|s|> streaming App Name , <|s|> int <|s|> subscription Id ) <|s|> { <|nl|>
<|4-s|> private <|s|> Mbms Streaming Manager ( Context <|s|> context , <|s|> IMbms Streaming Manager Callback <|s|> listener , <|nl|> <|16-s|> <|4-s|> String <|s|> streaming App Name , <|s|> int <|s|> subscription Id ) <|s|> { <|nl|>
<|del|> <|nl|>
<|nl|> <|4-s|> private <|s|> static <|s|> final <|s|> String <|s|> TYPE _ NAME <|s|> = <|s|> " name " ; <|nl|> <|4-s|> private <|s|> static <|s|> final <|s|> String <|s|> TYPE _ PHONE <|s|> = <|s|> " phone " ; <|nl|> <|4-s|> private <|s|> static <|s|> final <|s|> String <|s|> TYPE _ EMAIL <|s|> = <|s|> " email " ; <|nl|> <|4-s|> private <|s|> static <|s|> final <|s|> String <|s|> TYPE _ ADDRESS <|s|> = <|s|> " address " ; <|nl|> <|nl|>
<|12-s|> // <|s|> For <|s|> 464 xlat <|s|> traffic , <|s|> xt _ qtaguid <|s|> sees <|s|> every <|s|> IPv 4 <|s|> packet <|s|> twice , <|s|> once <|s|> as <|s|> a <|s|> native <|s|> IPv 4 <|nl|> <|12-s|> // <|s|> packet <|s|> on <|s|> the <|s|> stacked <|s|> interface , <|s|> and <|s|> once <|s|> as <|s|> translated <|s|> to <|s|> an <|s|> IPv 6 <|s|> packet <|s|> on <|s|> the <|nl|>
<|12-s|> // <|s|> packet <|s|> needs <|s|> to <|s|> be <|s|> subtracted <|s|> from <|s|> the <|s|> root <|s|> UID <|s|> on <|s|> the <|s|> base <|s|> interface <|s|> both <|s|> for <|s|> tx <|nl|>
<|12-s|> // <|s|> packet <|s|> needs <|s|> to <|s|> be <|s|> subtracted <|s|> from <|s|> the <|s|> root <|s|> UID <|s|> on <|s|> the <|s|> base <|s|> interface <|s|> both <|s|> for <|s|> tx <|nl|>
<|12-s|> // <|s|> packet <|s|> needs <|s|> to <|s|> be <|s|> subtracted <|s|> from <|s|> the <|s|> root <|s|> UID <|s|> on <|s|> the <|s|> base <|s|> interface <|s|> both <|s|> for <|s|> tx <|nl|>
<|12-s|> // <|s|> packet <|s|> needs <|s|> to <|s|> be <|s|> subtracted <|s|> from <|s|> the <|s|> root <|s|> UID <|s|> on <|s|> the <|s|> base <|s|> interface <|s|> both <|s|> for <|s|> tx <|nl|>
<|del|> <|nl|>
<|8-s|> // <|s|> To <|s|> account <|s|> correctly <|s|> for <|s|> on - the - wire <|s|> traffic , <|s|> add <|s|> the <|s|> 20 <|s|> additional <|s|> bytes <|s|> difference <|nl|>
<|4-s|> // <|s|> TODO : <|s|> to <|s|> improve <|s|> testability <|s|> and <|s|> avoid <|s|> global <|s|> state , <|s|> do <|s|> no <|s|> use <|s|> a <|s|> static <|s|> variable . <|nl|>
<|16-s|> <|8-s|> adjust . rx Bytes <|s|> -= <|s|> ( entry . rx Bytes <|s|> + <|s|> entry . rx Packets <|s|> * <|s|> IPV 4 V 6 _ HEADER _ DELTA ); <|nl|> <|16-s|> <|8-s|> adjust . tx Bytes <|s|> -= <|s|> ( entry . tx Bytes <|s|> + <|s|> entry . tx Packets <|s|> * <|s|> IPV 4 V 6 _ HEADER _ DELTA ); <|nl|>
<|8-s|> int <|s|> nsd State <|s|> = <|s|> is Enabled <|s|> ? <|s|> Nsd Manager . NSD _ STATE _ ENABLED <|s|> : <|s|> Nsd Manager . NSD _ STATE _ DISABLED ; <|nl|> <|8-s|> intent . put Extra ( Nsd Manager . EXTRA _ NSD _ STATE , <|s|> nsd State ); <|nl|>
<|8-s|> for <|s|> ( Object <|s|> key Object <|s|> : <|s|> bc . key Set ( ) ) <|s|> { <|nl|> <|12-s|> String <|s|> key <|s|> = <|s|> ( String ) <|s|> key Object ; <|nl|>
<|del|> <|nl|>
<|12-s|> // <|s|> BEGIN <|s|> Android - added : <|s|> AVA : <|s|> Support <|s|> Der Value <|s|> hex <|s|> strings <|s|> that <|s|> contain <|s|> ' <|s|> ' <|s|> or <|s|> ' \ n ' <|nl|>
<|12-s|> // <|s|> END <|s|> Android - added : <|s|> AVA : <|s|> Support <|s|> Der Value <|s|> hex <|s|> strings <|s|> that <|s|> contain <|s|> ' <|s|> ' <|s|> or <|s|> ' \ n ' <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> } <|nl|> <|nl|>
<|4-s|> // <|s|> BEGIN <|s|> Android - changed : <|s|> Specify <|s|> Class <|s|> objects <|s|> rather <|s|> for <|s|> oid Map <|s|> rather <|s|> than <|s|> String <|nl|> <|4-s|> // <|s|> literals <|s|> + <|s|> reflection . <|nl|>
<|del|> <|nl|>
<|8-s|> // <|s|> BEGIN <|s|> Android - changed : <|s|> Keep <|s|> sort <|s|> order <|s|> of <|s|> RDN <|s|> from <|s|> Android <|s|> M <|nl|>
<|s|> * <|s|> Boot <|s|> completed <|s|> receiver . <|s|> used <|s|> to <|s|> disable <|s|> the <|s|> application <|s|> if <|s|> the <|s|> device <|s|> doesn ' t <|nl|>
<|8-s|> if <|s|> ( Intent . ACTION _ BOOT _ COMPLETED . equals ( action ) ) <|s|> { <|nl|>
<|12-s|> if <|s|> ( ! pm . has System Feature ( Package Manager . FEATURE _ NFC _ ANY ) ) <|s|> { <|nl|>
<|12-s|> Network Stats . Entry <|s|> adjust <|s|> = <|nl|>
<|4-s|> <|s|> * <|s|> @ return <|s|> libavb <|s|> version <|s|> in <|s|> bootloader . <|s|> Format <|s|> is <|s|> { @ code <|s|> x . y } . <|nl|>
<|12-s|> if <|s|> ( ! m Initialized <|s|> || <|s|> color <|s|> != <|s|> m Color <|s|> || <|s|> mode <|s|> != <|s|> m Mode <|s|> || <|s|> on MS <|s|> != <|s|> m On MS <|s|> || <|nl|> <|16-s|> <|4-s|> off MS <|s|> != <|s|> m Off MS <|s|> || <|s|> m Brightness Mode <|s|> != <|s|> brightness Mode ) <|s|> { <|nl|>
<|12-s|> key <|s|> = <|s|> next Listener Key ( ); <|nl|>
<|del|> <|nl|>
<|4-s|> <|s|> * <|s|> Selects <|s|> an <|s|> application <|s|> listed <|s|> in <|s|> the <|s|> Play <|s|> Store . <|nl|>
<|8-s|> int <|s|> min Api Version <|s|> = <|s|> 21 ; <|nl|> <|8-s|> if <|s|> ( this Api Version <|s|> < <|s|> min Api Version ) <|s|> { <|nl|> <|12-s|> Log . w ( TAG , <|nl|> <|16-s|> String . format ( " API <|s|> version <|s|> is <|s|> less <|s|> than <|s|> % d , <|s|> no <|s|> tests <|s|> running " , <|s|> min Api Version ) ); <|nl|>
<|nl|> <|8-s|> List < Unit Test > <|s|> valid Unit Tests <|s|> = <|s|> new <|s|> Array List < > ( ); <|nl|> <|nl|> <|8-s|> Iterable < Class < ? <|s|> extends <|s|> Unit Test >> <|s|> test Classes <|s|> = <|nl|>
<|nl|> <|8-s|> Unit Test . check Duplicate Names ( valid Unit Tests ); <|nl|> <|nl|> <|8-s|> return <|s|> valid Unit Tests ; <|nl|>
<|4-s|> <|s|> * <|s|> Returns <|s|> the <|s|> list <|s|> of <|s|> subclasses <|s|> of <|s|> Unit Test <|s|> to <|s|> run . <|nl|> <|4-s|> <|s|> * <|nl|> <|4-s|> <|s|> * <|s|> Filters <|s|> out <|s|> any <|s|> tests <|s|> with <|s|> API <|s|> version <|s|> greater <|s|> than <|s|> current <|s|> API <|s|> version . <|nl|> <|4-s|> <|s|> */ <|nl|>
<|8-s|> if <|s|> ( this Api Version <|s|> < <|s|> 21 ) <|s|> { <|nl|> <|12-s|> Log . w ( TAG , <|s|> " API <|s|> version <|s|> is <|s|> less <|s|> than <|s|> 21 , <|s|> no <|s|> tests <|s|> running " ); <|nl|>
<|4-s|> <|s|> * <|s|> Throws <|s|> Runtime Exception <|s|> if <|s|> any <|s|> tests <|s|> have <|s|> the <|s|> same <|s|> name . <|nl|> <|4-s|> <|s|> */ <|nl|>
<|8-s|> if <|s|> ( this Api Version <|s|> >= <|s|> 19 ) <|s|> { <|nl|>
<|del|> <|nl|>
<|4-s|> <|s|> * <|s|> Returns <|s|> the <|s|> list <|s|> of <|s|> subclasses <|s|> of <|s|> Unit Test <|s|> to <|s|> run . <|nl|> <|4-s|> <|s|> */ <|nl|>
<|8-s|> Assert . assert True ( m Test . get Success ( ) ); <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2017 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|16-s|> Metrics Logger . histogram ( context , <|s|> " ota _ non _ ab _ error _ code " , <|s|> error Code ); <|nl|>
<|16-s|> } <|s|> else <|s|> if <|s|> ( line . starts With ( " temperature _ end " ) ) <|s|> { <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> filter <|s|> = <|s|> new <|s|> Intent Filter ( Bluetooth Adapter . ACTION _ BLUETOOTH _ ADDRESS _ CHANGED ); <|nl|> <|8-s|> filter . set Priority ( Intent Filter . SYSTEM _ HIGH _ PRIORITY ); <|nl|> <|8-s|> m Context . register Receiver ( m Receiver , <|s|> filter ); <|nl|> <|8-s|> filter <|s|> = <|s|> new <|s|> Intent Filter ( Intent . ACTION _ SETTING _ RESTORED ); <|nl|> <|8-s|> m Context . register Receiver ( m Receiver , <|s|> filter ); <|nl|> <|nl|>
<|16-s|> // <|s|> apk / odex <|s|> location <|s|> ( the <|s|> reason <|s|> for <|s|> the <|s|> ' - ' . <|s|> A <|s|> positive <|s|> value <|s|> means <|nl|> <|16-s|> // <|s|> the <|s|> ' oat ' <|s|> location ) . <|nl|>
<|del|> <|nl|>
<|2-s|> // / <|s|> CHECK - NEXT : <|16-s|> <|16-s|> <|2-s|> <|s|> add <|s|> w { { [ 0 - 9 ] + } } , <|s|> w { { [ 0 - 9 ] + } } , <|s|> w { { [ 0 - 9 ] + } } , <|s|> lsl <|s|> # 2 <|nl|>
<|2-s|> // / <|s|> CHECK - NEXT : <|16-s|> <|16-s|> <|2-s|> <|s|> ldr <|s|> q { { [ 0 - 9 ] + } } , <|s|> [ x { { [ 0 - 9 ] + } } , <|s|> x { { [ 0 - 9 ] + } } ] <|nl|>
<|2-s|> // / <|s|> CHECK : <|16-s|> <|16-s|> <|8-s|> Intermediate Address Index <|nl|> <|2-s|> // / <|s|> CHECK - NEXT : <|16-s|> <|16-s|> <|4-s|> <|s|> add <|s|> w { { [ 0 - 9 ] + } } , <|s|> w { { [ 0 - 9 ] + } } , <|s|> w { { [ 0 - 9 ] + } } , <|s|> lsl <|s|> # 2 <|nl|>
<|4-s|> <|2-s|> b [ i ] <|s|> = <|s|> ( float ) <|s|> a [ i ]; <|nl|>
<|4-s|> <|2-s|> b [ i ] <|s|> = <|s|> ( float ) <|s|> a [ i ]; <|nl|>
<|4-s|> <|2-s|> sum <|s|> += <|s|> a [ i ] <|s|> + <|s|> b [ i ] <|s|> + <|s|> ( int ) <|s|> c [ i ]; <|nl|>
// <|s|> Android - removed : <|s|> List <|s|> of <|s|> classes <|s|> for <|s|> use <|s|> with <|s|> attribute <|s|> keys ; <|s|> Android <|s|> doesn ' t <|s|> have <|s|> those . <|nl|> // <|s|> Android - removed : <|s|> " Summary <|s|> of <|s|> attributes " <|s|> section . <|s|> Android <|s|> doesn ' t <|s|> have <|s|> the <|s|> referenced <|s|> classes . <|nl|>
<|4-s|> // <|s|> Android - removed : <|s|> Don ' t <|s|> link <|s|> to <|s|> java . awt . Font <|s|> class , <|s|> it <|s|> doesn ' t <|s|> exist <|s|> on <|s|> Android . <|nl|>
<|4-s|> // <|s|> Android - removed : <|s|> References <|s|> to <|s|> classes <|s|> that <|s|> don ' t <|s|> exist <|s|> on <|s|> Android . <|nl|> <|4-s|> // <|s|> These <|s|> classes <|s|> were <|s|> Affine Transform , <|s|> Font , <|s|> and <|s|> Transform Attribute . <|nl|>
<|4-s|> // <|s|> Android - removed : <|s|> Don ' t <|s|> link <|s|> to <|s|> java . awt . Font <|s|> class , <|s|> it <|s|> doesn ' t <|s|> exist <|s|> on <|s|> Android . <|nl|>
<|4-s|> // <|s|> Android - removed : <|s|> References <|s|> to <|s|> java . awt . im . Input Method Highlight <|s|> ( doesn ' t <|s|> exist <|s|> on <|s|> Android ) . <|nl|>
<|16-s|> <|12-s|> if <|s|> ( DBG ) <|s|> Slog . d ( TAG , <|s|> " Restore <|s|> Bluetooth <|s|> state <|s|> to <|s|> disabled " ); <|nl|>
<|16-s|> <|12-s|> if <|s|> ( DBG ) <|s|> Slog . d ( TAG , <|s|> " Restore <|s|> Bluetooth <|s|> state <|s|> to <|s|> enabled " ); <|nl|>
<|4-s|> private <|s|> static <|s|> final <|s|> int <|s|> MESSAGE _ RESTORE _ USER _ SETTING <|s|> = <|s|> 500 ; <|nl|>
<|16-s|> <|8-s|> Message <|s|> msg <|s|> = <|s|> m Handler . obtain Message ( MESSAGE _ RESTORE _ USER _ SETTING , <|nl|> <|16-s|> <|16-s|> <|16-s|> <|12-s|> <|s|> new Value . equals ( " 0 " ) <|s|> ? <|nl|> <|16-s|> <|16-s|> <|16-s|> <|12-s|> <|s|> RESTORE _ SETTING _ TO _ OFF <|s|> : <|nl|> <|16-s|> <|16-s|> <|16-s|> <|12-s|> <|s|> RESTORE _ SETTING _ TO _ ON , <|s|> 0 ); <|nl|> <|16-s|> <|8-s|> m Handler . send Message ( msg ); <|nl|>
<|16-s|> <|8-s|> Slog . e ( TAG , " Unable <|s|> to <|s|> change <|s|> Bluetooth <|s|> On <|s|> setting " , <|s|> e ); <|nl|>
<|del|> <|nl|>
<|12-s|> int <|s|> subscription Id ) <|s|> throws <|s|> Remote Exception <|s|> { <|nl|>
<|12-s|> int <|s|> subscription Id ) <|s|> throws <|s|> Remote Exception <|s|> { <|nl|>
<|4-s|> <|s|> * <|s|> Note <|s|> that <|s|> subsequent <|s|> calls <|s|> with <|s|> the <|s|> same <|s|> uid , <|s|> app Name <|s|> and <|s|> sub Id <|s|> will <|s|> replace <|nl|>
<|8-s|> fd <|s|> = <|s|> Io Bridge . open ( name , <|s|> imode ); <|nl|>
<|16-s|> <|4-s|> case <|s|> CMD _ TETHER _ MODE _ UNREQUESTED : <|s|> { <|nl|>
<|2-s|> // <|s|> Ensure <|s|> double <|s|> induction <|s|> does <|s|> not <|s|> " overshoot " <|s|> the <|s|> subscript <|s|> range . <|nl|>
<|del|> <|nl|>
<|16-s|> final <|s|> String <|s|> base Iface <|s|> = <|s|> s Stacked Ifaces . value At ( i ); <|nl|> <|16-s|> if <|s|> ( ! stacked Iface . starts With ( CLATD _ INTERFACE _ PREFIX ) ) <|s|> { <|nl|> <|16-s|> <|4-s|> continue ; <|nl|> <|16-s|> } <|nl|>
<|8-s|> assert Equals ( " App <|s|> traffic <|s|> should <|s|> be <|s|> ~ 100 MB " , <|s|> 11055344 9 , <|s|> app Rx Bytes After <|s|> - <|s|> app Rx Bytes Before ); <|nl|>
<|8-s|> assert Equals ( " UID <|s|> 0 <|s|> traffic <|s|> should <|s|> be <|s|> ~ 0 " , <|s|> 4623 , <|s|> root Rx Bytes After <|s|> - <|s|> root Rx Bytes Before ); <|nl|>
<|12-s|> Media Controller <|s|> controller <|s|> = <|s|> ( info <|s|> == <|s|> null ) <|s|> ? <|s|> null <|s|> : <|s|> info . get Media Controller ( ); <|nl|>
<|4-s|> <|2-s|> expect Equals ( 0 x 07 ffffff , <|s|> a [ i ] , <|s|> " shr Minus 254 " ); <|nl|>
<|4-s|> <|2-s|> expect Equals ( 0 x 07 ffffffffffffff L , <|s|> a [ i ] , <|s|> " shr Minus 254 " ); <|nl|>
<|8-s|> " android . bluetooth . input . profile . action . IDLE _ TIME _ CHANGED " ; <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> String <|s|> EXTRA _ IDLE _ TIME <|s|> = <|s|> " android . bluetooth . Bluetooth Input Device . extra . IDLE _ TIME " ; <|nl|>
<|del|> <|nl|>
<|4-s|> <|s|> * <|s|> have <|s|> an <|s|> associated <|s|> DEX <|s|> cache . <|nl|>
<|4-s|> protected <|s|> Hostname Verifier <|s|> hostname Verifier ; <|nl|> <|4-s|> // <|s|> END <|s|> Android - changed : <|s|> Use <|s|> lazily - created <|s|> Ok Http <|s|> hostname <|s|> verifier <|nl|>
<|8-s|> if <|s|> ( ni <|s|> == <|s|> null <|s|> || <|s|> ! ni . is Connected ( ) ) <|s|> { <|nl|>
<|8-s|> final <|s|> Network Info <|s|> net Info <|s|> = <|2-s|> m Conn Manager <|s|> == <|s|> null <|s|> ? <|s|> null <|s|> <|nl|> <|16-s|> <|16-s|> <|4-s|> <|s|> : <|s|> m Conn Manager . get Active Network Info ( ); <|nl|> <|8-s|> if <|s|> ( ! is Automatic Time Requested ( ) <|s|> || <|s|> <|nl|> <|16-s|> ( net Info <|s|> != <|s|> null <|s|> && <|s|> ! net Info . is Connected ( ) ) ) <|s|> return ; <|nl|>
<|8-s|> final <|s|> Network Info <|s|> net Info <|s|> = <|2-s|> m Conn Manager <|s|> == <|s|> null <|s|> ? <|s|> null <|s|> <|nl|> <|16-s|> <|16-s|> <|4-s|> <|s|> : <|s|> m Conn Manager . get Active Network Info ( ); <|nl|> <|8-s|> if <|s|> ( ! is Automatic Time Requested ( ) <|s|> || <|s|> <|nl|> <|16-s|> ( net Info <|s|> != <|s|> null <|s|> && <|s|> ! net Info . is Connected ( ) ) ) <|s|> return ; <|nl|>
// <|s|> Android - changed : <|s|> We <|s|> don ' t <|s|> implement <|s|> this <|s|> permission <|s|> system <|s|> on <|s|> Android . <|nl|>
<|8-s|> m CM <|s|> = <|s|> ( Connectivity Manager ) <|s|> m Context . get System Service ( Context . CONNECTIVITY _ SERVICE ); <|nl|>
<|4-s|> private <|s|> class <|s|> Network Time Update Callback <|s|> extends <|s|> Connectivity Manager . Network Callback <|s|> { <|nl|>
<|4-s|> private <|s|> class <|s|> Network Time Update Callback <|s|> extends <|s|> Connectivity Manager . Network Callback <|s|> { <|nl|>
<|8-s|> } <|nl|> <|nl|> <|8-s|> @ Override <|nl|> <|8-s|> public <|s|> void <|s|> on Lost ( Network <|s|> network ) <|s|> { <|nl|> <|12-s|> m Network Validated <|s|> = <|s|> false ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( ! is Automatic Time Requested ( ) <|s|> || <|nl|>
<|12-s|> // <|s|> use Metadata <|s|> argument <|s|> byte <|s|> is <|s|> required . <|nl|> <|12-s|> if <|s|> ( num Bytes <|s|> != <|s|> 1 ) <|s|> { <|nl|> <|16-s|> send Response Code ( apdu , <|s|> ( short ) 0 x 0200 ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> public <|s|> void <|s|> on Capabilities Changed ( Network <|s|> network , <|s|> Network Capabilities <|s|> net Cap ) <|s|> { <|nl|> <|12-s|> m Network Validated <|s|> = <|s|> net Cap . has Capability ( <|nl|>
<|8-s|> public <|s|> void <|s|> on Capabilities Changed ( Network <|s|> network , <|s|> Network Capabilities <|s|> net Cap ) <|s|> { <|nl|> <|12-s|> m Network Validated <|s|> = <|s|> net Cap . has Capability ( <|nl|>
<|8-s|> public <|s|> void <|s|> on Capabilities Changed ( Network <|s|> network , <|s|> Network Capabilities <|s|> net Cap ) <|s|> { <|nl|> <|12-s|> m Network Validated <|s|> = <|s|> net Cap . has Capability ( <|nl|>
<|2-s|> // <|s|> TODO : <|s|> narrow <|s|> type <|s|> vectorization . <|nl|> <|2-s|> // / <|s|> CHECK - START : <|s|> void <|s|> Main . doit Max ( byte [ ] , <|s|> byte [ ] , <|s|> byte [ ] ) <|s|> loop _ optimization <|s|> ( after ) <|nl|> <|2-s|> // / <|s|> CHECK - NOT : <|s|> Vec Max <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> private <|s|> void <|s|> record And Emit ( Category <|s|> category , <|s|> String <|s|> msg ) <|s|> { <|nl|>
<|del|> <|nl|>
<|4-s|> private <|s|> boolean <|s|> m Has Telephony Manager ; <|nl|>
<|4-s|> <|s|> * <|s|> Returns <|s|> the <|s|> paths <|s|> of <|s|> the <|s|> optimized <|s|> files <|s|> generated <|s|> for <|s|> { @ code <|s|> file Name } . <|nl|> <|4-s|> <|s|> * <|s|> If <|s|> no <|s|> optimized <|s|> code <|s|> exists <|s|> the <|s|> method <|s|> returns <|s|> null . <|nl|>
<|4-s|> public <|s|> static <|s|> native <|s|> String [ ] <|s|> get Dex File Output Paths ( String <|s|> file Name , <|s|> String <|s|> instruction Set ) <|nl|>
<|12-s|> files <|s|> = <|s|> Dex File . get Dex File Output Paths ( base Code Path , <|s|> arch ); <|nl|>
<|8-s|> for <|s|> ( String <|s|> file <|s|> : <|s|> files ) <|s|> { <|nl|> <|12-s|> pf <|s|> = <|s|> pin File ( file , <|s|> 0 , <|s|> 0 , <|s|> MAX _ CAMERA _ PIN _ SIZE ); <|nl|>
<|8-s|> for <|s|> ( String <|s|> file <|s|> : <|s|> files ) <|s|> { <|nl|> <|12-s|> pf <|s|> = <|s|> pin File ( file , <|s|> 0 , <|s|> 0 , <|s|> MAX _ CAMERA _ PIN _ SIZE ); <|nl|>
<|8-s|> context . register Receiver ( m Receiver , <|s|> user Removed Filter ); <|nl|>
<|4-s|> public <|s|> IPv 6 Tethering Coordinator ( Array List < Tether Interface State Machine > <|s|> notify List ) <|s|> { <|nl|>
<|4-s|> public <|s|> void <|s|> e ( String <|s|> msg ) <|s|> { <|nl|> <|8-s|> Log . e ( m Tag , <|s|> record ( Category . ERROR , <|s|> msg ) ); <|nl|>
<|del|> <|nl|>
<|16-s|> <|12-s|> " CALL _ PHONE <|s|> permission <|s|> required <|s|> to <|s|> place <|s|> calls . " ) ) <|s|> { <|nl|>
<|8-s|> if <|s|> ( category <|s|> != <|s|> Category . NONE ) <|s|> sj . add ( category . to String ( ) ); <|nl|>
<|t|> <|s|> * <|s|> Verify <|s|> connectivity <|s|> between <|s|> the <|s|> local <|s|> gateway <|s|> server <|s|> and <|s|> the <|s|> remote <|nl|> <|t|> <|s|> * <|s|> federation <|s|> server . <|nl|>
<|t|> <|s|> * <|s|> Ask <|s|> the <|s|> remote <|s|> federation <|s|> server <|s|> to <|nl|> <|t|> <|s|> * <|s|> add <|s|> the <|s|> local <|s|> server <|s|> to <|s|> its <|s|> list <|s|> of <|s|> peers . <|nl|>
public <|s|> class <|s|> Application <|s|> { <|nl|> <|t|> private <|s|> static <|s|> final <|s|> Logger <|s|> log <|s|> = <|s|> Logger Factory . get Logger ( Method Handles . lookup ( ) . lookup Class ( ) ); <|nl|>
<|2-t|> return <|s|> clients . get CDSClient ( ) . create Solution ( solution ); <|nl|>
public <|s|> class <|s|> Clients <|s|> { <|nl|>
<|t|> <|s|> * <|s|> @ param <|s|> is <|s|> The <|s|> data <|s|> to <|s|> put . <|2-s|> Implementations <|s|> must <|s|> close <|s|> the <|s|> input <|s|> stream . <|nl|>
<|t|> <|s|> * <|s|> @ param <|s|> is <|s|> The <|s|> data <|s|> to <|s|> put . <|2-s|> Implementations <|s|> must <|s|> close <|s|> the <|s|> input <|s|> stream . <|nl|>
<|t|> private <|s|> static <|s|> final <|s|> Logger <|s|> log <|s|> = <|s|> Logger Factory . get Logger ( Method Handles . lookup ( ) . lookup Class ( ) ); <|nl|>
<|t|> private <|s|> static <|s|> final <|s|> Logger <|s|> log <|s|> = <|s|> Logger Factory . get Logger ( Method Handles . lookup ( ) . lookup Class ( ) ); <|nl|>
<|2-t|> log . warn ( " Rejecting <|s|> invalid <|s|> request <|s|> { }: <|s|> { } <|s|> { } <|s|> { } " , <|s|> request . get Request URI ( ) , <|s|> bad Request . get Message ( ) , <|s|> bad Request . get Code ( ) , <|s|> bad Request ); <|nl|>
<|t|> private <|s|> static <|s|> final <|s|> Logger <|s|> log <|s|> = <|s|> Logger Factory . get Logger ( Method Handles . lookup ( ) . lookup Class ( ) ); <|nl|>
public <|s|> class <|s|> Security <|s|> extends <|s|> Web Security Configurer Adapter <|s|> { <|nl|> <|t|> private <|s|> static <|s|> final <|s|> Logger <|s|> log <|s|> = <|s|> Logger Factory . get Logger ( Method Handles . lookup ( ) . lookup Class ( ) ); <|nl|>
<|3-t|> myself . set Status Code ( PSC _ UNKNOWN ); <|nl|> <|3-t|> log . error ( " Cannot <|s|> determine <|s|> ' self ' <|s|> peer " , <|s|> e ); <|nl|>
<|2-t|> Http Servlet Request <|s|> http Request <|s|> = <|2-s|> request ; <|nl|>
<|4-t|> <|t|> && <|s|> ! ( Security Context Holder . get Context ( ) . get Authentication ( ) <|s|> instanceof <|s|> Anonymous Authentication Token ) <|s|> && <|s|> validate Token ( jwt Token VO , <|s|> secret Key ) ) <|s|> { <|nl|> <|4-t|> <|t|> // validate <|s|> token <|s|> <|nl|>
<|nl|> /* * <|nl|> <|s|> * <|s|> Demonstrates <|s|> use <|s|> of <|s|> the <|s|> Federation <|s|> ( public <|s|> " E 5 " <|s|> interface ) <|s|> and <|nl|> <|s|> * <|s|> Gateway <|s|> ( private <|s|> internal <|s|> interface ) <|s|> clients . <|nl|> <|s|> */ <|nl|>
<|2-t|> Federation Client <|s|> fedclient <|s|> = <|s|> new <|s|> Federation Client ( peer Api Url , <|s|> cconf ); <|nl|> <|2-t|> System . out . println ( " Checking <|s|> connectivity <|s|> to <|s|> remote <|s|> acumos <|s|> using <|s|> public <|s|> E 5 <|s|> interface " ); <|nl|> <|2-t|> System . out . println ( " Response <|s|> from <|s|> remote <|s|> acumos <|s|> is <|s|> " <|s|> + <|s|> fedclient . ping ( ) ); <|nl|>
<|del|> <|nl|>
<|nl|> <|t|> /* * <|nl|> <|t|> <|s|> * <|s|> This <|s|> method <|s|> will <|s|> check <|s|> if <|s|> the <|s|> Ni Fi <|s|> POD <|s|> is <|s|> running <|s|> or <|s|> not <|nl|> <|t|> <|s|> * <|s|> @ param <|s|> acumos Login Id <|nl|> <|t|> <|s|> * <|s|> <|2-t|> Accepts <|s|> acumos Login Id <|s|> as <|s|> parameter <|nl|> <|t|> <|s|> * <|s|> @ return <|nl|> <|t|> <|s|> * <|s|> <|2-t|> boolean <|s|> as <|s|> true / false <|nl|> <|t|> <|s|> */ <|nl|>
<|nl|> <|t|> /* * <|nl|> <|t|> <|s|> * <|s|> This <|s|> method <|s|> will <|s|> create <|s|> the <|s|> Instance <|s|> of <|s|> Ni Fi <|nl|> <|t|> <|s|> * <|s|> @ param <|s|> acumos Login Id <|nl|> <|t|> <|s|> * <|s|> <|2-t|> Accepts <|s|> acumos Login Id <|s|> as <|s|> parameter <|nl|> <|t|> <|s|> * <|s|> @ return <|nl|> <|t|> <|s|> * <|s|> <|2-t|> Ni Fi <|s|> URL <|nl|> <|t|> <|s|> */ <|nl|>
<|t|> <|nl|> <|t|> /* * <|nl|> <|t|> <|s|> * <|s|> This <|s|> method <|s|> will <|s|> put <|s|> the <|s|> create <|s|> request <|nl|> <|t|> <|s|> * <|s|> @ param <|s|> request Id <|nl|> <|t|> <|s|> * <|s|> <|2-t|> Accepts <|s|> the <|s|> request Id <|s|> as <|s|> parameter <|nl|> <|t|> <|s|> * <|s|> @ param <|s|> pipeline <|nl|> <|t|> <|s|> * <|s|> <|2-t|> Accepts <|s|> the <|s|> pipeline <|s|> as <|s|> parameter <|nl|> <|t|> <|s|> */ <|nl|>
<|t|> <|nl|> <|t|> /* * <|nl|> <|t|> <|s|> * <|s|> This <|s|> method <|s|> will <|s|> remove <|s|> the <|s|> create <|s|> request <|nl|> <|t|> <|s|> * <|s|> @ param <|s|> request Id <|nl|> <|t|> <|s|> * <|s|> <|2-t|> Accepts <|s|> the <|s|> request Id <|s|> as <|s|> parameter <|nl|> <|t|> <|s|> * <|s|> @ param <|s|> pipeline <|nl|> <|t|> <|s|> * <|s|> <|2-t|> Accepts <|s|> the <|s|> pipeline <|s|> as <|s|> parameter <|nl|> <|t|> <|s|> */ <|2-t|> <|nl|>
<|t|> /* * <|nl|> <|t|> <|s|> * <|s|> This <|s|> method <|s|> will <|s|> put <|s|> update <|s|> request <|nl|> <|t|> <|s|> * <|s|> @ param <|s|> request Id <|nl|> <|t|> <|s|> * <|s|> <|3-t|> Accepts <|s|> the <|s|> request Id <|s|> as <|s|> parameter <|nl|> <|t|> <|s|> * <|s|> @ param <|s|> pipeline <|nl|> <|t|> <|s|> * <|s|> <|3-t|> Accepts <|s|> the <|s|> pipeline <|s|> as <|s|> parameter <|nl|> <|t|> <|s|> */ <|nl|>
<|t|> <|nl|> <|t|> /* * <|nl|> <|t|> <|s|> * <|s|> This <|s|> method <|s|> will <|s|> remove <|s|> update <|s|> request <|nl|> <|t|> <|s|> * <|s|> @ param <|s|> request Id <|nl|> <|t|> <|s|> * <|s|> <|3-t|> Accepts <|s|> the <|s|> request Id <|s|> as <|s|> parameter <|nl|> <|t|> <|s|> * <|s|> @ param <|s|> pipeline <|nl|> <|t|> <|s|> * <|s|> <|3-t|> Accepts <|s|> the <|s|> pipeline <|s|> as <|s|> parameter <|nl|> <|t|> <|s|> */ <|nl|>
<|t|> <|nl|> <|t|> /* * <|nl|> <|t|> <|s|> * <|s|> This <|s|> method <|s|> will <|s|> put <|s|> delete <|s|> request <|nl|> <|t|> <|s|> * <|s|> @ param <|s|> request Id <|nl|> <|t|> <|s|> * <|s|> <|3-t|> Accepts <|s|> the <|s|> request Id <|s|> as <|s|> parameter <|nl|> <|t|> <|s|> * <|s|> @ param <|s|> pipeline Id <|nl|> <|t|> <|s|> * <|s|> <|3-t|> Accepts <|s|> the <|s|> pipeline Id <|s|> as <|s|> parameter <|nl|> <|t|> <|s|> * <|s|> <|3-t|> <|nl|> <|t|> <|s|> */ <|nl|>
<|t|> <|nl|> <|t|> /* * <|nl|> <|t|> <|s|> * <|s|> Constructor <|nl|> <|t|> <|s|> */ <|nl|>
<|t|> <|nl|> <|t|> /* * <|nl|> <|t|> <|s|> * <|s|> This <|s|> method <|s|> will <|s|> Add <|s|> Create <|s|> Request <|nl|> <|t|> <|s|> * <|s|> @ param <|s|> key <|nl|> <|t|> <|s|> * <|s|> <|2-t|> Accepts <|s|> key <|s|> as <|s|> parameter <|nl|> <|t|> <|s|> * <|s|> @ param <|s|> value <|nl|> <|t|> <|s|> * <|s|> <|2-t|> Accepts <|s|> value <|s|> as <|s|> parameter <|nl|> <|t|> <|s|> */ <|nl|>
<|3-t|> gdm Service Impl . create Deploy GDM ( cdump , <|s|> node Id , <|s|> user Id ); <|nl|> <|2-t|> } <|s|> catch <|s|> ( Service Exception <|s|> e ) <|s|> { <|nl|> <|3-t|> e . print Stack Trace ( ); <|nl|> <|2-t|> } <|nl|>
import <|s|> static <|s|> org . junit . Assert . * ; <|nl|>
<|nl|>
<|2-t|> JWTAuthorization Filter <|s|> jwt Authorization Filter <|s|> = <|s|> new <|s|> JWTAuthorization Filter ( authentication Manager Bean ( ) , <|nl|> <|4-t|> conf . get Jwt Secret Key ( ) , <|s|> cds Client ); <|nl|>
<|t|> <|s|> * <|s|> To <|s|> Validate <|s|> the <|s|> Input <|s|> for <|nl|> <|t|> <|s|> * <|s|> <|nl|>
<|t|> <|s|> * <|s|> To <|s|> Validate <|s|> the <|s|> Input <|s|> Data <|nl|> <|t|> <|s|> * <|s|> <|4-t|> <|2-s|> <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2019 <|s|> AT & T <|s|> Intellectual <|s|> Property <|s|> & <|s|> Tech <|s|> Mahindra . <|s|> All <|s|> rights <|s|> reserved . <|nl|>
<|t|> @ Test ( ) <|nl|>
<|del|> <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2019 <|s|> AT & T <|s|> Intellectual <|s|> Property <|s|> & <|s|> Tech <|s|> Mahindra . <|s|> All <|s|> rights <|s|> reserved . <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2019 <|s|> AT & T <|s|> Intellectual <|s|> Property <|s|> & <|s|> Tech <|s|> Mahindra . <|s|> All <|s|> rights <|s|> reserved . <|nl|>
<|s|> * <|s|> Copyright <|s|> ( C ) <|s|> 2019 <|s|> AT & T <|s|> Intellectual <|s|> Property <|s|> & <|s|> Tech <|s|> Mahindra . <|s|> All <|s|> rights <|s|> reserved . <|nl|>
<|t|> @ Api Operation ( value <|s|> = <|s|> " List <|s|> out <|s|> all <|s|> the <|s|> Models <|s|> that <|s|> belongs <|s|> to <|s|> user " ) <|nl|>
import <|s|> org . springframework . web . client . Rest Client Response Exception ; <|nl|> <|nl|> <|nl|>
<|t|> @ Exception Handler ( Association Exception . class ) <|nl|> <|t|> public <|s|> final <|s|> Response Entity <?> <|s|> handle Association Exists Exception ( Association Exception <|s|> ex , <|s|> Web Request <|s|> request ) <|s|> { <|nl|>
<|t|> <|s|> * <|s|> To <|s|> validate <|s|> the <|s|> input <|s|> Json <|s|> value <|s|> of <|s|> Model <|nl|>
<|t|> public <|s|> static <|s|> final <|s|> String <|s|> PROJECTID <|s|> = <|s|> " project Id " ; <|nl|>
<|3-t|> // <|s|> TODO <|s|> : <|s|> Current <|s|> logic <|s|> returns <|s|> the <|s|> first <|s|> operation ' s <|s|> input <|s|> msg <|s|> name , <|s|> but <|s|> need <|s|> to <|s|> update <|s|> the <|s|> logic <|s|> to <|s|> return <|s|> the <|s|> connected <|s|> port <|s|> input <|s|> message <|s|> name <|nl|>
<|4-t|> logger . debug ( EELFLogger Delegator . debug Logger , " <|s|> Solution Revison Id <|s|> for <|s|> Version <|s|> : <|s|> " <|s|> + <|s|> solution Revision Id ); <|nl|>
<|16-s|> <|2-s|> <|s|> // <|s|> Read <|s|> the <|s|> entry <|s|> and <|s|> write <|s|> it <|s|> to <|s|> the <|s|> temp <|s|> jar . <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> <|s|> * <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> Networking Util . read Bytes ( socket Channel , <|s|> buf , <|s|> request Size ); <|nl|>
<|4-s|> public <|s|> static <|s|> int <|s|> get Txn Id From Log Ack Message ( String <|s|> msg ) <|s|> { <|nl|> <|8-s|> return <|s|> Integer . parse Int ( msg . substring ( msg . index Of ( LOG _ REPLICATION _ ACK ) <|s|> + <|s|> 1 ) ); <|nl|>
<|12-s|> ctx . btree Pred . set High Key Comparator ( ctx . prefix Search Cmp ); <|nl|>
<|del|> <|nl|>
<|16-s|> <|12-s|> range Cursors [ i ] . close ( ); <|nl|>
<|12-s|> } ); <|nl|>
<|8-s|> BUILT _ IN _ REPLICATION _ STRATEGY . put ( " none " , <|s|> No Replication Strategy . class ); <|nl|>
<|8-s|> return <|s|> index Set ; <|nl|>
<|8-s|> Array List < Dataset Resource > <|s|> open Datasets <|s|> = <|s|> new <|s|> Array List < > ( datasets . values ( ) ); <|nl|> <|8-s|> for <|s|> ( Dataset Resource <|s|> dsr <|s|> : <|s|> open Datasets ) <|s|> { <|nl|> <|12-s|> if <|s|> ( dsr . get Dataset ID ( ) <|s|> >= <|s|> get First Avilable User Dataset ID ( ) ) <|s|> { <|nl|> <|16-s|> close Dataset ( dsr . get Dataset Info ( ) ); <|nl|>
<|8-s|> Array List < Dataset Resource > <|s|> open Datasets <|s|> = <|s|> new <|s|> Array List < > ( datasets . values ( ) ); <|nl|> <|8-s|> for <|s|> ( Dataset Resource <|s|> dsr <|s|> : <|s|> open Datasets ) <|s|> { <|nl|> <|12-s|> if <|s|> ( dsr . get Dataset ID ( ) <|s|> >= <|s|> get First Avilable User Dataset ID ( ) ) <|s|> { <|nl|> <|16-s|> close Dataset ( dsr . get Dataset Info ( ) ); <|nl|>
<|8-s|> for <|s|> ( Entry < Integer , <|s|> Pair < Primary Index Operation Tracker , <|s|> IModification Operation Callback >> <|s|> e <|s|> : <|s|> primary Index Trackers <|nl|> <|16-s|> . entry Set ( ) ) <|s|> { <|nl|>
<|8-s|> for <|s|> ( Entry < Integer , <|s|> Pair < Primary Index Operation Tracker , <|s|> IModification Operation Callback >> <|s|> e <|s|> : <|s|> primary Index Trackers <|nl|> <|16-s|> . entry Set ( ) ) <|s|> { <|nl|>
<|8-s|> for <|s|> ( Entry < Integer , <|s|> Pair < Primary Index Operation Tracker , <|s|> IModification Operation Callback >> <|s|> e <|s|> : <|s|> primary Index Trackers <|nl|> <|16-s|> . entry Set ( ) ) <|s|> { <|nl|>
<|8-s|> for <|s|> ( Entry < Integer , <|s|> Pair < Primary Index Operation Tracker , <|s|> IModification Operation Callback >> <|s|> e <|s|> : <|s|> primary Index Trackers <|nl|> <|16-s|> . entry Set ( ) ) <|s|> { <|nl|>
<|8-s|> for <|s|> ( Entry < Integer , <|s|> Pair < Primary Index Operation Tracker , <|s|> IModification Operation Callback >> <|s|> e <|s|> : <|s|> primary Index Trackers <|nl|> <|16-s|> . entry Set ( ) ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> Triple < ILogical Expression , <|s|> ILogical Expression , <|s|> Boolean > <|s|> create Search Key Expr ( Index <|s|> index , <|nl|>
<|16-s|> <|8-s|> Thread . current Thread ( ) . interrupt ( ); <|nl|> <|16-s|> <|8-s|> throw <|s|> Hyracks Data Exception . create ( e ); <|nl|>
<|16-s|> <|8-s|> Thread . current Thread ( ) . interrupt ( ); <|nl|> <|16-s|> <|8-s|> throw <|s|> Hyracks Data Exception . create ( e ); <|nl|>
<|12-s|> close Index ( i Info ); <|nl|>
<|12-s|> close Index ( i Info ); <|nl|>
<|del|> <|nl|>
<|16-s|> write Entity Resource ( buffer ); <|nl|> <|16-s|> write Entity Value ( buffer ); <|nl|>
<|4-s|> private <|s|> void <|s|> write Entity Value ( Byte Buffer <|s|> buffer ) <|s|> { <|nl|>
<|4-s|> private <|s|> void <|s|> write Entity Value ( Byte Buffer <|s|> buffer ) <|s|> { <|nl|>
<|4-s|> private <|s|> void <|s|> write Entity Resource ( Byte Buffer <|s|> buffer ) <|s|> { <|nl|>
<|16-s|> if <|s|> ( read Entity Resource ( buffer ) <|s|> && <|s|> read Entity Value ( buffer ) ) <|s|> { <|nl|>
<|16-s|> if <|s|> ( read Entity Resource ( buffer ) ) <|s|> { <|nl|> <|16-s|> <|4-s|> return <|s|> read Update Info ( buffer ); <|nl|>
<|16-s|> if <|s|> ( read Entity Resource ( buffer ) ) <|s|> { <|nl|> <|16-s|> <|4-s|> return <|s|> read Update Info ( buffer ); <|nl|>
<|8-s|> if <|s|> ( buffer . remaining ( ) <|s|> < <|s|> ENTITY _ VALUE _ HEADER _ LEN ) <|s|> { <|nl|>
<|del|> <|nl|>
<|4-s|> private <|s|> boolean <|s|> read Entity Resource ( Byte Buffer <|s|> buffer ) <|s|> { <|nl|> <|8-s|> // attempt <|s|> to <|s|> read <|s|> in <|s|> the <|s|> resource Partition <|s|> and <|s|> dsid <|nl|> <|8-s|> if <|s|> ( buffer . remaining ( ) <|s|> < <|s|> ENTITY _ RESOURCE _ HEADER _ LEN ) <|s|> { <|nl|>
<|4-s|> private <|s|> boolean <|s|> read Entity Resource ( Byte Buffer <|s|> buffer ) <|s|> { <|nl|> <|8-s|> // attempt <|s|> to <|s|> read <|s|> in <|s|> the <|s|> resource Partition <|s|> and <|s|> dsid <|nl|> <|8-s|> if <|s|> ( buffer . remaining ( ) <|s|> < <|s|> ENTITY _ RESOURCE _ HEADER _ LEN ) <|s|> { <|nl|>
<|4-s|> private <|s|> boolean <|s|> read Entity Resource ( Byte Buffer <|s|> buffer ) <|s|> { <|nl|> <|8-s|> // attempt <|s|> to <|s|> read <|s|> in <|s|> the <|s|> resource Partition <|s|> and <|s|> dsid <|nl|> <|8-s|> if <|s|> ( buffer . remaining ( ) <|s|> < <|s|> ENTITY _ RESOURCE _ HEADER _ LEN ) <|s|> { <|nl|>
<|16-s|> <|8-s|> lsm Accessor . update Filter ( prev Tuple ); <|nl|>
<|4-s|> SEARCH , <|nl|> <|4-s|> FILTER _ MOD , <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|12-s|> // Nothing <|s|> to <|s|> do <|s|> there , <|s|> not <|s|> testing <|s|> filters <|nl|>
<|8-s|> boolean <|s|> secondary Key Field Used After Select Or Join Op ; <|nl|>
<|8-s|> boolean <|s|> does SIdx Search Cover All Predicates ; <|nl|>
<|12-s|> throws <|s|> Algebricks Exception <|s|> { <|nl|>
<|4-s|> public <|s|> boolean <|s|> init From Sub Tree ( Mutable < ILogical Operator > <|s|> sub Tree Op Ref ) <|s|> throws <|s|> Algebricks Exception <|s|> { <|nl|>
<|12-s|> } <|s|> else <|s|> { <|nl|>
<|12-s|> } <|s|> else <|s|> { <|nl|>
<|16-s|> if <|s|> ( cmp <|s|> != <|s|> 0 <|s|> || <|s|> normalized Key Decisive ) <|s|> { <|nl|>
<|12-s|> throw <|s|> Hyracks Data Exception . create ( e ); <|nl|>
<|16-s|> if <|s|> ( ds Type <|s|> != <|s|> Data Source . Type . INTERNAL _ DATASET <|s|> && <|s|> ds Type <|s|> != <|s|> Data Source . Type . EXTERNAL _ DATASET ) <|s|> { <|nl|>
<|del|> <|nl|>
<|8-s|> IModification Operation Callback <|s|> { <|nl|>
<|8-s|> return <|s|> create Accessor ( create Op Context ( ( IExtended Modification Operation Callback ) <|s|> iap . get Modification Callback ( ) , <|nl|>
<|8-s|> return <|s|> create Accessor ( create Op Context ( ( IExtended Modification Operation Callback ) <|s|> iap . get Modification Callback ( ) , <|nl|>
<|16-s|> if <|s|> ( ! logged ) <|s|> { <|nl|>
<|16-s|> if <|s|> ( ! logged ) <|s|> { <|nl|>
<|12-s|> if <|s|> ( ! logged ) <|s|> { <|nl|>
<|del|> <|nl|>
<|16-s|> if <|s|> ( ! logged ) <|s|> { <|nl|>
<|del|> <|nl|>
<|8-s|> LSMRTree Op Context <|s|> op Ctx <|s|> = <|nl|> <|16-s|> create Op Context ( ( ( IExtended Modification Operation Callback ) <|s|> iap . get Modification Callback ( ) ) , <|nl|>
<|8-s|> LSMRTree Op Context <|s|> op Ctx <|s|> = <|nl|> <|16-s|> create Op Context ( ( ( IExtended Modification Operation Callback ) <|s|> iap . get Modification Callback ( ) ) , <|nl|>
<|16-s|> create Op Context ( ( IExtended Modification Operation Callback ) <|s|> iap . get Modification Callback ( ) , <|nl|> <|16-s|> <|8-s|> iap . get Search Operation Callback ( ) ); <|nl|>
<|12-s|> flush Dataset Open Indexes ( dsr , <|s|> false ); <|nl|>
<|12-s|> flush Dataset Open Indexes ( dsr , <|s|> false ); <|nl|>
<|16-s|> <|12-s|> } <|nl|>
<|16-s|> op Callback . after ( tuple ); <|nl|> <|16-s|> logged <|s|> = <|s|> true ; <|nl|>
<|del|> <|nl|>
<|16-s|> <|12-s|> throw <|s|> new <|s|> Illegal State Exception ( ); <|nl|>
<|16-s|> <|12-s|> throw <|s|> new <|s|> Illegal State Exception ( ); <|nl|>
<|16-s|> <|12-s|> throw <|s|> new <|s|> Illegal State Exception ( ); <|nl|>
<|12-s|> Thread . sleep ( 25 ); <|s|> // <|s|> NOSONAR <|s|> Sleep <|s|> so <|s|> some <|s|> reads <|s|> are <|s|> successful <|nl|>
<|8-s|> inv List Range Search Cursor . close ( ); <|nl|> <|8-s|> is Inv List Cursor Open <|s|> = <|s|> false ; <|nl|>
<|16-s|> <|12-s|> throw <|s|> new <|s|> Illegal State Exception ( ); <|nl|>
<|16-s|> <|12-s|> throw <|s|> new <|s|> Illegal State Exception ( ); <|nl|>
<|16-s|> <|12-s|> throw <|s|> new <|s|> Illegal State Exception ( ); <|nl|>
<|8-s|> Cached Page <|s|> c Page <|s|> = <|s|> find Page ( dpid , <|s|> false ); <|nl|>
<|8-s|> Cached Page <|s|> c Page <|s|> = <|s|> find Page ( dpid , <|s|> false ); <|nl|>
<|del|> <|nl|>
<|12-s|> boolean <|s|> failed <|s|> = <|s|> failed Shared . get Value ( ); <|nl|> <|12-s|> failed Shared . set Value ( Boolean . TRUE ); <|nl|>
<|16-s|> <|8-s|> + <|s|> " <|s|> operator <|s|> descriptors . <|s|> Currently , <|s|> nested <|s|> plans <|s|> can <|s|> only <|s|> consist <|s|> in <|s|> linear <|s|> pipelines <|s|> of <|s|> " <|nl|> <|16-s|> <|8-s|> + <|s|> " Asterix <|s|> micro <|s|> operators . " ); <|nl|>
<|8-s|> Subplan Runtime Factory <|s|> runtime <|s|> = <|nl|> <|16-s|> new <|s|> Subplan Runtime Factory ( np , <|s|> missing Writer Factories , <|s|> input Record Desc , <|s|> rec Desc , <|s|> null ); <|nl|>
<|8-s|> public <|s|> void <|s|> set Input Record Descriptor ( int <|s|> index , <|s|> Record Descriptor <|s|> record Descriptor ) <|s|> { <|nl|> <|12-s|> // <|s|> input <|s|> is <|s|> not <|s|> accessed <|nl|>
<|4-s|> public <|s|> List < IOperator Descriptor > <|s|> get Meta Ops ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> IIPCEvent Listener <|s|> INSTANCE <|s|> = <|s|> new <|s|> No Op IPCEvent Listener ( ); <|nl|> <|nl|> <|4-s|> private <|s|> No Op IPCEvent Listener ( ) <|s|> { <|nl|> <|4-s|> } <|nl|>
<|8-s|> public <|s|> Bloom Filter Builder ( long <|s|> estimated Num Elemenets , <|s|> int <|s|> num Hashes , <|s|> int <|s|> num Bits Per Element ) <|nl|> <|16-s|> throws <|s|> Hyracks Data Exception <|s|> { <|nl|>
<|12-s|> Job Id <|s|> run Job Id <|s|> = <|s|> run Test ( spec , <|nl|> <|16-s|> <|4-s|> new <|s|> Exception On Create Push Runtime Operator Descriptor ( spec , <|s|> 0 , <|s|> 1 , <|s|> new <|s|> int [ ] <|s|> { <|s|> 4 <|s|> } , <|s|> true ) ); <|nl|>
<|del|> <|nl|>
<|16-s|> if <|s|> ( LOGGER . is Debug Enabled ( ) ) <|s|> { <|nl|> <|16-s|> <|4-s|> LOGGER . debug ( " result <|s|> reading <|s|> successful ( " <|s|> + <|s|> result State . get Result Set Partition Id ( ) <|s|> + <|s|> " ) " ); <|nl|>
<|4-s|> <|s|> * <|s|> Gets <|s|> the <|s|> required <|s|> result <|s|> properties <|s|> of <|s|> the <|s|> request . <|nl|> <|4-s|> <|s|> * <|nl|> <|4-s|> <|s|> * <|s|> @ return <|s|> the <|s|> result <|s|> properties <|nl|>
<|4-s|> <|s|> * <|s|> @ return <|s|> the <|s|> min <|s|> tuple <|s|> of <|s|> the <|s|> corresponding <|s|> component ' s <|s|> filter <|nl|>
public <|s|> interface <|s|> ILSMIndex Cursor <|s|> extends <|s|> IIndex Cursor <|s|> { <|nl|>
<|8-s|> Object <|s|> annotation <|s|> = <|s|> op 2 . get Annotations ( ) . get ( " is Movable " ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|16-s|> } <|s|> catch <|s|> ( Closed By Interrupt Exception <|s|> | <|s|> Interrupted Exception <|s|> e ) <|s|> { <|nl|>
<|8-s|> void <|s|> run ( ) <|s|> throws <|s|> IOException , <|s|> Interrupted Exception ; <|nl|>
<|8-s|> this . nc Service Ctx . set Messaging Channel Interface Factory ( interface Factory ); <|nl|>
<|8-s|> this . nc Service Ctx . set Messaging Channel Interface Factory ( interface Factory ); <|nl|>
<|16-s|> <|8-s|> + <|s|> " micro <|s|> operators . " ); <|nl|>
<|16-s|> <|12-s|> " Can <|s|> only <|s|> generate <|s|> jobs <|s|> for <|s|> pipelinable <|s|> nested <|s|> plans , <|s|> not <|s|> for <|s|> " <|s|> + <|s|> opd <|nl|>
<|12-s|> throw <|s|> new <|s|> Illegal State Exception ( " Unexpected <|s|> nested <|s|> plan " ); <|nl|>
<|8-s|> super . contribute Runtime Operator ( builder , <|s|> context , <|s|> op , <|s|> op Schema , <|s|> input Schemas , <|s|> outer Plan Schema ); <|nl|>
<|16-s|> <|8-s|> throw <|s|> new <|s|> Illegal State Exception ( " Invalid <|s|> pipeline " ); <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xff ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 8 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 8 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xff ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 8 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 8 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xff ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 8 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 8 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xff ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 8 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 8 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xff ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 8 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 8 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xff ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 8 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 8 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xff ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 8 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 8 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xff ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 8 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 8 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xff ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 8 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 8 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xff ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 8 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 8 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xff ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 8 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 8 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xff ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 8 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 8 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xff ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 8 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 8 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xff ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 8 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 8 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xf ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 4 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 4 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xf ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 4 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 4 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xf ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 4 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 4 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xf ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 4 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 4 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xf ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 4 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 4 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xf ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 4 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 4 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xf ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 4 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 4 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xf ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 4 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 4 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xf ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 4 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 4 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xf ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 4 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 4 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 0 xf ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 4 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 4 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 3 ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 2 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 2 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 3 ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 2 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 2 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 3 ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 2 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 2 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 3 ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 2 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 2 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 3 ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 2 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 2 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 3 ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 2 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 2 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 3 ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 2 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 2 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 3 ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 2 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 2 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 3 ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 2 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 2 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 3 ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 2 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 2 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> if <|s|> ( n <|s|> > <|s|> 3 ) <|s|> { <|nl|> <|12-s|> n <|s|> >>>= <|s|> 2 ; <|nl|> <|12-s|> log <|s|> |= <|s|> 2 ; <|nl|> <|8-s|> } <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|8-s|> return <|s|> log <|s|> + <|s|> ( n <|s|> >>> <|s|> 1 ); <|nl|>
<|del|> <|nl|>
<|4-s|> public <|s|> void <|s|> notify Thread Dump ( String <|s|> node Id , <|s|> String <|s|> thread Dump JSON ) <|s|> throws <|s|> Exception ; <|nl|>
<|del|> <|nl|>
<|12-s|> } <|s|> catch <|s|> ( Throwable <|s|> fail Failure ) <|s|> { // <|s|> NOSONAR : <|s|> Must <|s|> maintain <|s|> all <|s|> stacks <|nl|> <|16-s|> failure <|s|> = <|s|> Exception Utils . suppress ( failure , <|s|> fail Failure ); <|nl|> <|12-s|> } <|nl|> <|8-s|> } <|s|> finally <|s|> { <|nl|> <|12-s|> try <|s|> { <|nl|>
<|del|> <|nl|>
<|8-s|> return <|s|> new <|s|> LSMRTree Accessor ( get Harness ( ) , <|nl|>
<|8-s|> } <|nl|> <|8-s|> if <|s|> ( failure <|s|> != <|s|> null ) <|s|> { <|nl|> <|12-s|> throw <|s|> Hyracks Data Exception . create ( failure ); <|nl|> <|8-s|> } <|nl|>
<|8-s|> } <|nl|> <|8-s|> if <|s|> ( failure <|s|> != <|s|> null ) <|s|> { <|nl|> <|12-s|> throw <|s|> Hyracks Data Exception . create ( failure ); <|nl|> <|8-s|> } <|nl|>
<|16-s|> <|4-s|> } <|s|> catch <|s|> ( Throwable <|s|> th ) <|s|> { <|s|> // <|s|> NOSONAR . <|s|> Must <|s|> destroy <|s|> all <|s|> cursors <|nl|>
<|12-s|> } <|s|> catch <|s|> ( Throwable <|s|> th ) <|s|> { <|s|> // <|s|> NOSONAR . <|s|> Don ' t <|s|> lose <|s|> the <|s|> root <|s|> cause <|nl|>
<|nl|> <|4-s|> private <|s|> Destroy Utils ( ) <|s|> { <|nl|> <|4-s|> } <|nl|> <|nl|>
<|16-s|> } <|s|> catch <|s|> ( Throwable <|s|> th ) <|s|> { <|s|> // <|s|> NOSONAR <|s|> must <|s|> destroy <|s|> all <|nl|>
<|16-s|> } <|s|> catch <|s|> ( Throwable <|s|> th ) <|s|> { <|s|> // <|s|> NOSONAR <|s|> must <|s|> destroy <|s|> all <|nl|>
<|16-s|> } <|s|> catch <|s|> ( Throwable <|s|> th ) <|s|> { <|s|> // <|s|> NOSONAR <|s|> must <|s|> destroy <|s|> all <|nl|>
<|16-s|> <|4-s|> // <|s|> In <|s|> case <|s|> we <|s|> must <|s|> keep <|s|> the <|s|> deleted - keys <|s|> BTrees , <|s|> then <|s|> they <|s|> must <|s|> be <|s|> merged <|nl|> <|16-s|> <|4-s|> // <|s|> * before * <|s|> merging <|s|> the <|s|> r - trees <|s|> so <|s|> that <|nl|>
<|16-s|> <|8-s|> // <|s|> Keep <|s|> the <|s|> deleted <|s|> tuples <|s|> since <|s|> the <|s|> oldest <|s|> disk <|s|> component <|nl|> <|16-s|> <|8-s|> // <|s|> is <|s|> not <|s|> included <|s|> in <|s|> the <|s|> merge <|s|> operation <|nl|>
<|8-s|> if <|s|> ( ENFORCE _ NEXT _ HAS _ NEXT <|s|> && <|s|> state <|s|> != <|s|> State . OPENED ) <|s|> { <|nl|> <|12-s|> throw <|s|> new <|s|> Illegal State Exception ( " Cannot <|s|> call <|s|> has Next ( ) <|s|> on <|s|> a <|s|> cursor <|s|> in <|s|> the <|s|> state <|s|> " <|s|> + <|s|> state ); <|nl|>
<|8-s|> if <|s|> ( ENFORCE _ NEXT _ HAS _ NEXT <|s|> && <|s|> state <|s|> != <|s|> State . OPENED ) <|s|> { <|nl|> <|12-s|> throw <|s|> new <|s|> Illegal State Exception ( " Cannot <|s|> call <|s|> next ( ) <|s|> on <|s|> a <|s|> cursor <|s|> in <|s|> the <|s|> state <|s|> " <|s|> + <|s|> state ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|16-s|> <|8-s|> LOGGER . info ( rec ); <|nl|>
<|16-s|> LOGGER . log ( Level . SEVERE , <|s|> " Some <|s|> jobs <|s|> failed <|s|> to <|s|> exit , <|s|> continuing <|s|> shutdown <|s|> abnormally " ); <|nl|>
<|16-s|> <|4-s|> return ; <|nl|> <|16-s|> } <|nl|>
<|4-s|> private <|s|> static <|s|> final <|s|> int <|s|> CC _ BITS <|s|> = <|s|> Short . SIZE ; <|nl|> <|4-s|> private <|s|> static <|s|> final <|s|> int <|s|> ID _ BITS <|s|> = <|s|> Long . SIZE <|s|> - <|s|> CC _ BITS ; <|nl|> <|4-s|> static <|s|> final <|s|> long <|s|> MAX _ ID <|s|> = <|s|> ( 1 L <|s|> << <|s|> ID _ BITS ) <|s|> - <|s|> 1 ; <|nl|>
<|4-s|> private <|s|> static <|s|> final <|s|> int <|s|> CC _ BITS <|s|> = <|s|> Short . SIZE ; <|nl|> <|4-s|> private <|s|> static <|s|> final <|s|> int <|s|> ID _ BITS <|s|> = <|s|> Long . SIZE <|s|> - <|s|> CC _ BITS ; <|nl|> <|4-s|> static <|s|> final <|s|> long <|s|> MAX _ ID <|s|> = <|s|> ( 1 L <|s|> << <|s|> ID _ BITS ) <|s|> - <|s|> 1 ; <|nl|>
<|del|> <|nl|>
<|4-s|> private <|s|> static <|s|> class <|s|> Dataset Input Channel Monitor <|s|> implements <|s|> IInput Channel Monitor <|s|> { <|nl|>
<|4-s|> private <|s|> static <|s|> final <|s|> int <|s|> PARTITION _ ID <|s|> = <|s|> 0 ; <|nl|>
<|nl|> <|4-s|> /* * <|nl|> <|4-s|> <|s|> * <|s|> @ return <|s|> the <|s|> component <|s|> files <|s|> produced <|s|> by <|s|> this <|s|> operation <|nl|> <|4-s|> <|s|> */ <|nl|>
<|4-s|> private <|s|> boolean <|s|> is Disk Component Scan ; <|nl|>
<|4-s|> public <|s|> void <|s|> do Destroy ( ) <|s|> throws <|s|> Hyracks Data Exception <|s|> { <|nl|> <|8-s|> if <|s|> ( btree Cursors <|s|> != <|s|> null ) <|s|> { <|nl|> <|12-s|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> num BTrees ; <|s|> ++ i ) <|s|> { <|nl|> <|16-s|> if <|s|> ( btree Cursors [ i ] <|s|> != <|s|> null ) <|s|> { <|nl|> <|16-s|> <|4-s|> btree Cursors [ i ] . destroy ( ); <|nl|> <|16-s|> } <|nl|>
<|8-s|> current Cursor <|s|> = <|s|> lsm Initial State . is Disk Component Scan ( ) <|s|> ? <|s|> scan Cursor <|nl|> <|16-s|> : <|s|> btree Pred . is Point Predicate ( lsm Initial State . get Original Key Comparator ( ) ) <|s|> ? <|s|> point Cursor <|s|> : <|s|> range Cursor ; <|nl|>
<|4-s|> public <|s|> boolean <|s|> init From Sub Tree ( Mutable < ILogical Operator > <|s|> sub Tree Op Ref ) <|s|> throws <|s|> Algebricks Exception <|s|> { <|nl|>
<|12-s|> throw <|s|> Compilation Exception . create ( Error Code . CANNOT _ SERIALIZE _ A _ VALUE , <|s|> e ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> ILSMOperation Tracker <|s|> get Primary Operation Tracker ( int <|s|> dataset ID , <|s|> int <|s|> partition ); <|nl|>
<|16-s|> <|8-s|> Thread . current Thread ( ) . interrupt ( ); <|nl|> <|16-s|> <|8-s|> throw <|s|> Hyracks Data Exception . create ( e ); <|nl|>
<|16-s|> <|8-s|> Thread . current Thread ( ) . interrupt ( ); <|nl|> <|16-s|> <|8-s|> throw <|s|> Hyracks Data Exception . create ( e ); <|nl|>
<|4-s|> public <|s|> synchronized <|s|> Set < ILSMIndex > <|s|> get Dataset Partition Open Indexes ( int <|s|> partition ) <|s|> { <|nl|>
<|8-s|> return <|s|> " JID [ " <|s|> + <|s|> ( id <|s|> >>> <|s|> ID _ BITS ) <|s|> + <|s|> " : " <|s|> + <|s|> get Id Only ( ) <|s|> + <|s|> " ] " ; <|nl|>
<|del|> <|nl|>
<|8-s|> boolean <|s|> secondary Key Field Used After Select Or Join Op ; <|nl|>
<|8-s|> boolean <|s|> does SIdx Search Cover All Predicates ; <|nl|>
<|4-s|> private <|s|> class <|s|> Abstract STSingle Geometry Evaluator <|s|> implements <|s|> IScalar Evaluator <|s|> { <|nl|>
<|4-s|> private <|s|> class <|s|> STGeom From WKBEvaulator <|s|> implements <|s|> IScalar Evaluator <|s|> { <|nl|>
<|16-s|> return <|s|> new <|s|> STPolygonize Evaluator ( args , <|s|> ctx ); <|nl|> <|12-s|> } <|nl|> <|8-s|> }; <|nl|> <|4-s|> } <|nl|>
<|8-s|> return <|s|> Objects . hash ( first , <|s|> second , <|s|> third , <|s|> fourth ); <|nl|>
<|8-s|> Quadruple < ? , <|s|> ? , <|s|> ? , <|s|> ? > <|s|> quadruple <|s|> = <|s|> ( Quadruple < ? , <|s|> ? , <|s|> ? , <|s|> ? > ) <|s|> o ; <|nl|> <|8-s|> return <|s|> Objects . equals ( first , <|s|> quadruple . first ) <|s|> && <|s|> Objects . equals ( second , <|s|> quadruple . second ) <|nl|> <|16-s|> && <|s|> Objects . equals ( third , <|s|> quadruple . third ) <|s|> && <|s|> Objects . equals ( fourth , <|s|> quadruple . fourth ); <|nl|>
<|8-s|> return <|s|> current Element Ix <|s|> < <|s|> num Elements ; <|nl|>
public <|s|> abstract <|s|> class <|s|> Enforced Index Cursor <|s|> implements <|s|> IIndex Cursor <|s|> { <|nl|>
<|4-s|> public <|s|> void <|s|> initialize ( INc Application Context <|s|> runtime Context , <|nl|>
class <|s|> Cc Txn Id Factory <|s|> implements <|s|> ITxn Id Factory <|s|> { <|nl|> <|4-s|> private <|s|> static <|s|> final <|s|> int <|s|> TXN _ BLOCK _ SIZE <|s|> = <|s|> 1024 ; <|nl|>
<|16-s|> // <|s|> retry <|nl|> <|16-s|> LOGGER . info ( " block <|s|> exhausted ; <|s|> obtaining <|s|> new <|s|> block <|s|> from <|s|> supplier " ); <|nl|>
<|8-s|> IAsterix State Proxy <|s|> proxy ; <|nl|> <|8-s|> if <|s|> ( LOGGER . is Loggable ( Level . INFO ) ) <|s|> { <|nl|> <|12-s|> LOGGER . info ( " Bootstrapping <|s|> metadata " ); <|nl|> <|8-s|> } <|nl|>
<|8-s|> proxy <|s|> = <|s|> ( IAsterix State Proxy ) <|s|> get Service Context ( ) . get Distributed State ( ); <|nl|> <|8-s|> if <|s|> ( proxy <|s|> == <|s|> null ) <|s|> { <|nl|>
<|8-s|> public <|s|> Metadata Transaction Context <|s|> begin Transaction ( ) <|s|> throws <|s|> Remote Exception <|s|> { <|nl|>
class <|s|> Cc Txn Id Factory <|s|> implements <|s|> ITxn Id Factory <|s|> { <|nl|> <|4-s|> private <|s|> static <|s|> final <|s|> int <|s|> TXN _ BLOCK _ SIZE <|s|> = <|s|> 1024 ; <|nl|>
<|12-s|> queue . stop ( ); <|nl|> <|12-s|> if <|s|> ( nc App Entry Point <|s|> != <|s|> null ) <|s|> { <|nl|> <|16-s|> nc App Entry Point . stop ( ); <|nl|>
<|12-s|> /* * <|nl|>
<|12-s|> // <|s|> In <|s|> case <|s|> we <|s|> must <|s|> keep <|s|> the <|s|> deleted - keys <|s|> BTrees , <|s|> then <|s|> they <|s|> must <|s|> be <|s|> merged <|s|> * before * <|s|> merging <|s|> the <|s|> inverted <|nl|> <|12-s|> // <|s|> indexes <|s|> so <|s|> that <|s|> lsm Harness . end Search ( ) <|s|> is <|s|> called <|s|> once <|s|> when <|s|> the <|s|> inverted <|s|> indexes <|s|> have <|s|> been <|s|> merged . <|nl|>
<|del|> <|nl|>
<|8-s|> -- reference Count ; <|nl|> <|8-s|> if <|s|> ( reference Count <|s|> < <|s|> 0 ) <|s|> { <|nl|> <|12-s|> throw <|s|> new <|s|> Illegal State Exception ( " Unreferencing <|s|> an <|s|> unreferenced <|s|> object " ); <|nl|> <|8-s|> } <|nl|>
<|8-s|> threads . add ( new <|s|> Throwable ( ) . get Stack Trace ( ) ); <|nl|>
<|4-s|> <|s|> * <|s|> All <|s|> other <|s|> calls <|s|> after <|s|> this <|s|> method <|s|> is <|s|> invoked <|s|> is <|s|> undefined <|nl|>
<|12-s|> ARecord Type <|s|> meta Record Type , <|s|> ILogical Operator <|s|> unnest Map Op , <|s|> Index <|s|> index , <|nl|> <|12-s|> secondary Unnest Map Output Var Type <|s|> key Var Type ) <|s|> throws <|s|> Algebricks Exception <|s|> { <|nl|>
<|8-s|> // <|s|> If <|s|> a <|s|> secondary - index <|s|> search <|s|> didn ' t <|s|> generate <|s|> SKs , <|s|> set <|s|> it <|s|> to <|s|> zero . <|nl|> <|8-s|> // <|s|> Currently , <|s|> only <|s|> an <|s|> inverted - index <|s|> search <|s|> doesn ' t <|s|> generate <|s|> any <|s|> SKs . <|nl|> <|8-s|> boolean <|s|> is Ngram Or Keyword Index <|s|> = <|s|> is Inverted Index ( index ); <|nl|> <|8-s|> if <|s|> ( is Ngram Or Keyword Index ) <|s|> { <|nl|>
<|16-s|> stop <|s|> = <|s|> start <|s|> + <|s|> 1 ; <|nl|>
<|16-s|> if <|s|> ( real Type Converted To Integer Type <|s|> && <|s|> ! index . is Enforced ( ) <|s|> && <|s|> ! index . is Overriding Key Field Types ( ) ) <|s|> { <|nl|>
<|16-s|> } <|s|> else <|s|> if <|s|> ( ! real Type Converted To Integer Type ) <|s|> { <|nl|> <|16-s|> <|4-s|> // <|s|> Type <|s|> conversion <|s|> only <|s|> case : <|s|> ( e . g . , <|s|> INT <|s|> -> <|s|> BIGINT ) <|nl|>
<|del|> <|nl|>
<|8-s|> boolean <|s|> success <|s|> = <|s|> true ; <|nl|> <|8-s|> try <|s|> { <|nl|> <|12-s|> Throwable <|s|> exception <|s|> = <|s|> null ; <|nl|>
<|16-s|> Txn Id Block Request . Block <|s|> new Block ; <|nl|>
<|8-s|> long <|s|> max Txn Id <|s|> = <|s|> app Context . get Max Txn Id ( ); <|nl|>
<|16-s|> } <|s|> catch <|s|> ( Throwable <|s|> ignore ) <|s|> { <|s|> // <|s|> NOSONAR <|s|> Logging <|s|> exception <|s|> will <|s|> be <|s|> ignored <|nl|> <|16-s|> <|4-s|> // <|s|> NOSONAR <|s|> ignore <|nl|>
<|16-s|> } <|s|> catch <|s|> ( Throwable <|s|> ignore ) <|s|> { <|s|> // <|s|> NOSONAR <|s|> Logging <|s|> exception <|s|> will <|s|> be <|s|> ignored <|nl|> <|16-s|> <|4-s|> // <|s|> NOSONAR <|s|> ignore <|nl|>
<|nl|> @ Functional Interface <|nl|>
<|4-s|> <|s|> * <|s|> The <|s|> behavior <|s|> of <|s|> other <|s|> calls <|s|> after <|s|> this <|s|> method <|s|> is <|s|> invoked <|s|> is <|s|> undefined <|nl|>
<|16-s|> } <|s|> catch <|s|> ( Throwable <|s|> ignore ) <|s|> { <|nl|>
<|16-s|> } <|s|> catch <|s|> ( Throwable <|s|> ignore ) <|s|> { <|nl|>
<|del|> <|nl|>
<|12-s|> root <|s|> = <|s|> close ( index Helpers . get ( i ) , <|s|> root ); <|nl|>
<|12-s|> Hyracks Data Exception . throw If Not Null ( failure ); <|nl|>
<|12-s|> throw <|s|> Hyracks Data Exception . create ( close Exception ); <|nl|>
<|12-s|> throw <|s|> Hyracks Data Exception . create ( close Exception ); <|nl|>
<|12-s|> throw <|s|> Hyracks Data Exception . create ( close Exception ); <|nl|>
<|8-s|> Hyracks Data Exception . throw If Not Null ( failure ); <|nl|>
<|16-s|> } <|s|> catch <|s|> ( Throwable <|s|> ignore ) <|s|> { <|s|> // <|s|> NOSONAR <|s|> Logging <|s|> exception <|s|> will <|s|> be <|s|> ignored <|nl|> <|16-s|> <|4-s|> // <|s|> NOSONAR <|s|> ignore <|nl|>
<|16-s|> } <|s|> catch <|s|> ( Throwable <|s|> ignore ) <|s|> { <|nl|>
<|8-s|> Hyracks Data Exception . throw If Not Null ( failure ); <|nl|>
<|s|> * <|2-s|> <|s|> public <|s|> Test Rule <|s|> watcher <|s|> = <|s|> new <|s|> Test Method Tracer ( Level . INFO ); <|nl|> <|s|> * <|s|> </ code > <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> failure <|s|> = <|s|> Destroy Utils . destroy ( failure , <|s|> insert Search Cursor , <|s|> mem Cursor ); <|nl|>
<|8-s|> failure <|s|> = <|s|> Destroy Utils . destroy ( failure , <|s|> insert Search Cursor , <|s|> mem Cursor ); <|nl|>
<|8-s|> failure <|s|> = <|s|> Destroy Utils . destroy ( failure , <|s|> insert Search Cursor , <|s|> mem Cursor ); <|nl|>
<|16-s|> <|8-s|> LOGGER . info ( " Installed <|s|> function : <|s|> " <|s|> + <|s|> function Full Name ); <|nl|>
<|4-s|> public <|s|> String <|s|> get Params String ( ); <|nl|>
<|4-s|> private <|s|> final <|s|> String <|s|> params String ; <|nl|>
<|16-s|> cur Page ++ ; <|nl|>
<|12-s|> } <|nl|> <|12-s|> if <|s|> ( ! shutdown Start ) <|s|> { <|nl|> <|16-s|> page Cleaner Policy . notify Clean Cycle Finish ( thread Lock ); <|nl|> <|12-s|> } <|nl|>
<|8-s|> try <|s|> { <|nl|> <|12-s|> synchronized <|s|> ( cleaner Thread . thread Lock ) <|s|> { <|nl|> <|16-s|> cleaner Thread . shutdown Start <|s|> = <|s|> true ; <|nl|> <|16-s|> cleaner Thread . thread Lock . notify All ( ); <|nl|> <|16-s|> while <|s|> ( ! cleaner Thread . shutdown Complete ) <|s|> { <|nl|> <|16-s|> <|4-s|> cleaner Thread . thread Lock . wait ( ); <|nl|>
<|12-s|> int <|s|> pin Count ; <|nl|>
<|16-s|> if <|s|> ( partition Cursors [ i ] <|s|> == <|s|> null ) <|s|> { <|nl|>
<|8-s|> private <|s|> static <|s|> final <|s|> int <|s|> TABLE _ FRAME _ SIZE <|s|> = <|s|> 32768 ; <|nl|> <|8-s|> private <|s|> static <|s|> final <|s|> int <|s|> TABLE _ SIZE <|s|> = <|s|> 100 ; <|nl|>
<|12-s|> arg Pointables <|s|> = <|s|> new <|s|> IPointable [ args . length ]; <|nl|> <|12-s|> arg Record Pointables <|s|> = <|s|> new <|s|> ARecord Visitable Pointable [ args . length ]; <|nl|> <|12-s|> open Record Pointable <|s|> = <|s|> new <|s|> ARecord Visitable Pointable ( Default Open Field Type . NESTED _ OPEN _ RECORD _ TYPE ); <|nl|>
<|4-s|> enum <|s|> Secondary Unnest Map Output Var Type <|s|> { <|nl|>
<|16-s|> <|4-s|> throw <|s|> Compilation Exception . create ( Error Code . CANNOT _ GET _ CONDITIONAL _ SPLIT _ KEY _ VARIABLE ); <|nl|>
<|16-s|> <|4-s|> unnest Map Memory Size <|s|> += <|s|> text Search Memory Size ; <|nl|>
<|16-s|> <|4-s|> root <|s|> = <|s|> Exception Utils . suppress ( root , <|s|> th ); <|s|> // <|s|> NOSONAR <|nl|>
<|16-s|> root <|s|> = <|s|> Exception Utils . suppress ( root , <|s|> th ); <|s|> // <|s|> NOSONAR <|nl|>
<|4-s|> default <|s|> IChannel Closed Handler <|s|> get Channel Close Handler ( Http Server <|s|> server ) <|s|> { <|nl|> <|8-s|> return <|s|> server . get Channel Close Handler ( ); <|nl|>
<|8-s|> ncs . get Work Queue ( ) . schedule ( new <|s|> Ensure All Cc Tasks Completed ( ncs , <|s|> cc Id , <|s|> aborted Tasks ) ); <|nl|>
<|del|> <|nl|>
<|4-s|> public <|s|> JRecord ( ARecord Type <|s|> record Type , <|s|> IJObject [ ] <|s|> fields , <|s|> Map < String , <|s|> IJObject > <|s|> open Fields ) <|s|> { <|nl|>
<|4-s|> public <|s|> void <|s|> reset ( IJObject [ ] <|s|> fields , <|s|> Map < String , <|s|> IJObject > <|s|> open Fields ) <|s|> throws <|s|> Hyracks Data Exception <|s|> { <|nl|>
<|4-s|> private <|s|> JBuiltin Type ( ) { <|nl|> <|8-s|> // <|s|> no <|s|> op <|nl|> <|4-s|> } <|nl|> <|nl|> <|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JBOOLEAN <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> private <|s|> JBuiltin Type ( ) { <|nl|> <|8-s|> // <|s|> no <|s|> op <|nl|> <|4-s|> } <|nl|> <|nl|> <|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JBOOLEAN <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> private <|s|> JBuiltin Type ( ) { <|nl|> <|8-s|> // <|s|> no <|s|> op <|nl|> <|4-s|> } <|nl|> <|nl|> <|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JBOOLEAN <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> private <|s|> JBuiltin Type ( ) { <|nl|> <|8-s|> // <|s|> no <|s|> op <|nl|> <|4-s|> } <|nl|> <|nl|> <|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JBOOLEAN <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JBYTE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JBYTE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JBYTE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JCIRCLE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JCIRCLE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JCIRCLE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JDATE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JDATE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JDATE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JDATETIME <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JDATETIME <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JDATETIME <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JDOUBLE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JDOUBLE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JDOUBLE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JDURATION <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JDURATION <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JDURATION <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JFLOAT <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JFLOAT <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JFLOAT <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JINT <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JINT <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JINT <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JINTERVAL <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JINTERVAL <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JINTERVAL <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JLINE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JLINE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JLINE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JLONG <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JLONG <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JLONG <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JMISSING <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JMISSING <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JMISSING <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JNULL <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JNULL <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JNULL <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JPOINT <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JPOINT <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JPOINT <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JPOINT 3 D <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JPOINT 3 D <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JPOINT 3 D <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JPOLYGON <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JPOLYGON <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JPOLYGON <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JRECTANGLE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JRECTANGLE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JRECTANGLE <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JSHORT <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JSHORT <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JSHORT <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JSTRING <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JSTRING <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JSTRING <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JTIME <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JTIME <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> JBuiltin Type <|s|> JTIME <|s|> = <|s|> new <|s|> JBuiltin Type ( ) <|s|> { <|nl|>
<|8-s|> ACircle Serializer Deserializer . INSTANCE . serialize ( ( AMutable Circle ) <|s|> value , <|s|> data Output ); <|nl|>
<|8-s|> ADate Serializer Deserializer . INSTANCE . serialize ( ( AMutable Date ) <|s|> value , <|s|> data Output ); <|nl|>
<|8-s|> ADate Time Serializer Deserializer . INSTANCE . serialize ( ( AMutable Date Time ) <|s|> value , <|s|> data Output ); <|nl|>
<|8-s|> ADuration Serializer Deserializer . INSTANCE . serialize ( ( AMutable Duration ) <|s|> value , <|s|> data Output ); <|nl|>
<|8-s|> AInterval Serializer Deserializer . INSTANCE . serialize ( ( AMutable Interval ) <|s|> value , <|s|> data Output ); <|nl|>
<|8-s|> ALine Serializer Deserializer . INSTANCE . serialize ( ( AMutable Line ) <|s|> value , <|s|> data Output ); <|nl|>
<|4-s|> public <|s|> void <|s|> reset ( ) <|s|> { <|nl|> <|8-s|> // <|s|> no <|s|> op <|s|> for <|s|> NULL <|nl|>
<|8-s|> APoint 3 DSerializer Deserializer . INSTANCE . serialize ( ( AMutable Point 3 D ) <|s|> value , <|s|> data Output ); <|nl|>
<|16-s|> <|4-s|> } <|s|> else <|s|> if <|s|> ( d <|s|> == <|s|> Double . NEGATIVE _ INFINITY ) <|s|> { <|s|> // <|s|> NOSONAR <|nl|>
<|16-s|> <|4-s|> } <|s|> else <|s|> if <|s|> ( d <|s|> == <|s|> Double . NEGATIVE _ INFINITY ) <|s|> { <|s|> // <|s|> NOSONAR <|nl|>
<|16-s|> <|4-s|> } <|s|> else <|s|> if <|s|> ( f <|s|> == <|s|> Float . NEGATIVE _ INFINITY ) <|s|> { <|s|> // <|s|> NOSONAR <|nl|>
<|16-s|> <|4-s|> } <|s|> else <|s|> if <|s|> ( f <|s|> == <|s|> Float . NEGATIVE _ INFINITY ) <|s|> { <|s|> // <|s|> NOSONAR <|nl|>
<|16-s|> <|4-s|> } <|s|> else <|s|> if <|s|> ( d <|s|> == <|s|> Double . NEGATIVE _ INFINITY ) <|s|> { <|s|> // <|s|> NOSONAR <|nl|>
<|16-s|> <|4-s|> } <|s|> else <|s|> if <|s|> ( f <|s|> == <|s|> Float . NEGATIVE _ INFINITY ) <|s|> { <|s|> // <|s|> NOSONAR <|nl|>
<|12-s|> flush If Needed ( ); <|nl|>
<|16-s|> } <|s|> catch <|s|> ( Throwable <|s|> logging Failure ) <|s|> { <|s|> // <|s|> NOSONAR : <|s|> Ignore <|s|> catching <|s|> Throwable <|nl|> <|16-s|> <|4-s|> // <|s|> NOSONAR <|s|> ignore <|s|> logging <|s|> failure <|nl|>
<|16-s|> } <|s|> catch <|s|> ( Throwable <|s|> logging Failure ) <|s|> { <|s|> // <|s|> NOSONAR : <|s|> Ignore <|s|> catching <|s|> Throwable <|nl|> <|16-s|> <|4-s|> // <|s|> NOSONAR <|s|> ignore <|s|> logging <|s|> failure <|nl|>
<|16-s|> root <|s|> = <|s|> Exception Utils . suppress ( root , <|s|> th ); <|s|> // <|s|> NOSONAR <|nl|>
<|8-s|> } <|s|> catch <|s|> ( Interrupted Exception <|s|> e ) <|s|> { <|s|> // <|s|> NOSONAR : <|s|> The <|s|> call <|s|> below <|s|> will <|s|> re - interrupt <|nl|>
<|8-s|> } <|s|> catch <|s|> ( Throwable <|s|> th ) <|s|> { <|s|> // <|s|> NOSONAR : <|s|> This <|s|> method <|s|> must <|s|> never <|s|> throw <|s|> anything <|nl|>
<|8-s|> while <|s|> ( true ) <|s|> { <|s|> // <|s|> NOSONAR : <|s|> Suppress <|s|> 1 <|s|> continue <|s|> and <|s|> 1 <|s|> break <|nl|>
<|12-s|> } <|s|> catch <|s|> ( Interrupted Exception <|s|> e ) <|s|> { <|s|> // <|s|> NOSONAR : <|s|> This <|s|> is <|s|> not <|s|> supposed <|s|> to <|s|> be <|s|> ever <|s|> interrupted <|nl|>
<|12-s|> } <|s|> catch <|s|> ( Throwable <|s|> th ) <|s|> { <|s|> // <|s|> NOSONAR <|s|> Will <|s|> be <|s|> suppressed <|nl|>
<|16-s|> } <|s|> catch <|s|> ( Throwable <|s|> logging Failure ) <|s|> { <|s|> // <|s|> NOSONAR : <|s|> Ignore <|s|> catching <|s|> Throwable <|nl|> <|16-s|> <|4-s|> // <|s|> NOSONAR <|s|> ignore <|s|> logging <|s|> failure <|nl|>
<|12-s|> waf <|s|> = <|s|> File . create Temp File ( prefix , <|s|> WORKSPACE _ FILE _ SUFFIX , <|s|> new <|s|> File ( dev . get Mount ( ) , <|s|> wa Path ) ); <|nl|>
<|12-s|> } <|s|> catch <|s|> ( Interrupted Exception <|s|> e ) <|s|> { <|s|> // <|s|> NOSONAR : <|s|> This <|s|> is <|s|> not <|s|> supposed <|s|> to <|s|> be <|s|> ever <|s|> interrupted <|nl|>
<|16-s|> <|4-s|> LOGGER . error ( " Error <|s|> in <|s|> TCPEndpoint <|s|> { } " , <|s|> local Address , <|s|> e ); <|nl|>
<|del|> <|nl|>
<|4-s|> public <|s|> void <|s|> test Flush Metadata Only Component ( ) <|s|> { <|nl|>
<|4-s|> public <|s|> static <|s|> boolean <|s|> equals ( IValue Reference <|s|> first , <|s|> IValue Reference <|s|> second ) <|s|> { <|s|> // <|s|> NOSONAR <|nl|>
<|8-s|> String <|s|> config Path <|s|> = <|s|> Paths . get ( System . get Property ( " user . dir " ) , <|s|> " src " , <|s|> " test " , <|s|> " resources " , <|s|> " cc . conf " ) . to String ( ); <|nl|>
<|8-s|> if <|s|> ( nc Jvm Args <|s|> == <|s|> null <|s|> || <|s|> ! nc Jvm Args . contains ( JVM _ ARG _ MAX _ GCPAUSE _ MILLIS ) ) <|s|> { <|nl|> <|12-s|> String <|s|> gc Max Pause Arg <|s|> = <|s|> JVM _ ARG _ MAX _ GCPAUSE _ MILLIS <|s|> + <|s|> get Gc Max Pause Millis ( ); <|nl|>
<|8-s|> if <|s|> ( nc Jvm Args <|s|> == <|s|> null <|s|> || <|s|> ! nc Jvm Args . contains ( JVM _ ARG _ MAX _ GCPAUSE _ MILLIS ) ) <|s|> { <|nl|> <|12-s|> String <|s|> gc Max Pause Arg <|s|> = <|s|> JVM _ ARG _ MAX _ GCPAUSE _ MILLIS <|s|> + <|s|> get Gc Max Pause Millis ( ); <|nl|>
<|8-s|> return <|s|> external Function Parameters . get Or Default ( dataverse Name <|s|> + <|s|> " . " <|s|> + <|s|> full Function Name , <|s|> Collections . empty List ( ) ); <|nl|>
<|16-s|> <|4-s|> Function Signature <|s|> signature <|s|> = <|s|> new <|s|> Function Signature ( dataverse , <|s|> function Full Name , <|s|> args . size ( ) ); <|nl|>
<|12-s|> opts . for Each ( opt <|s|> -> <|s|> nc Config Manager . set ( node Id , <|s|> opt . get Left ( ) , <|s|> opt . get Right ( ) ) ); <|nl|>
<|8-s|> long <|s|> before <|s|> = <|s|> System . nano Time ( ); <|nl|>
<|8-s|> long <|s|> before <|s|> = <|s|> System . nano Time ( ); <|nl|>
<|4-s|> public <|s|> synchronized <|s|> void <|s|> after Finalize ( LSMOperation Type <|s|> op Type , <|s|> ILSMDisk Component <|s|> new Component ) <|nl|> <|12-s|> throws <|s|> Hyracks Data Exception <|s|> { <|nl|>
<|4-s|> public <|s|> void <|s|> after Finalize ( ILSMIndex Operation Context <|s|> op Ctx ) <|s|> throws <|s|> Hyracks Data Exception <|s|> { <|nl|> <|nl|>
<|16-s|> btree Leaf Frame Factory , <|s|> ( IExtended Modification Operation Callback ) <|s|> iap . get Modification Callback ( ) , <|nl|>
<|del|> <|nl|>
<|8-s|> IAsterix List Builder <|s|> list Builder <|s|> = <|s|> new <|s|> Ordered List Builder ( ); <|nl|>
<|4-s|> private <|s|> boolean <|s|> a Boolean ; <|nl|>
<|8-s|> return <|s|> ( AMutable Rectangle ) <|s|> value ; <|nl|>
<|4-s|> public <|s|> String <|s|> get Init Parameters ( ) <|s|> { <|nl|> <|8-s|> return <|s|> init Parameters ; <|nl|>
<|12-s|> writer . open ( ); <|nl|> <|12-s|> open <|s|> = <|s|> true ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|12-s|> } ); <|nl|>
<|16-s|> throw <|s|> new <|s|> Timeout Exception ( " Stop <|s|> condition <|s|> was <|s|> not <|s|> met <|s|> after <|s|> " <|s|> + <|s|> unit . to Seconds ( timeout ) <|s|> + <|s|> " <|s|> seconds . " ); <|nl|>
<|8-s|> return <|s|> compare String Bin Values ( a , <|s|> b , <|s|> comparator ) <|s|> == <|s|> 0 ; <|nl|>
<|8-s|> return <|s|> comparator . compare ( a . get Byte Array ( ) , <|s|> a . get Start Offset ( ) <|s|> + <|s|> 1 , <|s|> a . get Length ( ) <|s|> - <|s|> 1 , <|s|> b . get Byte Array ( ) , <|nl|>
<|16-s|> Index Cursor Utils . close ( btree Cursors [ i ] , <|s|> th ); <|nl|>
<|16-s|> root <|s|> = <|s|> Exception Utils . suppress ( root , <|s|> th ); <|s|> // <|s|> NOSONAR : <|s|> Using <|s|> the <|s|> same <|s|> variable <|s|> is <|s|> not <|s|> bad <|s|> in <|s|> this <|s|> context <|nl|>
<|16-s|> Index Cursor Utils . close ( cursors [ j ] , <|s|> th ); <|nl|>
<|16-s|> Index Cursor Utils . close ( cursors [ j ] , <|s|> th ); <|nl|>
<|12-s|> th <|s|> = <|s|> Index Cursor Utils . close ( cursors [ j ] , <|s|> th ); <|s|> // <|s|> NOSONAR : <|s|> Using <|s|> the <|s|> same <|s|> variable <|s|> is <|s|> cleaner <|s|> in <|s|> this <|s|> context <|nl|>
<|4-s|> <|s|> * <|nl|>
<|16-s|> root <|s|> = <|s|> Exception Utils . suppress ( root , <|s|> th ); <|nl|>
<|8-s|> List < Future < Void >> <|s|> tasks <|s|> = <|s|> new <|s|> Array List < > ( operator Node Pushables BFSOrder . size ( ) ); <|nl|> <|8-s|> Queue < Throwable > <|s|> failures <|s|> = <|s|> new <|s|> Array Blocking Queue < > ( operator Node Pushables BFSOrder . size ( ) ); <|nl|>
<|del|> <|nl|>
<|16-s|> <|8-s|> failures . offer ( th ); <|nl|>
<|4-s|> void <|s|> completed ( Txn Id <|s|> id ); <|nl|>
<|4-s|> void <|s|> completed ( Txn Id <|s|> id ); <|nl|>
<|16-s|> <|2-s|> * <|s|> job <|s|> to <|s|> ensure <|s|> that <|s|> the <|s|> checkpointing <|s|> coexists <|s|> peacefully <|nl|> <|16-s|> <|2-s|> * <|s|> with <|s|> other <|s|> concurrent <|s|> readers <|s|> of <|s|> the <|s|> log <|s|> that <|s|> request <|nl|>
<|del|> <|nl|>
<|4-s|> void <|s|> completed ( Txn Id <|s|> id ); <|nl|>
<|8-s|> } <|nl|> <|8-s|> file Channel . close ( ); <|nl|>
<|12-s|> while <|s|> ( ! Thread . current Thread ( ) . is Interrupted ( ) ) <|s|> { <|nl|>
<|8-s|> secured LSNs <|s|> = <|s|> new <|s|> Hash Map < > ( ); <|nl|>
<|8-s|> synchronized <|s|> ( txn Subsystem . get Recovery Manager ( ) ) <|s|> { <|nl|>
<|16-s|> throw <|s|> new <|s|> Illegal State Exception ( " Unlock <|s|> on <|s|> nonexisting <|s|> LSN " ); <|nl|>
<|16-s|> final <|s|> IBinary Comparator <|s|> string Binary Comparator <|s|> = <|s|> Pointable Helper . create String Binary Comparator ( ); <|nl|>
<|8-s|> final <|s|> IBinary Comparator <|s|> string Binary Comparator <|s|> = <|s|> Pointable Helper . create String Binary Comparator ( ); <|nl|>
<|16-s|> Index Cursor Utils . close ( btree Cursors [ i ] , <|s|> th ); <|nl|>
<|16-s|> Index Cursor Utils . close ( cursors [ j ] , <|s|> th ); <|nl|>
<|16-s|> Index Cursor Utils . close ( cursors [ j ] , <|s|> th ); <|nl|>
<|8-s|> } <|s|> finally <|s|> { <|nl|> <|12-s|> complete Semaphore . acquire Uninterruptibly ( ); <|nl|>
<|12-s|> log Read Failure ( status ); <|nl|> <|12-s|> throw <|s|> new <|s|> Illegal State Exception ( " Unexpected <|s|> log <|s|> read <|s|> status : <|s|> " <|s|> + <|s|> status ); <|nl|>
<|8-s|> return <|s|> secured LSNs . is Empty ( ) <|s|> ? <|s|> Collections . min ( secured LSNs . values ( ) ) <|s|> : <|s|> - 1 ; <|nl|>
<|nl|> <|4-s|> /* * <|nl|> <|4-s|> <|s|> * <|s|> Notifies <|s|> this <|s|> { @ link <|s|> ICheckpoint Manager } <|s|> that <|s|> the <|s|> transaction <|s|> identified <|s|> by <|s|> { @ code <|s|> id } <|s|> completed . <|nl|> <|4-s|> <|s|> * <|nl|> <|4-s|> <|s|> * <|s|> @ param <|s|> id <|nl|> <|4-s|> <|s|> */ <|nl|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> } <|s|> catch <|s|> ( Hyracks Data Exception <|s|> e ) <|s|> { <|nl|>
<|4-s|> protected <|s|> Map < Txn Id , <|s|> Long > <|s|> secured LSNs ; <|nl|>
<|12-s|> checkpoint Manager . secure ( recovery Txn Id ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> if <|s|> ( min Secured LSN <|s|> != <|s|> NO _ SECURED _ LSN <|s|> && <|s|> min First LSN <|s|> >= <|s|> get Min Secured LSN ( ) ) <|s|> { <|nl|> <|12-s|> return <|s|> min Secured LSN ; <|nl|>
<|8-s|> return <|s|> secured LSNs . is Empty ( ) <|s|> ? <|s|> NO _ SECURED _ LSN <|s|> : <|s|> Collections . min ( secured LSNs . values ( ) ); <|nl|>
<|8-s|> String <|s|> thread Name <|s|> = <|s|> ct . get Name ( ); <|nl|> <|8-s|> ct . set Name ( display Name <|s|> + <|s|> " : " <|s|> + <|s|> task Attempt Id <|s|> + <|s|> " : " <|s|> + <|s|> 0 ); <|nl|>
<|12-s|> TIMEZONE _ OFFSETS [ i ] <|s|> = <|s|> Time Zone . get Time Zone ( new <|s|> String ( TIMEZONE _ IDS [ i ] , <|s|> ENCODING ) ) . get Raw Offset ( ); <|nl|>
<|16-s|> <|16-s|> throw <|s|> new <|s|> Asterix Temporal Type Parse Exception ( " Unexpected <|s|> timezone <|s|> string : <|s|> " <|s|> + <|s|> new <|s|> String ( <|nl|> <|16-s|> <|16-s|> <|8-s|> data , <|s|> data Start <|s|> + <|s|> data String Pointer , <|s|> data Start <|s|> + <|s|> timezone End Field , <|s|> ENCODING ) ); <|nl|>
<|16-s|> <|16-s|> throw <|s|> new <|s|> Asterix Temporal Type Parse Exception ( " Unexpected <|s|> string <|s|> for <|s|> AM / PM <|s|> marker <|s|> " <|nl|> <|16-s|> <|16-s|> <|8-s|> + <|s|> new <|s|> String ( data , <|s|> data Start <|s|> + <|s|> data String Pointer , <|nl|> <|16-s|> <|16-s|> <|16-s|> data Start <|s|> + <|s|> data String Pointer <|s|> + <|s|> 2 , <|s|> ENCODING ) ); <|nl|>
<|12-s|> return <|s|> writes <|s|> - <|s|> cancelled Writes ; <|nl|>
<|12-s|> } <|nl|> <|12-s|> last Tuple . reset ( last Tuple Builder . get Field End Offsets ( ) , <|s|> last Tuple Builder . get Byte Array ( ) ); <|nl|>
<|12-s|> } <|nl|> <|nl|>
<|8-s|> public <|s|> IIndex Cursor <|s|> create Search Cursor ( boolean <|s|> exclusive ) <|s|> throws <|s|> Hyracks Data Exception <|s|> { <|nl|> <|12-s|> if <|s|> ( searcher <|s|> == <|s|> null ) <|s|> { <|nl|> <|16-s|> searcher <|s|> = <|s|> new <|s|> TOccurrence Searcher ( index , <|s|> ctx ); <|nl|> <|12-s|> } <|nl|> <|12-s|> return <|s|> new <|s|> On Disk Inverted Index Search Cursor ( searcher ); <|nl|>
<|8-s|> new Token <|s|> = <|s|> this . key Tuple <|s|> == <|s|> null ; <|nl|>
<|del|> <|nl|>
<|8-s|> LSMInverted Index Test Utils . compare Actual And Expected Indexes Range Search ( test Ctx ); <|nl|>
<|16-s|> <|4-s|> return <|s|> true ; <|nl|>
<|16-s|> // <|s|> Current <|s|> List <|s|> Ser De <|s|> assumes <|s|> a <|s|> strongly <|s|> typed <|s|> list , <|s|> so <|s|> we <|s|> do <|s|> not <|s|> constant <|s|> fold <|s|> the <|s|> list <|s|> constructors <|nl|> <|16-s|> // <|s|> if <|s|> they <|s|> are <|s|> not <|s|> strongly <|s|> typed <|nl|>
<|12-s|> } <|s|> catch <|s|> ( Hyracks Data Exception <|s|> | <|s|> Algebricks Exception <|s|> e ) <|s|> { <|nl|> <|16-s|> if <|s|> ( Algebricks Config . ALGEBRICKS _ LOGGER . is Debug Enabled ( ) ) <|s|> { <|nl|> <|16-s|> <|4-s|> Algebricks Config . ALGEBRICKS _ LOGGER . debug ( " Exception <|s|> caught <|s|> at <|s|> constant <|s|> folding : <|s|> " <|s|> + <|s|> e , <|s|> e ); <|nl|> <|16-s|> } <|nl|>
<|12-s|> throws <|s|> Algebricks Exception <|s|> { <|nl|> <|8-s|> if <|s|> ( has Run ) <|s|> { <|nl|> <|12-s|> return <|s|> false ; <|nl|> <|8-s|> } <|nl|>
<|del|> <|nl|>
<|4-s|> catalog _ . invalidate Table ( new <|s|> TTable Name ( db Name , <|s|> tbl Name ) , <|s|> tbl Was Removed , <|s|> db Was Added ); <|nl|>
<|2-s|> <|s|> * <|s|> Create <|s|> a <|s|> new <|s|> profile , <|s|> setting <|s|> it <|s|> as <|s|> the <|s|> current <|s|> thread - local <|s|> profile <|s|> for <|s|> the <|nl|>
<|8-s|> LOG . warn ( " gc Bean . get Last Gc Info ( ) <|s|> returned <|s|> null . <|s|> Table <|s|> invalidation <|s|> based <|s|> on <|s|> " <|s|> + <|nl|> <|12-s|> " memory <|s|> pressure <|s|> was <|s|> skipped . " ); <|nl|>
<|4-s|> <|2-s|> Memory Usage <|s|> tenured Gen Usage <|s|> = <|s|> last Gc Info . get Memory Usage After Gc ( ) . get ( old Gc Gen Name _ ); <|nl|> <|4-s|> <|2-s|> Preconditions . check State ( tenured Gen Usage <|s|> != <|s|> null ); <|nl|>
<|4-s|> update Owner Privileges ( db . get Name ( ) , <|s|> /* <|s|> table Name <|s|> */ <|s|> null , <|s|> params . server _ name , <|nl|>
<|4-s|> <|2-s|> update Database Privileges ( table . get Db ( ) . get Name ( ) , <|s|> table . get Name ( ) , <|nl|> <|8-s|> <|2-s|> params . server _ name , <|s|> table . get Meta Store Table ( ) . get Owner ( ) , <|nl|> <|8-s|> <|2-s|> table . get Meta Store Table ( ) . get Owner Type ( ) , <|s|> /* <|s|> new Owner <|s|> */ <|s|> null , <|nl|> <|8-s|> <|2-s|> /* <|s|> new Owner Type <|s|> */ <|s|> null , <|s|> resp ); <|nl|>
<|4-s|> <|2-s|> removed Grant Opt Privileges <|s|> = <|s|> catalog _ . get Sentry Proxy ( ) <|nl|> <|8-s|> <|2-s|> . revoke Role Privileges ( requesting User , <|s|> role Name , <|s|> privileges , <|nl|> <|8-s|> <|2-s|> grant Revoke Priv Params . is Has _ grant _ opt ( ) , <|s|> role Privileges ); <|nl|>
<|4-s|> List < Principal Privilege > <|s|> added Role Privileges <|s|> = <|s|> null ; <|nl|>
<|4-s|> <|2-s|> } <|nl|> <|4-s|> } <|s|> else <|s|> if <|s|> ( privileges . get ( 0 ) . is Has _ grant _ opt ( ) ) <|s|> { <|nl|> <|4-s|> <|2-s|> if <|s|> ( ! updated Privs . is Empty ( ) <|s|> && <|s|> ! removed Privs . is Empty ( ) ) <|s|> { <|nl|> <|nl|>
<|2-s|> public <|s|> Expected Exception <|s|> thrown <|s|> = <|s|> Expected Exception . none ( ); <|nl|>
<|s|> * <|2-s|> <|s|> - <|s|> 2 - phase <|s|> aggregation , <|s|> 1 st <|s|> phase <|s|> groups <|s|> by <|s|> GROUP <|s|> BY <|s|> plus <|s|> DISTINCT <|s|> exprs , <|s|> 2 nd <|s|> phase <|nl|>
<|2-s|> <|s|> * <|s|> It ' s <|s|> useful <|s|> for <|s|> tests <|s|> to <|s|> ensure <|s|> that <|s|> a <|s|> scan <|s|> happened . <|nl|>
<|8-s|> LOG . warn ( " gc Bean . get Last Gc Info ( ) <|s|> returned <|s|> null . <|s|> Table <|s|> invalidation <|s|> based <|s|> on <|s|> " <|s|> + <|nl|> <|12-s|> " memory <|s|> pressure <|s|> was <|s|> skipped . " ); <|nl|>
<|2-s|> <|s|> * <|s|> can <|s|> be <|s|> added <|s|> for <|s|> a <|s|> user . <|s|> example : <|s|> owner <|s|> privileges . <|nl|>
<|4-s|> <|2-s|> LOG . error ( " Error <|s|> removing <|s|> privilege : <|s|> " , <|s|> e ); <|nl|>
<|4-s|> <|2-s|> LOG . error ( " Error <|s|> adding <|s|> privilege : <|s|> " , <|s|> e ); <|nl|>
<|8-s|> Reference < Boolean > <|s|> existing User <|s|> = <|s|> new <|s|> Reference < > ( ); <|nl|> <|8-s|> org . apache . impala . catalog . User <|s|> user <|s|> = <|s|> catalog _ . add User If Not Exists ( user Name , <|nl|> <|12-s|> existing User ); <|nl|> <|8-s|> if <|s|> ( existing User . get Ref ( ) <|s|> && <|s|> reset Versions _ ) <|s|> { <|nl|>
<|4-s|> return <|s|> get Authz Config ( ) . is Enabled ( ) <|s|> ? <|s|> get Authz Config ( ) . get Server Name ( ) <|s|> : <|s|> null ; <|nl|>
<|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> Update <|s|> the <|s|> owner <|s|> privileges <|s|> for <|s|> an <|s|> object . <|nl|>
<|4-s|> if ( old Owner <|s|> != <|s|> null <|s|> && <|s|> ! old Owner . is Empty ( ) ) <|s|> { <|nl|>
<|4-s|> if ( old Owner <|s|> != <|s|> null <|s|> && <|s|> ! old Owner . is Empty ( ) ) <|s|> { <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> LOG . error ( " Error <|s|> removing <|s|> privilege : <|s|> " , <|s|> e ); <|nl|> <|4-s|> } <|s|> finally <|s|> { <|nl|> <|4-s|> <|2-s|> catalog _ . get Lock ( ) . write Lock ( ) . unlock ( ); <|nl|>
<|del|> <|nl|>
<|8-s|> c Privilege <|s|> = <|s|> catalog _ . add User Privilege ( owner String , <|s|> filter ); <|nl|> <|8-s|> if <|s|> ( ! existing User . get Ref ( ) ) <|s|> { <|nl|> <|8-s|> <|2-s|> owner . set Catalog Version ( catalog _ . increment And Get Catalog Version ( ) ); <|nl|> <|8-s|> } <|nl|>
<|del|> <|nl|>
<|4-s|> List < Principal Privilege > <|s|> removed Grant Opt Privileges <|s|> = <|nl|> <|8-s|> Lists . new Array List With Expected Size ( privileges . size ( ) ); <|nl|>
<|4-s|> <|2-s|> added Role Privileges <|s|> = <|s|> Lists . new Array List With Expected Size ( privileges . size ( ) ); <|nl|>
<|4-s|> List < TCatalog Object > <|s|> updated Privs <|s|> = <|nl|> <|8-s|> Lists . new Array List With Expected Size ( added Role Privileges . size ( ) ); <|nl|>
<|4-s|> List < TCatalog Object > <|s|> removed Privs <|s|> = <|nl|> <|8-s|> Lists . new Array List With Expected Size ( removed Grant Opt Privileges . size ( ) ); <|nl|>
<|4-s|> <|2-s|> } <|nl|> <|4-s|> } <|s|> else <|s|> if <|s|> ( privileges . get ( 0 ) . is Has _ grant _ opt ( ) ) <|s|> { <|nl|> <|4-s|> <|2-s|> if <|s|> ( ! updated Privs . is Empty ( ) <|s|> && <|s|> ! removed Privs . is Empty ( ) ) <|s|> { <|nl|> <|nl|>
<|4-s|> return <|s|> catalog _ . get Sentry Proxy ( ) <|s|> == <|s|> null <|s|> ? <|s|> false <|s|> : <|nl|> <|8-s|> catalog _ . get Sentry Proxy ( ) . is Object Ownership Grant Enabled ( ); <|nl|>
<|4-s|> return <|s|> catalog _ . get Sentry Proxy ( ) <|s|> == <|s|> null <|s|> ? <|s|> false <|s|> : <|nl|> <|8-s|> catalog _ . get Sentry Proxy ( ) . is Object Ownership Grant Enabled ( ); <|nl|>
<|del|> <|nl|>
<|4-s|> try <|s|> ( Sentry Service Client <|s|> client <|s|> = <|s|> new <|s|> Sentry Service Client ( ) ) <|s|> { <|nl|>
<|4-s|> if <|s|> ( sentry Config . get Config File ( ) <|s|> != <|s|> null <|s|> && <|s|> ! sentry Config . get Config File ( ) . is Empty ( ) ) <|s|> { <|nl|>
<|4-s|> if <|s|> ( sentry Config . get Config File ( ) <|s|> != <|s|> null <|s|> && <|s|> ! sentry Config . get Config File ( ) . is Empty ( ) ) <|s|> { <|nl|>
<|2-s|> private <|s|> final <|s|> int <|s|> n Bits ; <|nl|> <|2-s|> private <|s|> final <|s|> Bit Set <|s|> bit Set ; <|nl|> <|2-s|> private <|s|> final <|s|> int <|s|> n Hashes ; <|nl|> <|2-s|> private <|s|> final <|s|> byte [ ] <|s|> byte Buffer ; <|nl|> <|2-s|> private <|s|> final <|s|> Hash Function <|s|> hash Function ; <|nl|>
<|2-s|> private <|s|> final <|s|> int <|s|> n Bits ; <|nl|> <|2-s|> private <|s|> final <|s|> Bit Set <|s|> bit Set ; <|nl|> <|2-s|> private <|s|> final <|s|> int <|s|> n Hashes ; <|nl|> <|2-s|> private <|s|> final <|s|> byte [ ] <|s|> byte Buffer ; <|nl|> <|2-s|> private <|s|> final <|s|> Hash Function <|s|> hash Function ; <|nl|>
<|4-s|> int <|s|> n Hashes <|s|> = <|s|> compute Optimal Hash Count ( n Bits , <|s|> expected Count ); <|nl|> <|4-s|> return <|s|> new <|s|> Bloom Filter ( new <|s|> Bit Set ( n Bits ) , <|s|> n Hashes , <|s|> hash Function ); <|nl|>
<|4-s|> byte Buffer [ 0 ] <|s|> = <|s|> ( byte ) ( data <|s|> ? <|s|> 1 <|s|> : <|s|> 0 ); <|nl|> <|4-s|> update Bitset ( byte Buffer , <|s|> 1 ); <|nl|>
<|2-s|> private <|s|> void <|s|> update Bitset ( byte [ ] <|s|> byte Buffer , <|s|> int <|s|> length ) <|s|> { <|nl|> <|4-s|> assert <|s|> ( byte Buffer . length <|s|> >= <|s|> length ); <|nl|>
<|4-s|> <|2-s|> long <|s|> bit Pos <|s|> = <|s|> tmp <|s|> % <|s|> n Bits ; <|nl|> <|4-s|> <|2-s|> bit Set . set ( ( int ) bit Pos ); <|nl|> <|4-s|> <|2-s|> tmp <|s|> += <|s|> h 2 ; <|nl|>
<|2-s|> @ Interface Audience . Limited Private ( " Test " ) <|nl|>
<|4-s|> <|2-s|> long <|s|> bit Pos <|s|> = <|s|> tmp <|s|> % <|s|> n Bits ; <|nl|> <|4-s|> <|2-s|> if <|s|> ( ! bit Set . get ( ( int ) bit Pos ) ) <|s|> { <|nl|>
<|4-s|> <|2-s|> tmp <|s|> += <|s|> h 2 ; <|nl|>
<|2-s|> private <|s|> static <|s|> double <|s|> k Natural Log 2 <|s|> = <|s|> 0 . 69314 ; <|nl|>
<|2-s|> private <|s|> static <|s|> int <|s|> compute Optimal Hash Count ( int <|s|> n Bits , <|s|> int <|s|> elems ) <|s|> { <|nl|> <|4-s|> int <|s|> n Hashes <|s|> = <|s|> ( int ) ( n Bits <|s|> * <|s|> k Natural Log 2 <|s|> / <|s|> elems ); <|nl|>
<|2-s|> private <|s|> long <|s|> k Random Seed <|s|> = <|s|> System . current Time Millis ( ); <|nl|>
<|2-s|> public <|s|> void <|s|> test Float ( ) <|s|> { <|nl|>
<|s|> * <|s|> Represents <|s|> an <|s|> administrative <|s|> function <|s|> call , <|s|> e . g . <|s|> " : <|s|> shutdown ( ' hostname : 123 ' ) " . <|nl|>
<|s|> * <|s|> 6 . <|s|> Release <|s|> the <|s|> metastore Ddl Lock _ <|nl|>
<|del|> <|nl|>
<|s|> * <|s|> An <|s|> space - efficient <|s|> filter <|s|> which <|s|> offers <|s|> an <|s|> approximate <|s|> containment <|s|> check . <|nl|>
<|s|> * <|s|> < p > The <|s|> { @ code <|s|> Bloom Filter } <|s|> here <|s|> is <|s|> a <|s|> scanning <|s|> filter <|s|> and <|s|> used <|s|> to <|s|> constrain <|s|> the <|s|> number <|s|> of <|s|> records <|nl|>
<|s|> * <|2-s|> <|s|> // <|s|> TODO : <|s|> implement <|s|> the <|s|> interface <|s|> for <|s|> serializing <|s|> and <|s|> sending <|nl|>
<|4-s|> Preconditions . check Argument ( bit Set . size ( ) <|s|> > <|s|> 8 , <|s|> " Number <|s|> of <|s|> bits <|s|> in <|s|> " <|s|> + <|nl|> <|4-s|> <|2-s|> " bitset <|s|> should <|s|> be <|s|> at <|s|> least <|s|> 8 , <|s|> but <|s|> found <|s|> % s . " , <|s|> bit Set . size ( ) ); <|nl|>
<|4-s|> Preconditions . check Argument ( bit Set . size ( ) <|s|> > <|s|> 8 , <|s|> " Number <|s|> of <|s|> bits <|s|> in <|s|> " <|s|> + <|nl|> <|4-s|> <|2-s|> " bitset <|s|> should <|s|> be <|s|> at <|s|> least <|s|> 8 , <|s|> but <|s|> found <|s|> % s . " , <|s|> bit Set . size ( ) ); <|nl|>
<|2-s|> <|s|> * <|s|> Generate <|s|> bloom <|s|> filter , <|s|> default <|s|> hashing <|s|> is <|s|> { @ code <|s|> Murmur 2 } <|s|> and <|s|> false <|s|> positive <|s|> rate <|s|> is <|s|> 0 . 01 . <|nl|> <|2-s|> <|s|> * <|s|> @ param <|s|> n Bytes <|s|> size <|s|> of <|s|> bloom <|s|> filter <|s|> in <|s|> bytes <|nl|>
<|2-s|> <|s|> * <|s|> Generate <|s|> bloom <|s|> filter , <|s|> default <|s|> hashing <|s|> is <|s|> { @ code <|s|> Murmur 2 } <|s|> and <|s|> false <|s|> positive <|s|> rate <|s|> is <|s|> 0 . 01 . <|nl|> <|2-s|> <|s|> * <|s|> @ param <|s|> expected Count <|s|> The <|s|> expected <|s|> number <|s|> of <|s|> elements , <|s|> targeted <|s|> by <|s|> this <|s|> bloom <|s|> filter . <|nl|>
<|nl|> <|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> Update <|s|> bloom <|s|> filter <|s|> with <|s|> a <|s|> { @ code <|s|> byte [ ] } . <|nl|> <|2-s|> <|s|> */ <|nl|>
<|nl|> <|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> Get <|s|> the <|s|> name <|s|> of <|s|> hashing <|s|> used <|s|> when <|s|> updating <|s|> or <|s|> checking <|s|> containment . <|nl|> <|2-s|> <|s|> */ <|nl|>
<|4-s|> Preconditions . check Argument ( byte Buffer . length <|s|> >= <|s|> length ); <|nl|>
<|12-s|> . error ( access Error ( true , <|s|> " functional . alltypes " ) , <|s|> on Database ( true , <|nl|> <|16-s|> " functional " , <|s|> all Except ( TPrivilege Level . ALL , <|s|> TPrivilege Level . OWNER ) ) ) <|nl|>
<|2-s|> <|s|> * <|s|> This <|s|> is <|s|> a <|s|> helper <|s|> method <|s|> to <|s|> take <|s|> care <|s|> of <|s|> catalog <|s|> related <|s|> updates <|s|> when <|s|> adding <|nl|> <|2-s|> <|s|> * <|s|> a <|s|> privilege . <|s|> This <|s|> will <|s|> also <|s|> add <|s|> a <|s|> user <|s|> to <|s|> the <|s|> catalog <|s|> if <|s|> it <|s|> doesn ' t <|s|> exist . <|nl|>
<|2-s|> <|s|> * <|s|> This <|s|> is <|s|> a <|s|> helper <|s|> method <|s|> to <|s|> take <|s|> care <|s|> of <|s|> catalog <|s|> related <|s|> updates <|s|> when <|s|> adding <|nl|> <|2-s|> <|s|> * <|s|> a <|s|> privilege . <|s|> This <|s|> will <|s|> also <|s|> add <|s|> a <|s|> user <|s|> to <|s|> the <|s|> catalog <|s|> if <|s|> it <|s|> doesn ' t <|s|> exist . <|nl|>
<|4-s|> Preconditions . check Argument ( bit Set . size ( ) <|s|> >= <|s|> 8 , <|s|> " Number <|s|> of <|s|> bits <|s|> in <|s|> " <|s|> + <|nl|>
<|2-s|> public <|s|> static <|s|> Bloom Filter <|s|> by Size ( int <|s|> n Bytes ) <|s|> { <|nl|> <|4-s|> return <|s|> by Size And FPRate ( n Bytes , <|s|> DEFAULT _ FP _ RATE ); <|nl|>
<|2-s|> <|s|> * <|12-s|> <|2-s|> <|s|> ever <|s|> been <|s|> { @ code <|s|> put } <|s|> into <|s|> the <|s|> { @ code <|s|> Bloom Filter } . <|nl|>
<|12-s|> . error ( access Error ( true , <|s|> " functional . alltypes " ) , <|s|> on Database ( true , <|nl|> <|16-s|> " functional " , <|s|> all Except ( TPrivilege Level . ALL , <|s|> TPrivilege Level . OWNER ) ) ) <|nl|>
<|del|> <|nl|>
<|4-s|> return <|s|> hostname ; <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> LOG . info ( " Using <|s|> Kudu <|s|> binary <|s|> directory <|s|> specified <|s|> by <|s|> system <|s|> property <|s|> ' { }': <|s|> { } " , <|nl|> <|8-s|> <|2-s|> KUDU _ BIN _ DIR _ PROP , <|s|> kudu Home Prop ); <|nl|>
<|4-s|> <|2-s|> LOG . info ( " Using <|s|> Kudu <|s|> home <|s|> directory <|s|> specified <|s|> by <|s|> environment <|s|> variable <|s|> ' { }': <|s|> { } " , <|nl|> <|8-s|> <|2-s|> KUDU _ HOME _ VAR , <|s|> kudu Home Var ); <|nl|>
<|4-s|> // <|s|> Last , <|s|> if <|s|> the <|s|> ` kudu ` <|s|> binary <|s|> is <|s|> found <|s|> on <|s|> the <|s|> PATH <|s|> using <|s|> ` which <|s|> kudu ` , <|nl|> <|4-s|> // <|s|> use <|s|> its <|s|> parent <|s|> directory . <|nl|>
<|8-s|> final <|s|> Reader <|s|> reader <|s|> = <|s|> new <|s|> Input Stream Reader ( process . get Input Stream ( ) , <|s|> UTF _ 8 ) ; <|nl|> <|8-s|> try <|s|> { <|nl|>
<|4-s|> owner _ <|s|> = <|s|> analyzer . get User Short Name ( ); <|nl|>
<|2-s|> private <|s|> Daemon Info <|s|> get Master Server ( Host And Port <|s|> hp ) <|s|> throws <|s|> Runtime Exception <|s|> { <|nl|> <|4-s|> Daemon Info <|s|> d <|s|> = <|s|> master Servers . get ( hp ); <|nl|>
<|2-s|> <|s|> * <|s|> Tests <|s|> parsing <|s|> strings <|s|> into <|s|> { @ link <|s|> Host And Port } <|s|> objects <|s|> with <|s|> and <|s|> without <|s|> specifying <|nl|>
<|4-s|> String <|s|> kudu Bin Dir Prop <|s|> = <|s|> System . get Property ( KUDU _ BIN _ DIR _ PROP ); <|nl|> <|4-s|> if <|s|> ( kudu Bin Dir Prop <|s|> != <|s|> null ) <|s|> { <|nl|>
<|4-s|> <|2-s|> // <|s|> Creating <|s|> client <|s|> with <|s|> Flume Authenticator . <|nl|>
<|8-s|> kerberos Principal , <|s|> kerberos Keytab ) . proxy As ( proxy User ); <|nl|>
<|16-s|> <|16-s|> <|4-s|> <|s|> Schema Location <|s|> schema Location ) <|s|> throws <|s|> Exception <|s|> { <|nl|>
<|4-s|> <|2-s|> ) <|s|> throws <|s|> Event Delivery Exception <|s|> { <|nl|>
<|2-s|> private <|s|> static <|s|> final <|s|> int <|s|> TICKET _ LIFETIME _ SECONDS <|s|> = <|s|> 10 ; <|nl|> <|2-s|> private <|s|> static <|s|> final <|s|> int <|s|> RENEWABLE _ LIFETIME _ SECONDS <|s|> = <|s|> 30 ; <|nl|>
<|4-s|> <|2-s|> this . info _ <|s|> = <|s|> Preconditions . check Not Null ( p ); <|nl|>
<|4-s|> <|2-s|> this . info _ <|s|> = <|s|> Preconditions . check Not Null ( p ); <|nl|>
<|4-s|> predicate <|s|> = <|s|> Kudu Scan Node . normalize Slot Ref Comparison ( predicate , <|s|> analyzer ); <|nl|>
<|4-s|> Comparison Op <|s|> op <|s|> = <|s|> get Kudu Operator ( ( ( Binary Predicate ) predicate ) . get Op ( ) ); <|nl|>
<|del|> <|nl|>
<|2-s|> public <|s|> static <|s|> Expr <|s|> create Expr ( Function Name <|s|> fn Name , <|s|> Function Params <|s|> params ) <|nl|> <|4-s|> <|2-s|> throws <|s|> Analysis Exception <|s|> { <|nl|>
<|8-s|> agg . fn Name _ , <|s|> new <|s|> Function Params ( false , <|s|> params ) , <|s|> merge Agg Input Fn ); <|nl|>
<|8-s|> agg . fn Name _ , <|s|> new <|s|> Function Params ( false , <|s|> params ) , <|s|> merge Agg Input Fn ); <|nl|>
<|8-s|> finalize Params . set Table _ id ( Descriptor Table . TABLE _ SINK _ ID ); <|nl|>
<|s|> * <|s|> only <|s|> a <|s|> single <|s|> DISTINCT <|s|> grouping , <|s|> a <|s|> single <|s|> Aggregate Info <|s|> will <|s|> be <|s|> created <|s|> which <|s|> will <|nl|> <|s|> * <|s|> represent <|s|> that <|s|> grouping <|s|> and <|s|> any <|s|> non - DISTINCT <|s|> aggregates . <|s|> If <|s|> there <|s|> is <|s|> more <|s|> than <|s|> one <|nl|> <|s|> * <|s|> DISTINCT <|s|> grouping , <|s|> the <|s|> non - DISTINCT <|s|> aggregates <|s|> will <|s|> be <|s|> grouped <|s|> together <|s|> in <|s|> their <|s|> own <|nl|>
<|2-s|> // <|s|> Singleton <|s|> instance <|s|> of <|s|> this <|s|> pause <|s|> monitor . <|nl|>
<|4-s|> <|2-s|> case <|s|> PRINCIPAL : <|nl|> <|8-s|> // <|s|> The <|s|> combination <|s|> of <|s|> principal _ id <|s|> + <|s|> privilege _ name <|s|> is <|s|> guaranteed <|s|> to <|s|> be <|s|> unique . <|nl|> <|8-s|> return <|s|> " PRINCIPAL : " <|s|> + <|s|> catalog Object . get Principal ( ) . get Principal _ name ( ) <|nl|> <|12-s|> . to Lower Case ( ); <|nl|>
<|4-s|> expect Cardinality ( " SELECT <|s|> id <|s|> FROM <|s|> functional . alltypes " , <|s|> 7300 ); <|nl|>
<|2-s|> protected <|s|> void <|s|> expect Cardinality ( String <|s|> query , <|s|> long <|s|> expected ) <|s|> { <|nl|>
<|4-s|> assert Equals ( " Cardinality <|s|> error <|s|> for : <|s|> " <|s|> + <|s|> query , <|nl|> <|8-s|> expected , <|s|> plan Root . get Cardinality ( ) ); <|nl|>
<|4-s|> plan Ctx . request Plan Capture ( ); <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> System . out . println ( plan . get ( 0 ) . get Explain String ( <|nl|> <|8-s|> <|2-s|> query Options , <|s|> TExplain Level . EXTENDED ) ); <|nl|>
<|nl|>
<|4-s|> num Distinct Values _ <|s|> = <|s|> desc _ . get Stats ( ) . get Num Distinct Values ( ); <|nl|> <|4-s|> Table <|s|> root Table <|s|> = <|s|> resolved Path . get Root Table ( ); <|nl|>
<|2-s|> <|s|> * <|s|> This <|s|> method <|s|> adds <|s|> the <|s|> rows <|s|> to <|s|> the <|s|> output <|s|> for <|s|> the <|s|> SHOW <|s|> GRANT <|s|> USER <|s|> statement <|s|> for <|s|> user <|nl|>
<|4-s|> Role <|s|> role <|s|> = <|s|> get Role ( principal Name ); <|nl|>
<|4-s|> User <|s|> user <|s|> = <|s|> get User ( principal Name ); <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> Model <|s|> model ) <|s|> { <|nl|>
<|4-s|> <|2-s|> Policy Engine <|s|> policy , <|s|> Model <|s|> model ) <|s|> { <|nl|>
<|2-s|> // <|s|> Above <|s|> this <|s|> number , <|s|> the <|s|> adjustment <|s|> is <|s|> not <|s|> that <|s|> helpful . <|nl|> <|2-s|> // <|s|> Further , <|s|> a <|s|> higher <|s|> value <|s|> causes <|s|> TPC - H <|s|> plan <|s|> tests <|s|> to <|nl|>
<|del|> <|nl|>
<|4-s|> return <|s|> plan Ctx . get Plan ( ); <|nl|>
<|4-s|> verify Cardinality ( <|nl|> <|8-s|> " SELECT <|s|> d <|s|> FROM <|s|> functional . alltypes , <|s|> functional . nullrows " , <|s|> 7300 <|s|> * <|s|> 26 ); <|nl|>
<|4-s|> verify Cardinality ( <|nl|> <|8-s|> " SELECT <|s|> COUNT ( * ) " <|s|> + <|s|> join Clause <|s|> + <|s|> " GROUP <|s|> BY <|s|> t 1 . id " , <|s|> 7300 ); <|nl|> <|4-s|> verify Cardinality ( <|nl|> <|8-s|> " SELECT <|s|> COUNT ( * ) " <|s|> + <|s|> join Clause <|s|> + <|s|> " GROUP <|s|> BY <|s|> t 1 . id , <|s|> t 1 . int _ col " , <|s|> 7300 <|s|> * <|s|> 10 ); <|nl|>
<|2-s|> private <|s|> static <|s|> Schema <|s|> schema ; <|nl|>
<|nl|> <|2-s|> @ Rule <|nl|> <|2-s|> Retry Rule <|s|> retry Rule <|s|> = <|s|> new <|s|> Retry Rule ( ); <|nl|> <|nl|>
<|2-s|> <|s|> * <|s|> Kudu Rule <|s|> with <|s|> the <|s|> default <|s|> constructor . <|s|> This <|s|> is <|s|> useful <|nl|>
<|4-s|> <|2-s|> for <|s|> ( String <|s|> flag <|s|> : <|s|> tablet Server Config . flags ( ) ) <|s|> { <|nl|>
<|del|> <|nl|>
<|4-s|> async Client <|s|> = <|s|> new <|s|> Async Kudu Client Builder ( mini Cluster . get Master Addresses As String ( ) ) <|nl|>
<|4-s|> <|2-s|> if <|s|> ( client <|s|> != <|s|> null ) <|s|> { <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> async Client <|s|> = <|s|> new <|s|> Async Kudu Client Builder ( mini Cluster . get Master Addresses As String ( ) ) <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> } <|s|> else <|s|> { <|nl|>
<|8-s|> <|2-s|> ! ( fs <|s|> instanceof <|s|> Azure Blob File System ) <|s|> && <|nl|> <|8-s|> <|2-s|> ! ( fs <|s|> instanceof <|s|> Secure Azure Blob File System ) <|s|> && <|nl|>
<|4-s|> // <|s|> Experiments <|s|> on <|s|> a <|s|> wide <|s|> partitioned <|s|> table <|s|> with <|s|> incremental <|s|> stats <|s|> showed <|s|> that <|s|> the <|nl|> <|4-s|> // <|s|> Deflater <|s|> with <|s|> ' BEST _ SPEED ' <|s|> level <|s|> provided <|s|> reasonable <|s|> compression <|s|> ratios <|s|> at <|s|> much <|nl|> <|4-s|> // <|s|> faster <|s|> speeds <|s|> compared <|s|> to <|s|> other <|s|> modes <|s|> like <|s|> BEST _ COMPRESSION / DEFAULT _ COMPRESSION . <|nl|>
<|4-s|> IMeta Store Client <|s|> hms Client <|s|> = <|s|> new <|s|> Hive Meta Store Client ( hive Conf ); <|nl|>
<|4-s|> Table <|s|> table <|s|> = <|s|> impalad Catalog _ . get ( ) . get Table ( db Name , <|s|> table Name ); <|nl|>
<|4-s|> Table <|s|> table <|s|> = <|s|> impalad Catalog _ . get ( ) . get Table ( db Name , <|s|> table Name ); <|nl|>
<|4-s|> <|2-s|> Analyzer <|s|> analyzer , <|s|> List < Tuple Id > <|s|> tuple Ids , <|s|> Plan Node <|s|> root ) <|s|> { <|nl|>
<|2-s|> String <|s|> to Sql ( To Sql Options <|s|> options ); <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> node Resource Profile _ <|s|> = <|s|> Resource Profile . no Reservation ( <|nl|> <|8-s|> <|2-s|> get Sort Info ( ) . estimate Top NMaterialized Size ( cardinality _ , <|s|> offset _ ) ); <|nl|>
<|del|> <|nl|>
<|4-s|> return <|s|> ! stream Sink . get Output Partition ( ) . is Partitioned ( ) <|s|> && <|s|> fragment _ . is Partitioned ( ); <|nl|>
<|del|> <|nl|>
public <|s|> class <|s|> Rewrite Conditional Fns Rule <|s|> implements <|s|> Expr Rewrite Rule <|s|> { <|nl|>
<|2-s|> <|s|> * <|s|> IFNULL ( a , <|s|> x ) <|s|> --> <|nl|>
<|4-s|> // <|s|> TODO : <|s|> IMPALA - 7766 : <|s|> Perform <|s|> constant <|s|> folding <|s|> within <|s|> an <|s|> expression <|nl|>
<|nl|> <|4-s|> // <|s|> Base <|s|> case , <|s|> no <|s|> further <|s|> simplificatin <|s|> needed <|nl|> <|4-s|> verify Select Rewrite ( " if ( id <|s|> = <|s|> 0 , <|s|> id , <|s|> id + 1 ) " , <|nl|> <|8-s|> " CASE <|s|> WHEN <|s|> id <|s|> = <|s|> 0 <|s|> THEN <|s|> id <|s|> ELSE <|s|> id <|s|> + <|s|> 1 <|s|> END " ); <|nl|> <|nl|>
<|4-s|> return <|s|> Rewrites Ok Where Expr ( " functional . alltypessmall " , <|s|> expr Str , <|nl|> <|8-s|> rule , <|s|> expected Expr Str ); <|nl|>
<|2-s|> public <|s|> Expr <|s|> Rewrites Ok ( String <|s|> table Name , <|s|> String <|s|> expr Str , <|nl|> <|4-s|> <|2-s|> Expr Rewrite Rule <|s|> rule , <|s|> String <|s|> expected Expr Str ) <|nl|>
<|2-s|> public <|s|> Expr <|s|> Rewrites Ok ( String <|s|> expr Str , <|s|> List < Expr Rewrite Rule > <|s|> rules , <|nl|> <|4-s|> <|2-s|> String <|s|> expected Expr Str ) <|nl|>
<|2-s|> public <|s|> Expr <|s|> Rewrites Ok Where Expr ( String <|s|> expr Str , <|s|> Expr Rewrite Rule <|s|> rule , <|nl|> <|4-s|> <|2-s|> String <|s|> expected Expr Str ) <|nl|>
<|2-s|> public <|s|> Expr <|s|> Rewrites Ok Where Expr ( String <|s|> table Name , <|s|> String <|s|> expr Str , <|nl|> <|4-s|> <|2-s|> Expr Rewrite Rule <|s|> rule , <|s|> String <|s|> expected Expr Str ) <|nl|>
<|2-s|> public <|s|> Expr <|s|> Rewrites Ok Where Expr ( String <|s|> table Name , <|nl|> <|4-s|> <|2-s|> String <|s|> expr Str , <|s|> List < Expr Rewrite Rule > <|s|> rules , <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|2-s|> <|s|> * <|s|> This <|s|> should <|s|> return <|s|> the <|s|> same <|s|> result <|s|> as <|s|> calling <|s|> to Sql ( To Sql Options . DEFAULT ) . <|nl|> <|2-s|> <|s|> * <|s|> TODO <|s|> use <|s|> an <|s|> interface <|s|> default <|s|> method <|s|> to <|s|> implement <|s|> this <|s|> when <|s|> we <|s|> fully <|s|> move <|s|> to <|s|> Java 8 . <|nl|>
<|2-s|> <|s|> * <|s|> The <|s|> default <|s|> way <|s|> of <|s|> displaying <|s|> the <|s|> original <|s|> SQL <|s|> query <|s|> without <|s|> rewrites . <|nl|>
<|4-s|> String Builder <|s|> ret <|s|> = <|s|> new <|s|> String Builder ( s . length ( ) ); <|nl|>
<|4-s|> <|2-s|> // <|s|> we <|s|> keep <|s|> any <|s|> existing <|s|> newlines <|s|> in <|s|> text <|s|> - <|s|> these <|s|> should <|s|> be <|s|> commented <|s|> hints <|nl|>
<|2-s|> <|s|> * <|s|> looks <|s|> as <|s|> expected . <|nl|> <|2-s|> <|s|> * <|s|> column Name <|s|> is <|s|> the <|s|> name <|s|> of <|s|> a <|s|> column <|s|> in <|s|> functional . alltypesnopart . <|nl|> <|2-s|> <|s|> * <|s|> data <|s|> is <|s|> the <|s|> literal <|s|> value <|s|> to <|s|> insert . <|nl|> <|2-s|> <|s|> * <|s|> cast Column <|s|> is <|s|> the <|s|> type <|s|> to <|s|> which <|s|> the <|s|> literal <|s|> is <|s|> expected <|s|> to <|s|> be <|s|> cast . <|nl|>
<|del|> <|nl|>
<|8-s|> out Dir _ . to File ( ) . mkdirs ( ); <|nl|> <|8-s|> File Writer <|s|> fw <|s|> = <|s|> new <|s|> File Writer ( out Dir _ . resolve ( test File <|s|> + <|s|> " . test " ) . to File ( ) ); <|nl|>
<|2-s|> <|s|> * <|s|> Wrap <|s|> length <|s|> for <|s|> test Wrap Text ( ) <|s|> - <|s|> less <|s|> than <|s|> 80 <|s|> to <|s|> make <|s|> test <|s|> layout <|s|> nicer . <|nl|>
<|2-s|> <|s|> * */ <|nl|>
<|2-s|> <|s|> * <|s|> Check <|s|> that <|s|> code <|s|> that <|s|> has <|s|> been <|s|> wrapped <|s|> is <|s|> correctly <|s|> formatted . <|nl|>
<|2-s|> <|s|> * <|s|> Check <|s|> that <|s|> code <|s|> that <|s|> has <|s|> been <|s|> wrapped <|s|> is <|s|> correctly <|s|> formatted . <|nl|>
<|s|> * <|s|> rewrite . <|nl|>
<|2-s|> <|s|> * <|s|> Relies <|s|> on <|s|> a <|s|> round <|s|> of <|s|> CASE <|s|> simplification <|s|> to <|s|> perform <|s|> the <|nl|> <|2-s|> <|s|> * <|s|> following <|s|> simplifications <|s|> after <|s|> this <|s|> rewrite : <|nl|>
<|2-s|> <|s|> */ <|nl|> <|2-s|> @ Suppress Warnings ( " unused " ) <|nl|>
<|2-s|> <|s|> */ <|nl|>
<|4-s|> <|2-s|> if <|s|> ( ! expr . get Type ( ) . is Supported ( ) ) <|s|> { <|nl|>
<|4-s|> for <|s|> ( Expr <|s|> child : <|s|> expr . get Children ( ) ) <|s|> if <|s|> ( ! Expr . IS _ LITERAL . apply ( child ) ) <|s|> return <|s|> expr ; <|nl|> <|4-s|> if <|s|> ( Expr . IS _ LITERAL . apply ( expr ) <|s|> || <|s|> ! expr . is Constant ( ) ) <|s|> return <|s|> expr ; <|nl|>
<|4-s|> if <|s|> ( Expr . IS _ NULL _ LITERAL . apply ( literal Value ) <|s|> || <|nl|> <|8-s|> literal Value . get String Value ( ) . is Empty ( ) ) <|s|> { <|nl|>
<|4-s|> <|2-s|> add Sentry Principal Privileges ( ctx . type _ , <|s|> ctx . sentry Service _ , <|s|> principal Name , <|nl|> <|8-s|> <|2-s|> " functional " , <|s|> " functional _ kudu " ); <|nl|>
<|4-s|> <|2-s|> case <|s|> PRINCIPAL : <|nl|> <|8-s|> // <|s|> The <|s|> combination <|s|> of <|s|> principal _ id <|s|> + <|s|> privilege _ name <|s|> is <|s|> guaranteed <|s|> to <|s|> be <|s|> unique . <|nl|> <|8-s|> return <|s|> " PRINCIPAL : " <|s|> + <|s|> catalog Object . get Principal ( ) . get Principal _ name ( ) <|nl|> <|12-s|> . to Lower Case ( ); <|nl|>
<|12-s|> Principal Privilege . build Privilege Name ( catalog Object . get Privilege ( ) ) <|nl|> <|16-s|> . to Lower Case ( ) <|s|> + <|s|> " . " <|s|> + <|nl|> <|12-s|> Integer . to String ( catalog Object . get Privilege ( ) . get Principal _ id ( ) ); <|nl|>
<|8-s|> } <|nl|> <|8-s|> // <|s|> non - nullable <|s|> slots <|s|> have <|s|> 0 <|s|> for <|s|> the <|s|> byte <|s|> offset <|s|> and <|s|> - 1 <|s|> for <|s|> the <|s|> bit <|s|> mask <|nl|> <|8-s|> // <|s|> to <|s|> make <|s|> sure <|s|> IS <|s|> NULL <|s|> always <|s|> evaluates <|s|> to <|s|> false <|s|> in <|s|> the <|s|> BE <|s|> without <|s|> having <|nl|> <|8-s|> // <|s|> to <|s|> check <|s|> nullability <|s|> explicitly <|nl|> <|8-s|> if <|s|> ( ! d . get Is Nullable ( ) ) <|s|> { <|nl|>
<|2-s|> String <|s|> to Sql ( To Sql Options <|s|> options ); <|nl|> <|nl|> <|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> Returns <|s|> the <|s|> SQL <|s|> string <|s|> corresponding <|s|> to <|s|> this <|s|> node <|s|> and <|s|> its <|s|> descendants . <|nl|> <|2-s|> <|s|> * <|s|> This <|s|> should <|s|> return <|s|> the <|s|> same <|s|> result <|s|> as <|s|> calling <|s|> to Sql ( To Sql Options . DEFAULT ) . <|nl|> <|2-s|> <|s|> */ <|nl|> <|2-s|> String <|s|> to Sql ( ); <|nl|>
<|2-s|> public <|s|> < C <|s|> extends <|s|> Tree Node < Node Type >> <|s|> Array List < C > <|s|> get Nodes Pre Order ( ) <|s|> { <|nl|> <|4-s|> Array List < C > <|s|> result <|s|> = <|s|> new <|s|> Array List < C > ( ); <|nl|>
<|4-s|> <|2-s|> Class < D > <|s|> cl , <|s|> Collection < D > <|s|> matches ) <|s|> { <|nl|>
<|4-s|> <|2-s|> Collection < C > <|s|> node List , <|s|> Class < D > <|s|> cl , <|s|> Collection < D > <|s|> matches ) <|s|> { <|nl|>
<|2-s|> public <|s|> < C <|s|> extends <|s|> Tree Node < Node Type >> <|s|> boolean <|s|> contains ( Class < C > <|s|> cl ) <|s|> { <|nl|>
<|4-s|> <|2-s|> List < C > <|s|> node List , <|s|> Class < ? <|s|> extends <|s|> C > <|s|> cl ) <|s|> { <|nl|>
<|4-s|> <|2-s|> org . apache . parquet . schema . Type <|s|> parquet Type ) <|s|> throws <|s|> Analysis Exception <|s|> { <|nl|> <|4-s|> // <|s|> The <|s|> Parquet <|s|> API <|s|> is <|s|> responsible <|s|> for <|s|> deducing <|s|> logical <|s|> type <|s|> if <|s|> only <|s|> converted <|s|> type <|nl|> <|4-s|> // <|s|> is <|s|> set . <|nl|>
<|2-s|> abstract <|s|> protected <|s|> void <|s|> to Thrift Impl ( TData Sink <|s|> tsink ); <|nl|>
<|4-s|> <|2-s|> Function <|s|> fn <|s|> = <|s|> Function . create Function ( " mydb " , <|s|> " fn 1 " , <|nl|> <|8-s|> <|2-s|> args , <|s|> Type . INT , <|s|> false , <|s|> TFunction Binary Type . JAVA ); <|nl|>
<|4-s|> <|2-s|> Function <|s|> fn <|s|> = <|s|> new <|s|> Scalar Function ( new <|s|> Function Name ( " mydb " , <|s|> " fn 1 " ) , <|nl|> <|8-s|> <|2-s|> args , <|s|> Type . INT , <|s|> false ); <|nl|>
<|4-s|> <|2-s|> Scalar Function <|s|> fn <|s|> = <|s|> new <|s|> Scalar Function ( new <|s|> Function Name ( " mydb " , <|s|> " fn 1 " ) , <|nl|> <|8-s|> <|2-s|> args , <|s|> Type . INT , <|s|> false ); <|nl|>
<|4-s|> <|2-s|> Scalar Function <|s|> fn <|s|> = <|s|> new <|s|> Scalar Function ( new <|s|> Function Name ( " mydb " , <|s|> " fn 1 " ) , <|nl|> <|8-s|> <|2-s|> args , <|s|> Type . INT , <|s|> false ); <|nl|>
<|4-s|> <|2-s|> Scalar Function <|s|> fn <|s|> = <|s|> new <|s|> Scalar Function ( new <|s|> Function Name ( " mydb " , <|s|> " fn 1 " ) , <|nl|> <|8-s|> <|2-s|> args , <|s|> Type . INT , <|s|> false ); <|nl|>
<|4-s|> <|2-s|> Scalar Function <|s|> fn <|s|> = <|s|> new <|s|> Scalar Function ( new <|s|> Function Name ( " mydb " , <|s|> " fn 1 " ) , <|nl|> <|8-s|> <|2-s|> args , <|s|> Type . INT , <|s|> false ); <|nl|>
<|4-s|> <|2-s|> Aggregate Function <|s|> fn <|s|> = <|s|> new <|s|> Aggregate Function ( new <|s|> Function Name ( " mydb " , <|s|> " fn 1 " ) , <|nl|> <|8-s|> <|2-s|> args , <|s|> Type . BIGINT , <|s|> false ); <|nl|>
<|4-s|> <|2-s|> Aggregate Function <|s|> fn <|s|> = <|s|> new <|s|> Aggregate Function ( new <|s|> Function Name ( " mydb " , <|s|> " fn 1 " ) , <|nl|> <|8-s|> <|2-s|> args , <|s|> Type . BIGINT , <|s|> false ); <|nl|>
<|4-s|> <|2-s|> Scalar Function <|s|> fn 1 <|s|> = <|s|> new <|s|> Scalar Function ( new <|s|> Function Name ( " mydb " , <|s|> " fn 1 " ) , <|nl|> <|8-s|> <|2-s|> new <|s|> Array List < > ( ) , <|s|> Type . INT , <|s|> false ); <|nl|>
<|4-s|> <|2-s|> Scalar Function <|s|> fn 2 <|s|> = <|s|> new <|s|> Scalar Function ( new <|s|> Function Name ( " mydb " , <|s|> " fn 2 " ) , <|nl|> <|8-s|> <|2-s|> args , <|s|> Type . INT , <|s|> false ); <|nl|>
<|2-s|> public <|s|> Retry Rule ( ) <|s|> { <|nl|>
<|2-s|> Retry Rule ( int <|s|> retry Count ) <|s|> { <|nl|>
<|8-s|> attempt ++ ; <|nl|>
<|4-s|> <|2-s|> assert False ( String . format ( " % d <|s|> failures " , <|s|> failures ) , <|s|> true ); <|nl|>
<|4-s|> public <|s|> static <|s|> Network Resolution <|s|> AUTOMATIC <|s|> = <|s|> new <|s|> Network Resolution ( " auto " ); <|nl|> <|nl|>
<|8-s|> assert Equals ( 0 , <|s|> exception . diagostics ( ) . total Count ( ) ); <|nl|>
public <|s|> class <|s|> Backpressure Exception <|s|> extends <|s|> Couchbase Exception <|s|> { <|nl|> <|4-s|> private <|s|> Ring Buffer Diagnostics <|s|> diagnostics ; <|nl|> <|nl|>
<|4-s|> @ Interface Audience . Public <|nl|> <|4-s|> @ Interface Stability . Experimental <|nl|> <|4-s|> public <|s|> Ring Buffer Diagnostics <|s|> diagostics ( ) <|s|> { <|nl|>
<|12-s|> Ring Buffer Monitor <|s|> ring Buffer Monitor <|s|> = <|s|> Ring Buffer Monitor . instance ( ); <|nl|> <|12-s|> ring Buffer Monitor . add Request ( request ); <|nl|>
<|4-s|> public <|s|> static <|s|> Ring Buffer Monitor <|s|> instance ( ) <|s|> { <|nl|>
<|8-s|> if <|s|> ( request <|s|> instanceof <|s|> Generic Query Request ) <|s|> { <|nl|>
<|8-s|> encryption Path Info <|s|> = <|s|> new <|s|> Hash Map < String , <|s|> String > ( ); <|nl|>
<|12-s|> sb . append ( " , <|s|> crypto Manager = " ) . append ( this . crypto Manager . to String ( ) ); <|nl|>
<|4-s|> private <|s|> volatile <|s|> Map < String , <|s|> String > <|s|> encryption Path Info ; <|nl|>
<|4-s|> private <|s|> volatile <|s|> Crypto Manager <|s|> crypto Manager ; <|nl|>
<|16-s|> throw <|s|> new <|s|> Crypto Provider Missing Public Key Exception ( " Cryptographic <|s|> providers <|s|> require <|s|> a <|s|> non - null , <|s|> empty <|s|> public <|s|> and <|s|> key <|s|> identifier <|s|> ( kid ) <|s|> be <|s|> configured <|s|> for <|s|> the <|s|> alias : <|s|> " <|s|> + <|s|> provider Name ); <|nl|>
<|16-s|> <|4-s|> throw <|s|> new <|s|> Crypto Provider Signing Failed Exception ( " The <|s|> authentication <|s|> failed <|s|> while <|s|> checking <|s|> the <|s|> signature <|s|> of <|s|> the <|s|> message <|s|> payload <|s|> for <|s|> the <|s|> alias : <|s|> " <|s|> + <|s|> provider Name ); <|nl|>
<|12-s|> + <|s|> " , <|s|> hostname = ' " <|s|> + <|s|> hostname <|nl|> <|12-s|> + <|s|> " , <|s|> alternate Addresses = " <|s|> + <|s|> alternate Addresses <|nl|>
<|8-s|> this . username <|s|> = <|s|> require Non Null ( username , <|s|> " username <|s|> can ' t <|s|> be <|s|> null " ); <|nl|> <|8-s|> this . password <|s|> = <|s|> require Non Null ( password , <|s|> " password <|s|> can ' t <|s|> be <|s|> null " ); <|nl|>
<|4-s|> Credentials <|s|> get ( Inet Socket Address <|s|> address ); <|nl|>
<|4-s|> public <|s|> Credentials <|s|> get ( Inet Socket Address <|s|> address ) <|s|> { <|nl|>
<|4-s|> Auth Handler ( String <|s|> username , <|s|> String <|s|> password ) <|s|> { <|nl|> <|8-s|> this . username <|s|> = <|s|> username ; <|nl|> <|8-s|> this . password <|s|> = <|s|> password ; <|nl|>
<|4-s|> <|s|> * <|s|> wants <|s|> it <|s|> as <|s|> int <|s|> to <|s|> be <|s|> forwards <|s|> compatible <|s|> ( since <|s|> at <|s|> some <|nl|> <|4-s|> <|s|> * <|s|> point <|s|> we <|s|> might <|s|> want <|s|> to <|s|> expose <|s|> this <|s|> as <|s|> a <|s|> number <|s|> to <|s|> users ) . <|nl|>
<|8-s|> return <|s|> priority ( priority <|s|> ? <|s|> - 1 <|s|> : <|s|> 0 ); <|nl|>
<|12-s|> " , <|s|> priority = " <|s|> + <|s|> priority <|s|> + <|nl|>
<|8-s|> return <|s|> String . format ( " 0 x % 02 x <|s|> ( % s ) " , <|s|> opcode , <|s|> get Opcode Name ( opcode ) ); <|nl|>
<|8-s|> if <|s|> ( LOGGER . is Trace Enabled ( ) ) <|s|> { <|nl|> <|12-s|> pipeline . add Last ( new <|s|> Dcp Logging Handler ( Log Level . TRACE ) ); <|nl|> <|8-s|> } <|nl|>
<|del|> <|nl|>
public <|s|> class <|s|> Fts Server Overload Exception <|s|> extends <|s|> Temporary Failure Exception <|s|> { <|nl|>
public <|s|> class <|s|> Fts Server Overload Exception <|s|> extends <|s|> Temporary Failure Exception <|s|> { <|nl|>
<|12-s|> . delay ( Delay . exponential ( Time Unit . MILLISECONDS , <|s|> upper Retry Limit , <|s|> lower Retry Limit ) ) <|nl|>
<|8-s|> this . mode <|s|> = <|s|> mode ; <|nl|> <|8-s|> this . conditions <|s|> = <|s|> where Fields <|s|> == <|s|> null <|s|> ? <|s|> null <|s|> : <|s|> conditions ( where Fields ); <|nl|>
<|16-s|> spans . remove ( ); <|nl|>
<|12-s|> original Promise ( ) . try Failure ( new <|s|> Connect Timeout Exception ( " Handshake <|s|> did <|s|> not <|s|> complete <|s|> before <|s|> deadline . " ) ); <|nl|>
<|8-s|> Json Document <|s|> document <|s|> = <|2-s|> new Document ( id , <|s|> expiry , <|s|> byte Buf To Json Object ( content ) , <|s|> cas ); <|nl|> <|8-s|> if <|s|> ( document . content ( ) <|s|> != <|s|> null ) <|s|> { <|nl|> <|12-s|> document . content ( ) . set Crypto Manager ( this . crypto Manager ); <|nl|> <|8-s|> } <|nl|> <|8-s|> return <|s|> document ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> <|s|> * <|s|> @ param <|s|> bucket <|4-s|> <|s|> the <|s|> bucket <|s|> of <|s|> the <|s|> document . <|nl|>
<|4-s|> DISTINCT _ RAW ( " DISTINCT <|s|> RAW " ); <|nl|>
<|12-s|> ingest Options ( ) . ingest Method ( Analytics Ingester . Ingest Method . REPLACE ) <|nl|>
<|del|> <|nl|>
<|4-s|> <|s|> * <|s|> Throws <|s|> { @ link <|s|> Runtime Exception } <|s|> if <|s|> there <|s|> is <|s|> no <|s|> result <|s|> handle <|s|> available <|nl|>
<|12-s|> " , <|s|> handle = ' " <|s|> + <|s|> handle + <|s|> ' \ ' ' <|s|> + <|nl|>
<|12-s|> throw <|s|> new <|s|> Illegal State Exception ( " There <|s|> is <|s|> no <|s|> result <|s|> handle <|s|> available , <|s|> retry <|s|> status <|s|> until <|s|> success " ); <|nl|>
<|4-s|> public <|s|> Keys Path <|s|> use Nested Loop ( ) <|s|> { <|nl|>
<|8-s|> return <|s|> " USE <|s|> HASH ( " <|s|> + <|s|> this . side <|s|> + <|s|> " ) " ; <|nl|>
<|8-s|> return <|s|> " USE <|s|> HASH ( " <|s|> + <|s|> this . side <|s|> + <|s|> " ) " ; <|nl|>
<|nl|> <|4-s|> /* * <|nl|> <|4-s|> <|s|> * <|s|> The <|s|> BUILD <|s|> side <|s|> of <|s|> the <|s|> join <|s|> will <|s|> be <|s|> used <|s|> to <|s|> create <|s|> an <|s|> in - memory <|s|> hash <|s|> table <|nl|> <|4-s|> <|s|> * <|s|> */ <|nl|>
<|4-s|> @ Override <|nl|> <|4-s|> public <|s|> String <|s|> to String ( ) <|s|> { <|nl|>
<|t|> <|s|> * <|s|> @ return <|s|> the <|s|> version <|s|> of <|s|> this <|s|> reference . <|nl|> <|t|> <|s|> * <|s|> @ throws <|s|> Unsupported Operation Exception <|nl|> <|t|> <|s|> * <|12-s|> <|s|> if <|s|> the <|s|> creator <|s|> of <|s|> the <|s|> instance <|s|> ( e . g . <|s|> { @ link <|s|> Ref Database } ) <|nl|> <|t|> <|s|> * <|12-s|> <|s|> doesn ' t <|s|> support <|s|> versioning <|s|> and <|s|> doesn ' t <|s|> override <|s|> this <|s|> method <|nl|> <|t|> <|s|> * <|s|> @ since <|s|> 5 . 2 <|nl|>
<|t|> default <|s|> long <|s|> get Version ( ) <|s|> { <|nl|>
<|4-t|> fail ( " FS <|s|> doesn ' t <|s|> implement <|s|> ref <|s|> versioning " ); <|nl|>
<|t|> private <|s|> long <|s|> version ; <|nl|>
<|8-s|> if <|s|> ( compile <|s|> == <|s|> null ) <|s|> { <|nl|> <|12-s|> Activator . log Info ( " build Filter From Regex : <|s|> Invalid <|s|> regex " ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|t|> default <|s|> long <|s|> get Update Index ( ) <|s|> { <|nl|>
<|s|> * <|s|> The <|s|> client <|s|> is <|s|> responsible <|s|> to <|s|> call <|s|> { @ link <|s|> # get Version ( ) } <|s|> only <|s|> on <|s|> refs <|s|> obtained <|nl|> <|s|> * <|s|> from <|s|> { @ link <|s|> Ref Database } <|s|> implementations <|s|> that <|s|> support <|s|> versioning <|s|> ( e . g . <|nl|> <|s|> * <|s|> reftables ) . <|s|> This <|s|> can <|s|> be <|s|> checked <|s|> via <|s|> { @ link <|s|> Ref Database # has Versioning ( ) } <|nl|> <|s|> * <|s|> method . <|nl|>
<|2-t|> EMFGraphical Content Provider <|s|> provider <|s|> = <|s|> Provider Helper . encapsulate Provider ( content Provider , <|s|> rs , <|s|> History Util . get History ID ( source , <|s|> feature , <|s|> " container " ) ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|s|> * <|s|> @ deprecated <|s|> since <|nl|> <|s|> * <|12-s|> <|s|> Use <|s|> the <|s|> { @ link <|s|> org . eclipse . papyrus . infra . services . edit . ui . databinding . Aggregated Papyrus Observable Value } <|s|> API , <|s|> instead . <|nl|>
<|s|> * <|s|> @ deprecated <|s|> since <|s|> 1 . 2 . 0 <|nl|> <|s|> * <|12-s|> <|s|> Use <|s|> the <|s|> { @ link <|s|> org . eclipse . papyrus . infra . tools . databinding . Command Based Observable } <|s|> API , <|s|> instead . <|nl|>
<|s|> * <|s|> @ deprecated <|s|> since <|s|> 1 . 2 . 0 <|nl|> <|s|> * <|12-s|> <|s|> Use <|s|> the <|s|> { @ link <|s|> org . eclipse . papyrus . infra . tools . databinding . Command Based Observable Value } <|s|> API , <|s|> instead . <|nl|>
<|s|> * <|s|> @ deprecated <|s|> since <|s|> 1 . 2 . 0 <|nl|> <|s|> * <|12-s|> <|s|> Use <|s|> the <|s|> { @ link <|s|> org . eclipse . papyrus . infra . gmfdiag . common . databinding . GMFObservable List } <|s|> API , <|s|> instead <|nl|>
<|s|> * <|s|> @ deprecated <|s|> since <|s|> 1 . 2 . 0 <|nl|> <|s|> * <|12-s|> <|s|> Use <|s|> the <|s|> { @ link <|s|> org . eclipse . papyrus . infra . gmfdiag . common . databinding . GMFObservable Value } <|s|> API , <|s|> instead <|nl|>
// should <|s|> be <|s|> removed <|s|> in <|s|> Papyrus <|s|> 5 . 0 <|s|> ( see <|s|> bug <|s|> 540821 ) <|nl|> /* * <|nl|> <|s|> * <|s|> @ deprecated <|s|> since <|s|> 1 . 2 . 0 <|nl|> <|s|> * <|s|> @ author <|s|> VL 222926 <|nl|> <|s|> * <|nl|> <|s|> */ <|nl|>
// should <|s|> be <|s|> removed <|s|> in <|s|> Papyrus <|s|> 5 . 0 <|s|> ( see <|s|> bug <|s|> 540821 ) <|nl|> /* * <|nl|> <|s|> * <|s|> @ deprecated <|s|> since <|s|> 1 . 2 . 0 <|nl|> <|s|> * <|s|> @ author <|s|> VL 222926 <|nl|> <|s|> * <|nl|> <|s|> */ <|nl|>
<|t|> public <|s|> static <|s|> final <|s|> String <|s|> TAG _ PROFILE _ CHANGED <|s|> = <|s|> " <|4-s|> ( has <|s|> changed , <|s|> consider <|s|> re - applying <|s|> profile ) " ; <|s|> // $ NON - NLS - 1 $ <|nl|>
<|12-s|> stack [ i ] <|s|> = <|s|> ( call <|s|> instanceof <|s|> Long ) <|s|> ? <|s|> ( long ) <|s|> call <|s|> : <|s|> UNDEFINED _ SYMBOL ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|12-s|> stack [ i ] <|s|> = <|s|> ( call <|s|> instanceof <|s|> Long ) <|s|> ? <|s|> ( long ) <|s|> call <|s|> : <|s|> UNDEFINED _ SYMBOL ; <|nl|>
<|16-s|> <|8-s|> } <|s|> catch <|s|> ( Runtime Exception <|s|> e ) <|s|> { <|nl|>
<|s|> * <|s|> This <|s|> program <|s|> and <|s|> the <|s|> accompanying <|s|> materials <|nl|> <|s|> * <|s|> are <|s|> made <|s|> available <|s|> under <|s|> the <|s|> terms <|s|> of <|s|> the <|s|> Eclipse <|s|> Public <|s|> License <|s|> 2 . 0 <|nl|>
<|2-t|> cc . set Property ( EMFCompare Configuration . MIRRORED , <|s|> Boolean . TRUE ); <|nl|>
<|2-t|> Object <|s|> property <|s|> = <|s|> get Property ( EMFCompare Configuration . MIRRORED ); <|nl|>
<|3-t|> if <|s|> ( EMFCompare Configuration . MIRRORED . equals ( event . get Property ( ) ) ) <|s|> { <|nl|>
<|2-t|> boolean <|s|> is Left <|s|> = <|s|> Merge Viewer Side . LEFT <|s|> == <|s|> side ; <|nl|> <|2-t|> if <|s|> ( get Compare Configuration ( ) . is Mirrored ( ) ) <|s|> { <|nl|> <|3-t|> is Left <|s|> = <|s|> Merge Viewer Side . RIGHT <|s|> == <|s|> side ; <|nl|> <|2-t|> } <|nl|>
<|2-t|> cc . set Property ( EMFCompare Configuration . MIRRORED , <|s|> Boolean . TRUE ); <|nl|>
<|2-t|> if <|s|> ( length <|s|> == <|s|> 1 <|s|> && <|s|> ( flags <|s|> & <|s|> SWT . DRAW _ TRANSPARENT ) <|s|> != <|s|> 0 ) <|s|> { <|nl|>
<|3-t|> private <|s|> Readable Channel <|s|> channel ( ) <|s|> throws <|s|> IOException <|s|> { <|nl|>
<|s|> * <|s|> https :// www . eclipse . org / legal / epl - 2 . 0 <|nl|>
<|2-t|> Ref <|s|> ref <|s|> = <|s|> refdir . exact Ref ( HEAD ); <|nl|> <|2-t|> assert Not Null ( ref ); <|nl|> <|2-t|> ref . get Update Index ( ); <|s|> // <|s|> Not <|s|> implemented <|s|> on <|s|> FS <|nl|>
<|2-t|> for <|s|> ( Ref <|s|> ref <|s|> : <|s|> refs ) <|s|> { <|nl|>
<|2-t|> return <|s|> new <|s|> Symbolic Ref ( ref . get Name ( ) , <|s|> dst , <|s|> ref . get Update Index ( ) ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|t|> <|s|> * <|s|> instantiator <|s|> of <|s|> the <|s|> Ref <|s|> must <|s|> override <|s|> this <|s|> method <|s|> ( e . g . <|s|> by <|s|> using <|s|> the <|nl|> <|t|> <|s|> * <|s|> { @ code <|s|> Versioned Ref } <|s|> decorator ) <|s|> if <|s|> it <|s|> can <|s|> provide <|s|> a <|s|> version <|s|> value . <|nl|>
<|t|> <|s|> * <|s|> @ return <|s|> true <|s|> whether <|s|> the <|s|> implementation <|s|> assigns <|s|> update <|s|> indices <|s|> to <|nl|>
<|t|> <|s|> * <|s|> @ return <|s|> true <|s|> whether <|s|> the <|s|> implementation <|s|> assigns <|s|> update <|s|> indices <|s|> to <|nl|>
<|4-t|> ref <|s|> = <|s|> block . read Ref ( min Update Index <|s|> + <|s|> block . read Update Index Delta ( ) ); <|nl|>
<|4-t|> ref <|s|> = <|s|> block <|nl|> <|4-t|> <|2-t|> . read Ref ( min Update Index <|s|> + <|s|> block . read Update Index Delta ( ) ); <|nl|>
<|t|> <|s|> * <|s|> Should <|s|> not <|s|> be <|s|> used <|s|> unless <|s|> the <|s|> { @ code <|s|> Ref Database } <|s|> that <|s|> instantiated <|s|> the <|nl|> <|t|> <|s|> * <|s|> ref <|s|> supports <|s|> versioning <|s|> ( see <|s|> { @ link <|s|> Ref Database # has Versioning ( ) } <|nl|>
<|del|> <|nl|>
<|16-s|> <|12-s|> String <|s|> name <|s|> = <|s|> res . get Location ( ) . make Relative To ( new <|s|> Path ( supplementary Folder ) ) . to String ( ); <|nl|> <|16-s|> <|12-s|> new <|s|> Trace Package Suppl File Element ( res , <|s|> name , <|s|> supp Files Element ); <|nl|>
<|16-s|> <|12-s|> String <|s|> name <|s|> = <|s|> res . get Location ( ) . make Relative To ( new <|s|> Path ( supplementary Folder ) ) . to String ( ); <|nl|> <|16-s|> <|12-s|> new <|s|> Trace Package Suppl File Element ( res , <|s|> name , <|s|> supp Files Element ); <|nl|>
<|16-s|> <|12-s|> String <|s|> name <|s|> = <|s|> res . get Location ( ) . make Relative To ( new <|s|> Path ( supplementary Folder ) ) . to String ( ); <|nl|> <|16-s|> <|12-s|> new <|s|> Trace Package Suppl File Element ( res , <|s|> name , <|s|> supp Files Element ); <|nl|>
<|16-s|> <|8-s|> } <|nl|> <|16-s|> <|4-s|> } <|nl|>
<|del|> <|nl|>
<|t|> <|s|> * <|s|> < p > <|nl|> <|t|> <|s|> * <|s|> @ impl Spec <|s|> This <|s|> method <|s|> returns <|s|> false <|s|> by <|s|> default . <|s|> Implementations <|nl|> <|t|> <|s|> * <|8-s|> <|2-s|> <|s|> supporting <|s|> versioning <|s|> must <|s|> override <|s|> it <|s|> to <|s|> return <|s|> true . <|nl|> <|t|> <|s|> * <|s|> @ return <|s|> true <|s|> if <|s|> the <|s|> implementation <|s|> assigns <|s|> update <|s|> indices <|s|> to <|s|> references . <|nl|>
<|t|> public <|s|> boolean <|s|> has Versioning ( ) <|s|> { <|nl|> <|2-t|> return <|s|> false ; <|nl|> <|t|> } <|nl|>
<|t|> <|s|> * <|s|> ref <|s|> supports <|s|> versioning <|s|> ( see <|s|> { @ link <|s|> Ref Database # has Versioning ( ) } ) <|nl|>
<|t|> <|s|> * <|s|> update . <|s|> See <|s|> { @ link <|s|> Ref # get Update Index ( ) } . <|nl|> <|t|> <|s|> * <|nl|>
<|t|> <|s|> * <|s|> < p > <|nl|>
<|s|> * <|s|> Copyright <|s|> ( c ) <|s|> 2009 , <|s|> 2018 <|s|> THALES <|s|> GLOBAL <|s|> SERVICES <|s|> and <|s|> others . <|nl|>
<|8-s|> // <|s|> keep <|s|> only <|s|> the <|s|> DRepresentation Descriptor <|s|> which <|s|> DRepresentation <|s|> is <|s|> not <|s|> null <|nl|>
<|t|> public <|s|> final <|s|> Ref <|s|> get Ref ( String <|s|> name ) <|s|> throws <|s|> IOException <|s|> { <|nl|> <|2-t|> return <|s|> find Ref ( name ); <|nl|> <|t|> } <|nl|>
<|2-t|> return <|s|> new <|s|> First Command ( line . substring ( 0 , <|s|> nul ) , <|s|> unmodifiable Set ( opts ) ); <|nl|>
<|3-t|> // <|s|> look <|s|> for <|s|> files <|s|> or <|s|> folders <|s|> with <|s|> the <|s|> given <|s|> path <|nl|>
<|3-t|> if <|s|> ( get Type ( ) <|s|> != <|s|> ARCHIVE ) <|s|> { <|nl|>
<|3-t|> } <|nl|> <|nl|> <|3-t|> if <|s|> ( get Type ( ) <|s|> != <|s|> ARCHIVE ) <|s|> { <|nl|> <|4-t|> @ Suppress Warnings ( " deprecation " ) <|nl|> <|4-t|> IContainer [ ] <|s|> containers <|s|> = <|s|> root . find Containers For Location ( path ); <|nl|> <|4-t|> if <|s|> ( containers . length <|s|> > <|s|> 0 ) <|s|> { <|nl|> <|4-t|> <|t|> return <|s|> containers [ 0 ]; <|nl|> <|4-t|> } <|nl|> <|3-t|> } <|nl|>
<|t|> private <|s|> static <|s|> class <|s|> Lazy Channel <|nl|> <|3-t|> implements <|s|> Auto Closeable , <|s|> Dfs Block Cache . Readable Channel Supplier <|s|> { <|nl|> <|2-t|> private <|s|> final <|s|> Dfs Reader <|s|> ctx ; <|nl|> <|2-t|> private <|s|> final <|s|> Dfs Pack Description <|s|> desc ; <|nl|> <|2-t|> private <|s|> final <|s|> Pack Ext <|s|> ext ; <|nl|>
<|2-t|> basic Initialize ( descriptor ); <|nl|> <|2-t|> if <|s|> ( ! get Status ( ) . is OK ( ) ) <|s|> { <|nl|> <|3-t|> return ; <|nl|> <|2-t|> } <|nl|>
<|2-t|> String Builder <|s|> builder <|s|> = <|s|> new <|s|> String Builder ( ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-t|> return <|s|> user ; <|nl|>
<|2-t|> <|s|> * <|s|> regular <|s|> users <|s|> can ' t <|s|> see <|s|> any <|s|> orgunits , <|s|> while <|s|> server <|s|> admins <|s|> can <|s|> see <|s|> all <|s|> of <|s|> them . <|s|> Only <|s|> project <|s|> admins <|s|> have <|nl|>
<|s|> * <|s|> Johannes <|s|> Faltermeier <|s|> - <|s|> initial <|s|> API <|s|> and <|s|> implementation <|nl|>
<|2-t|> get Super Admin Broker ( ) . change Role ( get Project Space ( ) . get Project Id ( ) , <|s|> group , <|s|> Roles . writer ( ) ); <|nl|> <|nl|> <|2-t|> final <|s|> int <|s|> old Size <|s|> = <|s|> get Super Admin Broker ( ) . get Groups ( ) . size ( ); <|nl|>
<|del|> <|nl|>
<|4-s|> uninstall Test Messagehandler ( ); <|nl|>
<|2-s|> protected <|s|> static <|s|> < DTO > <|s|> void <|s|> verify Request Reply Message Handler ( IDestination < DTO > <|s|> expected Destination , <|s|> IMarshaller <|s|> marshaller , <|s|> DTO <|s|> expected Request , <|s|> DTO <|s|> expected Reply ) <|s|> { <|nl|>
<|2-s|> <|s|> * <|s|> The <|s|> message <|s|> has <|s|> not <|s|> yet <|s|> been <|s|> processed <|s|> ( unmarshalled ) <|s|> by <|s|> the <|s|> MOM <|s|> framework . <|nl|>
<|2-s|> <|s|> * <|s|> The <|s|> message <|s|> has <|s|> already <|s|> been <|s|> processed <|s|> ( marshalled ) <|s|> by <|s|> the <|s|> MOM <|s|> framework . <|nl|>
<|2-s|> <|s|> * <|s|> @ return <|s|> the <|s|> writer ' s <|s|> { @ link <|s|> IMarshaller } <|s|> used <|s|> to <|s|> transform <|s|> the <|s|> transfer <|s|> object <|s|> ( never <|s|> < code > null </ code > ) . <|nl|>
<|2-s|> <|s|> * <|s|> If <|s|> the <|s|> message <|s|> is <|s|> a <|s|> { @ link <|s|> javax . jms . Bytes Message } , <|s|> the <|s|> message <|s|> body <|s|> is <|s|> put <|s|> in <|s|> read - only <|s|> mode <|s|> and <|s|> repositions <|s|> the <|nl|> <|2-s|> <|s|> * <|s|> stream <|s|> of <|s|> bytes <|s|> to <|s|> the <|s|> beginning . <|nl|>
<|nl|> <|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> @ return <|s|> the <|s|> associated <|s|> { @ link <|s|> IJms Message Handler } <|s|> for <|s|> this <|s|> JMS <|s|> MOM <|s|> implementor . <|s|> It <|s|> is <|s|> never <|s|> < code > null </ code > . <|nl|> <|2-s|> <|s|> */ <|nl|>
<|2-t|> fetch From Bundle ( new Repo , <|s|> " Not <|s|> a <|s|> bundle <|s|> file " . get Bytes ( UTF _ 8 ) ); <|nl|>
<|t|> <|s|> * <|s|> Indicates <|s|> if <|s|> a <|s|> signing <|s|> key <|s|> is <|s|> available <|s|> for <|s|> the <|s|> specified <|s|> committer <|nl|>
<|t|> <|s|> * <|12-s|> the <|s|> signing <|s|> key <|s|> to <|s|> locate <|s|> ( passed <|s|> as <|s|> is <|s|> to <|s|> the <|s|> GPG <|s|> signing <|nl|> <|t|> <|s|> * <|12-s|> tool <|s|> as <|s|> is ; <|s|> eg . , <|s|> value <|s|> of <|s|> < code > user . signingkey </ code > ) <|nl|>
<|2-t|> super . do Set Value ( value ); <|s|> // <|s|> TODO <|s|> : <|s|> real <|s|> type <|s|> of <|s|> the <|s|> value <|s|> ? <|s|> type <|s|> compatibility <|s|> ? <|nl|>
<|4-s|> <|s|> * <|s|> Tests <|s|> whether <|s|> this <|s|> action <|s|> should <|s|> be <|s|> active . <|s|> The <|s|> action <|s|> is <|s|> active <|s|> if <|s|> the <|s|> given <|s|> { @ link <|s|> IDiagram Element Edit Part } <|s|> is <|nl|> <|4-s|> <|s|> * <|s|> hidden . <|nl|>
<|4-s|> <|s|> * <|s|> @ return <|s|> true <|s|> if <|s|> the <|s|> selected <|s|> element <|s|> is <|s|> hidden . <|nl|>
<|4-s|> <|s|> * <|s|> @ return <|s|> true <|s|> if <|s|> the <|s|> selected <|s|> element <|s|> is <|s|> hidden . <|nl|>
<|4-s|> <|s|> * <|s|> @ return <|s|> true <|s|> if <|s|> the <|s|> selected <|s|> element <|s|> is <|s|> hidden . <|nl|>
<|4-s|> <|s|> * <|s|> Tests <|s|> whether <|s|> this <|s|> action <|s|> should <|s|> be <|s|> active . <|s|> The <|s|> action <|s|> is <|s|> active <|s|> if <|s|> the <|s|> the <|s|> given <|s|> selection <|s|> contains <|s|> only <|s|> hidden <|nl|> <|4-s|> <|s|> * <|s|> diagram <|s|> graphical <|s|> element . <|nl|>
<|4-s|> <|s|> * <|s|> @ return <|s|> true <|s|> if <|s|> all <|s|> selected <|s|> elements <|s|> are <|s|> hidden . <|nl|>
<|4-s|> <|s|> * <|s|> @ return <|s|> true <|s|> if <|s|> all <|s|> selected <|s|> elements <|s|> are <|s|> hidden . <|nl|>
<|12-s|> final <|s|> Object <|s|> selected Element <|s|> = <|s|> iterator . next ( ); <|nl|> <|12-s|> if <|s|> ( selected Element <|s|> instanceof <|s|> IDiagram Element Edit Part ) <|s|> { <|nl|> <|16-s|> result <|s|> = <|s|> result <|s|> && <|s|> is Active ( ( IDiagram Element Edit Part ) <|s|> selected Element ); <|nl|>
<|12-s|> Optional < DDiagram Element > <|s|> optional Diagram Element <|s|> = <|s|> Optional . of ( ( IGraphical Edit Part ) <|s|> vpe ) . map ( IGraphical Edit Part :: resolve Semantic Element ) . filter ( DDiagram Element . class :: is Instance ) <|nl|>
<|del|> <|nl|>
<|s|> * <|s|> Extends <|s|> the <|s|> { @ link <|s|> Reveal Elements Action } <|s|> to <|s|> make <|s|> it <|s|> compatible <|s|> with <|s|> the <|s|> tabbar <|s|> by <|s|> making <|s|> it <|s|> disposable <|s|> and <|s|> by <|nl|> <|s|> * <|s|> handling <|s|> the <|s|> selection <|s|> changes . <|nl|>
<|4-s|> <|s|> * <|s|> @ param <|s|> label <|s|> the <|s|> label <|nl|>
<|del|> <|nl|>
<|4-s|> <|s|> * <|12-s|> element <|s|> to <|s|> hide <|s|> and <|s|> reveal <|nl|>
<|4-s|> <|s|> * <|s|> We <|s|> perform <|s|> the <|s|> Show <|s|> / <|s|> Hide <|s|> for <|s|> each <|s|> action <|s|> according <|s|> to <|s|> the <|s|> i <|s|> argument : <|nl|>
<|4-s|> final <|s|> String Holder <|s|> pattern <|s|> = <|s|> new <|s|> String Holder ( ); <|nl|> <|4-s|> final <|s|> String <|s|> input <|s|> = <|s|> " 2019 - 01 - 18 T 12 : 42 : 03 . 409 Z " ; <|nl|>
<|del|> <|nl|>
<|t|> <|s|> * <|s|> Includes <|s|> peeled <|s|> { @ link Object Id } s . <|s|> This <|s|> is <|s|> the <|s|> inverse <|s|> lookup <|s|> of <|nl|>
<|t|> <|s|> * <|s|> @ return <|s|> a <|s|> { @ link <|s|> Set } <|s|> of <|s|> { @ link <|s|> Ref } s <|s|> whose <|s|> tips <|s|> point <|s|> to <|s|> the <|s|> provided <|nl|>
<|2-t|> return <|s|> get Refs ( ) . stream ( ) . filter ( r <|s|> -> <|s|> id . equals ( r . get Object Id ( ) ) <|nl|> <|4-t|> || <|s|> id . equals ( r . get Peeled Object Id ( ) ) ) . collect ( to Set ( ) ); <|nl|>
<|del|> <|nl|>
<|4-s|> /* * <|s|> The <|s|> data <|s|> provider <|s|> title <|s|> text <|s|> */ <|nl|>
<|16-s|> builder . set Id ( Segment Store Scatter Data Provider . ID <|s|> + <|s|> Data Provider Constants . ID _ SEPARATOR <|s|> + <|s|> analysis . get Id ( ) ) <|nl|>
<|2-t|> return <|s|> new <|s|> File Output Stream ( file ); <|nl|>
<|s|> * <|s|> <|nl|>
<|4-t|> try <|s|> ( Input Stream <|s|> input Stream <|s|> = <|s|> new <|s|> Buffered Input Stream ( zip File . get Input Stream ( entry ) ); <|nl|> <|4-t|> <|2-t|> Output Stream <|s|> out Stream <|s|> = <|s|> new <|s|> Buffered Output Stream ( new <|s|> File Output Stream ( output File ) ) ) <|s|> { <|nl|> <|4-t|> <|t|> copy Stream ( input Stream , <|s|> out Stream ); <|nl|>
<|4-t|> <|t|> throw <|s|> new <|s|> Core Exception ( new <|s|> Status ( IStatus . ERROR , <|s|> Commons Core Plugin . ID _ PLUGIN , <|s|> NLS . bind ( <|nl|> <|4-t|> <|3-t|> " The <|s|> storage <|s|> location <|s|> ' ' { 0 } ' ' <|s|> contains <|s|> sub <|s|> directories " , <|s|> path ) ) ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|2-t|> try <|s|> ( Zip Output Stream <|s|> zip Out <|s|> = <|s|> new <|s|> Zip Output Stream ( new <|s|> Buffered Output Stream ( new <|s|> File Output Stream ( zip File ) ) ) <|s|> { <|nl|>
<|2-t|> try <|s|> ( Input Stream <|s|> in <|s|> = <|s|> new <|s|> File Input Stream ( source ); <|s|> Output Stream <|s|> out <|s|> = <|s|> new <|s|> Buffered Output Stream ( new <|s|> File Output Stream ( dest ) ) ) <|s|> { <|nl|>
<|s|> * <|s|> <|nl|>
<|2-t|> if <|s|> ( f Expression History <|s|> != <|s|> null ) <|s|> { <|nl|> <|3-t|> f Expression History . dispose ( ); <|nl|>
<|4-s|> <|s|> * <|s|> Performs <|s|> a <|s|> hide <|s|> and <|s|> show <|s|> action <|s|> on <|s|> the <|s|> diagram <|s|> element <|s|> by <|s|> using <|s|> those <|s|> three <|s|> different <|s|> ways : <|nl|>
<|del|> <|nl|>
<|2-s|> <|s|> protected <|s|> Tree Node ( Tree Node < Tree Type > <|s|> parent , <|s|> Tree Type <|s|> myself ) <|s|> { <|nl|>
public <|s|> interface <|s|> Data Driven Condition <|s|> extends <|s|> IData Driven Runtime Object <|s|> { <|nl|>
<|3-t|> throw <|s|> new <|s|> Fatal Socket Exception ( ); <|nl|>
<|2-t|> try <|s|> { <|nl|> <|3-t|> return <|s|> disable SSLv 3 And Return ( server Socket Factory . create Server Socket ( p Port , <|s|> backlog , <|s|> addr ) ); <|nl|> <|2-t|> } <|s|> catch <|s|> ( final <|s|> Fatal Socket Exception <|s|> ex ) <|s|> { <|nl|> <|3-t|> shutdown ( server Socket Factory , <|s|> ex ); <|nl|> <|3-t|> throw <|s|> new <|s|> IOException ( ex . get Message ( ) ); <|nl|> <|2-t|> } <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-t|> <|4-t|> . async Exec ( ( ) <|s|> -> <|s|> Platform UI . get Workbench ( ) . get Display ( ) . timer Exec ( 200 , <|nl|> <|4-t|> <|4-t|> <|2-t|> switch Top Control Runnable ) ); <|nl|>
<|del|> <|nl|>
public <|s|> final <|s|> class <|s|> Empty Workspace Helper <|s|> { <|nl|>
<|t|> private <|s|> Array List < IAction > <|s|> project Wizard Actions ; <|nl|> <|t|> private <|s|> IAction <|s|> new Project Action ; <|nl|>
<|t|> public <|s|> void <|s|> set Non Empty Control ( Control <|s|> control ) <|s|> { <|nl|>
<|t|> private <|s|> void <|s|> dispose ( Listener <|s|> listener ) <|s|> { <|nl|> <|2-t|> Platform UI . get Workbench ( ) . get Active Workbench Window ( ) . remove Perspective Listener ( listener ); <|nl|> <|2-t|> Resources Plugin . get Workspace ( ) . remove Resource Change Listener ( listener ); <|nl|> <|2-t|> JFace Resources . get Color Registry ( ) . remove Listener ( listener ); <|nl|> <|2-t|> parent . remove Dispose Listener ( listener ); <|nl|>
<|3-t|> IWizard Registry <|s|> new Wizard Registry <|s|> = <|s|> Workbench Plugin . get Default ( ) . get New Wizard Registry ( ); <|nl|> <|3-t|> IWizard Descriptor <|s|> wizard Desc <|s|> = <|s|> new Wizard Registry . find Wizard ( wizard Id ); <|nl|> <|3-t|> if <|s|> ( wizard Desc <|s|> == <|s|> null ) <|s|> { <|nl|>
<|3-t|> IWizard Registry <|s|> new Wizard Registry <|s|> = <|s|> Workbench Plugin . get Default ( ) . get New Wizard Registry ( ); <|nl|> <|3-t|> IWizard Descriptor <|s|> wizard Desc <|s|> = <|s|> new Wizard Registry . find Wizard ( wizard Id ); <|nl|> <|3-t|> if <|s|> ( wizard Desc <|s|> == <|s|> null ) <|s|> { <|nl|>
<|t|> private <|s|> boolean <|s|> switch Top Control ( ) <|s|> { <|nl|> <|2-t|> if <|s|> ( control . is Disposed ( ) <|s|> || <|s|> empty Area . is Disposed ( ) ) <|s|> { <|nl|> <|3-t|> return <|s|> false ; <|nl|> <|2-t|> } <|nl|>
<|del|> <|nl|>
<|2-t|> } <|nl|> <|nl|> <|2-t|> @ Override <|nl|> <|2-t|> public <|s|> void <|s|> widget Disposed ( Dispose Event <|s|> e ) <|s|> { <|nl|> <|3-t|> dispose ( this ); <|nl|> <|2-t|> } <|nl|> <|nl|>
<|del|> <|nl|>
<|s|> * <|s|> The <|s|> explanatory <|s|> text <|s|> explains <|s|> the <|s|> current <|s|> situation <|s|> that <|s|> no <|s|> projects <|s|> are <|nl|>
<|2-t|> parent . remove Dispose Listener ( listener ); <|nl|> <|nl|> <|2-t|> // <|s|> paranoia <|nl|> <|2-t|> parent <|s|> = <|s|> null ; <|nl|> <|2-t|> empty Area <|s|> = <|s|> null ; <|nl|> <|2-t|> layout <|s|> = <|s|> null ; <|nl|> <|2-t|> control <|s|> = <|s|> null ; <|nl|> <|2-t|> display Area <|s|> = <|s|> null ; <|nl|> <|2-t|> project Wizard Actions <|s|> = <|s|> null ; <|nl|> <|2-t|> new Project Action <|s|> = <|s|> null ; <|nl|>
<|4-t|> <|t|> if <|s|> ( action <|s|> != <|s|> null ) <|s|> { <|nl|> <|4-t|> <|2-t|> project Wizard Actions . add ( action ); <|nl|> <|4-t|> <|t|> } <|nl|>
<|4-t|> <|2-t|> Platform UI . get Workbench ( ) . get Display ( ) <|nl|>
<|s|> * <|s|> This <|s|> allows <|s|> to <|s|> sort <|s|> strings <|s|> that <|s|> are <|s|> a <|s|> mixture <|s|> of <|s|> numbers <|s|> and <|s|> text <|s|> ( e . g . <|s|> house <|s|> numbers ) <|s|> in <|s|> an <|s|> intuitive <|s|> fashion . <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|3-t|> f Source Plugin Filter <|s|> = <|s|> new <|s|> Source Plugin Filter ( state ); <|nl|> <|3-t|> f Tree Viewer . add Filter ( f Source Plugin Filter ); <|nl|>
<|2-t|> IFile <|s|> eclipse Target File <|s|> = <|s|> eclipse Folder . get File ( file Name . replace All ( " portable " , <|s|> target Suffix ) ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|t|> public <|s|> Set < Ref > <|s|> get Tips With Sha 1 ( Object Id <|s|> id ) <|s|> throws <|s|> IOException <|s|> { <|nl|>
<|4-t|> <|t|> return <|s|> new <|s|> Status ( IStatus . ERROR , <|s|> Activator . PLUGIN _ ID , <|s|> Messages . Generate Targets Handler _ Unexpected Exception , <|s|> ex ); <|nl|>
<|t|> <|s|> * <|s|> @ param <|s|> style <|s|> SWT <|s|> style <|s|> applicable <|s|> for <|s|> Button . <|s|> Refer <|s|> to <|nl|>
<|2-t|> Test Factory <|s|> factory <|s|> = <|s|> Test Factory . new Test ( ) . layout Data ( grid Data Factory :: create ); <|nl|>
<|2-t|> assert Not Same ( label . get Layout Data ( ) , <|s|> label 2 . get Layout Data ( ) ); <|nl|>
<|del|> <|nl|>
<|3-t|> return <|s|> ' ! ' <|s|> + <|s|> key <|s|> + <|s|> ' ! ' ; <|s|> // $ NON - NLS - 1 $ <|s|> // $ NON - NLS - 2 $ <|nl|>
<|2-t|> return <|s|> e Object . e Class ( ) . get Name ( ) <|s|> + <|s|> ' - ' <|s|> + <|s|> side . get Name ( ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|2-t|> return <|s|> super . to String ( ) <|s|> + <|s|> ' - ' <|s|> + <|s|> side . get Name ( ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|4-t|> <|2-t|> author <|s|> = <|s|> sub Signed Off . contains ( " \ n " ) <|s|> ? <|s|> sub Signed Off . substring ( 0 , <|s|> sub Signed Off . index Of ( " \ n " ) ) <|s|> : <|s|> sub Signed Off ; <|s|> // $ NON - NLS - 1 $ <|s|> // $ NON - NLS - 2 $ <|nl|>
<|4-t|> monitor . begin Task ( task Name , <|s|> 6 ); <|nl|>
<|del|> <|nl|>
<|4-t|> <|t|> Simple Date Format <|s|> date Format <|s|> = <|s|> new <|s|> Simple Date Format ( " dd - MM - yyyy <|s|> HH : mm : ss " ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|4-t|> return <|s|> " Not <|s|> specified " ; <|s|> // $ NON - NLS - 1 $ <|nl|>
<|4-t|> <|3-t|> author <|s|> = <|s|> sub Signed Off . contains ( " \ n " ) <|s|> ? <|s|> sub Signed Off . substring ( 0 , <|s|> sub Signed Off . index Of ( " \ n " ) ) <|s|> : <|s|> sub Signed Off ; <|s|> // $ NON - NLS - 1 $ <|s|> // $ NON - NLS - 2 $ <|nl|>
<|4-t|> return <|s|> " Unknown " ; <|s|> // $ NON - NLS - 1 $ <|nl|>
<|4-t|> return <|s|> " Not <|s|> specified " ; <|s|> // $ NON - NLS - 1 $ <|nl|>
<|t|> private <|s|> final <|s|> static <|s|> String <|s|> SEPARATOR <|s|> = <|s|> " . " ; <|s|> // $ NON - NLS - 1 $ <|nl|>
<|t|> public <|s|> static <|s|> final <|s|> String <|s|> CONTRIBUTION _ BRANCH _ PREFIX <|s|> = <|s|> " Review _ " ; <|s|> // $ NON - NLS - 1 $ <|nl|>
<|2-t|> add Git Files ( git , <|s|> repository . get Work Tree ( ) , <|s|> " " ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|4-t|> <|t|> copy Folder ( sub File . get Absolute Path ( ) , <|s|> dest <|s|> + <|s|> " / " <|s|> + <|s|> sub File . get Name ( ) ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|del|> <|nl|>
<|t|> <|s|> * <|s|> Finds <|s|> the <|s|> active <|s|> shell <|s|> and <|s|> moves <|s|> it <|s|> to <|s|> the <|s|> end <|s|> of <|s|> the <|s|> given <|s|> array , <|s|> so <|s|> that <|nl|> <|t|> <|s|> * <|s|> find Control ( ) <|s|> will <|s|> find <|s|> the <|s|> controls <|s|> from <|s|> the <|s|> active <|s|> shell <|s|> first . <|nl|>
<|t|> <|s|> * <|s|> Finds <|s|> the <|s|> active <|s|> shell <|s|> and <|s|> moves <|s|> it <|s|> to <|s|> the <|s|> end <|s|> of <|s|> the <|s|> given <|s|> array , <|s|> so <|s|> that <|nl|> <|t|> <|s|> * <|s|> find Control ( ) <|s|> will <|s|> find <|s|> the <|s|> controls <|s|> from <|s|> the <|s|> active <|s|> shell <|s|> first . <|nl|>
<|2-t|> // <|s|> Find <|s|> the <|s|> index <|s|> of <|s|> the <|s|> active <|s|> shell <|s|> and <|s|> exchange <|s|> last <|s|> one <|s|> with <|s|> active <|nl|>
public <|s|> class <|s|> Time Line Event <|s|> extends <|s|> Time Event <|s|> { <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|3-t|> Pack List <|s|> new List <|s|> = <|s|> scan Packs ( old , <|s|> force ); <|nl|>
<|del|> <|nl|>
<|4-t|> namespace Map . compute If Absent ( pc . get Namespace ( ) , <|s|> namespace <|s|> -> <|s|> new <|s|> Hash Set < > ( ) ) . add ( iu ); <|nl|> <|4-t|> name Map . compute ( pc . get Name ( ) , <|s|> ( name , <|s|> prev ) <|s|> -> <|s|> { <|nl|> <|4-t|> <|t|> if <|s|> ( prev <|s|> == <|s|> null <|s|> || <|s|> prev <|s|> == <|s|> iu ) <|s|> { <|nl|>
<|t|> private <|s|> static <|s|> void <|s|> collect Matching IUs ( Map < String , <|s|> ? > <|s|> index To Use , <|s|> String <|s|> name , <|s|> Collection < IInstallable Unit > <|s|> collector ) <|s|> { <|nl|>
<|2-t|> } <|s|> else <|s|> if <|s|> ( password Text . get Text ( ) . trim ( ) . is Empty ( ) ) <|s|> { <|nl|>
<|4-t|> <|t|> } <|s|> else <|s|> if <|s|> ( prev <|s|> instanceof <|s|> IInstallable Unit ) <|s|> { <|nl|> <|4-t|> <|2-t|> Collection < IInstallable Unit > <|s|> ius <|s|> = <|s|> new <|s|> Hash Set < > ( ); <|nl|> <|4-t|> <|2-t|> ius . add ( ( IInstallable Unit ) <|s|> prev ); <|nl|> <|4-t|> <|2-t|> ius . add ( iu ); <|nl|> <|4-t|> <|2-t|> return <|s|> ius ; <|nl|>
<|4-s|> <|2-s|> if <|s|> ( parent <|s|> != <|s|> null ) <|s|> { <|nl|> <|8-s|> <|s|> add Child ( parent , <|s|> art ); <|nl|> <|4-s|> <|2-s|> } <|nl|>
<|nl|>
<|t|> public <|s|> static <|s|> final <|s|> String <|s|> UML _ EXT <|s|> = <|s|> org . eclipse . papyrus . uml . tools . model . Uml Model . UML _ FILE _ EXTENSION ; <|nl|>
<|3-t|> Model Set <|s|> model Set <|s|> = <|s|> service Utils . get Model Set ( event ); <|nl|> <|3-t|> URI <|s|> uri <|s|> = <|s|> model Set . get URIWithout Extension ( ) . append File Extension ( UML _ EXT ); <|nl|> <|3-t|> Resource <|s|> user Resource <|s|> = <|s|> model Set . get Resource ( uri , <|s|> false ); <|nl|>
<|3-t|> int <|s|> source End <|s|> = <|s|> statement . source End ; <|nl|>
<|12-s|> if <|s|> ( bounds . x <|s|> == <|s|> 0 <|s|> && <|s|> bounds . y <|s|> == <|s|> 0 ) <|s|> { <|nl|>
<|12-s|> if <|s|> ( ! bounds . contains ( pt ) <|s|> && <|s|> ! f Initial Deadzone . contains ( pt ) ) <|s|> { <|nl|>
<|3-t|> // <|s|> Fix <|s|> the <|s|> number <|s|> of <|s|> GIF <|s|> frames <|s|> as <|s|> Gdk Pixbuf Animation <|s|> does <|s|> not <|s|> provide <|s|> an <|s|> API <|s|> to <|nl|> <|3-t|> // <|s|> determine <|s|> number <|s|> of <|s|> frames . <|nl|>
<|4-t|> <|t|> long <|s|> curr _ pixbuf <|s|> = <|s|> GDK . gdk _ pixbuf _ animation _ iter _ get _ pixbuf <|s|> ( animation _ iter ); <|nl|> <|4-t|> <|t|> long <|s|> pixbuf _ copy <|s|> = <|s|> GDK . gdk _ pixbuf _ copy ( curr _ pixbuf ); <|s|> // <|s|> copy <|s|> because <|s|> curr _ pixbuf <|s|> might <|s|> get <|s|> disposed <|s|> on <|s|> next <|s|> advance <|nl|>
<|del|> <|nl|>
<|t|> return <|s|> GDK . gdk _ pixbuf _ new _ from _ file ( buffer , <|s|> null ); <|nl|>
<|del|> <|nl|>
<|4-s|> private <|s|> final <|s|> Listener <|s|> f Listener <|s|> = <|s|> this :: dispose If Exited ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|16-s|> Display . get Default ( ) . add Filter ( SWT . Mouse Move , <|s|> f Listener ); <|nl|>
<|8-s|> SWTBot Utils . close View ( " welcome " , <|s|> bot ); <|nl|> <|8-s|> /* <|s|> Prepare <|s|> the <|s|> workspace <|s|> */ <|nl|> <|8-s|> prepare Workspace ( ); <|nl|>
<|2-t|> background <|s|> = <|s|> rgba ; <|nl|> <|t|> } <|nl|> <|t|> if <|s|> ( GTK . GTK 4 ) <|s|> { <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> <|s|> * <|s|> Checks <|s|> whether <|s|> at <|s|> least <|s|> one <|s|> change <|s|> of <|s|> which <|s|> we <|s|> are <|s|> notified , <|s|> concerns <|s|> a <|s|> semantic <|s|> model <|s|> or <|s|> a <|s|> specific <|s|> graphical <|nl|>
<|4-s|> <|s|> * <|s|> Checks <|s|> whether <|s|> at <|s|> least <|s|> one <|s|> change <|s|> of <|s|> which <|s|> we <|s|> are <|s|> notified , <|s|> concerns <|s|> a <|s|> semantic <|s|> model <|s|> or <|s|> a <|s|> specific <|s|> graphical <|nl|>
<|4-s|> <|s|> * <|12-s|> a <|s|> cache <|s|> map <|s|> used <|s|> to <|s|> retrieve <|s|> the <|s|> resource <|s|> from <|s|> a <|s|> notifier <|nl|>
<|4-s|> <|s|> * <|s|> Dispose <|s|> the <|s|> shell <|s|> if <|s|> we <|s|> exit <|s|> the <|s|> range . <|nl|>
<|16-s|> Display <|s|> display <|s|> = <|s|> Display . get Default ( ); <|nl|> <|16-s|> display . add Filter ( SWT . Mouse Move , <|s|> f Listener ); <|nl|> <|16-s|> display . add Filter ( SWT . Focus Out , <|s|> f Listener ); <|nl|>
<|8-s|> f Tip Shell . add Dispose Listener ( e <|s|> -> <|s|> e . display . remove Filter ( SWT . Mouse Move , <|s|> f Listener ) ); <|nl|> <|8-s|> f Tip Shell . add Dispose Listener ( e <|s|> -> <|s|> e . display . remove Filter ( SWT . Focus Out , <|s|> f Listener ) ); <|nl|>
<|8-s|> f File Location . delete ( ); <|nl|> <|8-s|> SWTBot Utils . delete Project ( PROJECT _ NAME , <|s|> f Bot ); <|nl|>
<|8-s|> f File Location . delete ( ); <|nl|> <|8-s|> tear Down ( ); <|nl|>
<|16-s|> display . add Filter ( SWT . Focus Out , <|s|> f Focus Lost Listener ); <|nl|>
<|del|> <|nl|>
<|4-t|> return <|s|> true ; <|nl|>
<|4-t|> return <|s|> true ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> /* <|s|> Creating <|s|> project <|s|> and <|s|> open <|s|> the <|s|> trace <|s|> */ <|nl|>
<|del|> <|nl|>
<|12-s|> SWTBot Utils . delay ( 1000 ); <|nl|>
<|8-s|> ( ( Tmf Trace ) <|s|> trace ) . trace Opened ( new <|s|> Tmf Trace Opened Signal ( this , <|s|> trace , <|s|> null ) ); <|nl|>
<|8-s|> ( ( Tmf Trace ) <|s|> trace ) . trace Opened ( new <|s|> Tmf Trace Opened Signal ( this , <|s|> trace , <|s|> null ) ); <|nl|>
<|nl|> <|nl|>
<|del|> <|nl|>
<|nl|>
<|nl|> <|2-t|> Set < String > <|s|> set = <|s|> new <|s|> Hash Set < > ( Arrays . as List ( inactive Test Bundles ) ); <|nl|>
<|del|> <|nl|>
<|4-t|> <|4-t|> : <|s|> UNDEFINED _ UPDATE _ INDEX ); <|nl|>
<|8-s|> if <|s|> ( tip Shell != <|s|> null ) <|s|> { <|nl|>
<|8-s|> if <|s|> ( tip Shell != <|s|> null ) <|s|> { <|nl|>
<|2-t|> for <|s|> ( String <|s|> category <|s|> : <|s|> categories ) <|s|> { <|nl|> <|3-t|> buf . append ( category ); <|nl|>
<|3-t|> if <|s|> ( constructor Binding <|s|> != <|s|> null ) <|s|> { <|nl|> <|4-t|> IMethod <|s|> method <|s|> = <|s|> resolve Method Binding ( constructor Binding ); <|nl|> <|4-t|> collect Parameter Names Code Minings ( method , <|s|> arguments , <|s|> constructor Binding . is Varargs ( ) ); <|nl|> <|3-t|> } <|nl|>
<|3-t|> if <|s|> ( method Binding <|s|> != <|s|> null ) <|s|> { <|nl|> <|4-t|> IMethod <|s|> method <|s|> = <|s|> resolve Method Binding ( method Binding ); <|nl|> <|4-t|> collect Parameter Names Code Minings ( method , <|s|> arguments , <|s|> method Binding . is Varargs ( ) ); <|nl|> <|3-t|> } <|nl|>
<|s|> * <|s|> Represents <|s|> a <|s|> replacement <|s|> between <|s|> timestamps . <|s|> <|nl|> <|s|> * <|s|> Either <|s|> the <|s|> old <|s|> or <|s|> the <|s|> new <|s|> timestamp <|s|> can <|s|> be <|s|> null , <|s|> but <|s|> not <|s|> at <|s|> the <|s|> same <|s|> time . <|s|> <|nl|>
<|s|> * <|s|> Represents <|s|> a <|s|> replacement <|s|> between <|s|> timestamps . <|s|> <|nl|> <|s|> * <|s|> Either <|s|> the <|s|> old <|s|> or <|s|> the <|s|> new <|s|> timestamp <|s|> can <|s|> be <|s|> null , <|s|> but <|s|> not <|s|> at <|s|> the <|s|> same <|s|> time . <|s|> <|nl|>
<|s|> * <|4-s|> Vincent <|s|> Lorenzo <|s|> ( CEA <|s|> LIST ) <|s|> vincent . lorenzo @ cea . fr <|s|> - <|s|> Initial <|s|> API <|s|> and <|s|> implementation <|nl|>
<|s|> * <|s|> Utility <|s|> class <|s|> for <|s|> the <|s|> operations <|s|> of <|s|> Generator Configuration <|s|> metamodel <|nl|>
<|4-t|> Activator . log . warn ( NLS . bind ( " The <|s|> path <|s|> { 0 } <|s|> must <|s|> not <|s|> be <|s|> a <|s|> platform <|s|> path " , <|s|> uri . to String ( ) ) ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|4-t|> Activator . log . warn ( NLS . bind ( " The <|s|> path <|s|> { 0 } <|s|> must <|s|> not <|s|> be <|s|> a <|s|> platform <|s|> path " , <|s|> uri . to String ( ) ) ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|8-s|> SWTBot Preferences . TIMEOUT <|s|> = <|s|> 50000 ; <|s|> /* <|s|> 50 <|s|> second <|s|> timeout <|s|> */ <|nl|>
<|4-t|> // <|s|> do <|s|> nothing <|nl|>
<|4-t|> . sorted ( ( b 1 , <|s|> b 2 ) <|s|> -> <|s|> b 2 . get Version ( ) . compare To ( b 1 . get Version ( ) ) ) <|s|> // <|s|> highest <|s|> version <|s|> first <|nl|>
<|3-t|> if <|s|> ( num Cols <|s|> > <|s|> 0 ) <|s|> { <|nl|>
<|t|> <|s|> * <|s|> @ param <|s|> in Called Context <|s|> { @ code <|s|> true } <|s|> if <|s|> the <|s|> evaluation <|s|> is <|s|> the <|s|> target <|s|> of <|s|> a <|s|> function <|s|> call <|nl|>
<|2-t|> return <|s|> true ; <|nl|>
<|2-t|> return <|s|> f Positive . is Noexcept ( in Called Context ) <|s|> && <|s|> f Negative . is Noexcept ( in Called Context ); <|nl|>
<|2-t|> // <|2-t|> assert <|s|> false ; <|s|> // <|s|> TODO <|s|> this <|s|> assert <|s|> is <|s|> hit <|nl|>
<|2-t|> assert <|s|> false ; <|nl|> <|2-t|> return <|s|> true ; <|nl|>
<|2-t|> return <|s|> true ; <|nl|>
<|2-t|> assert <|s|> false ; <|nl|> <|2-t|> return <|s|> true ; <|nl|>
<|12-s|> } <|nl|> <|8-s|> } <|s|> else <|s|> if ( <|s|> list <|s|> instanceof <|s|> Sparse List ) <|s|> { <|nl|> <|12-s|> Sparse List <|s|> sparse List <|s|> = <|s|> ( Sparse List ) <|s|> list ; <|nl|> <|12-s|> sparse List . ensure Size ( index ); <|nl|>
<|12-s|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> events . size ( ); <|s|> i ++ ) <|s|> { <|nl|>
<|16-s|> f Inner Events . put ( f Size , <|s|> e ); <|nl|> <|16-s|> f Size ++ ; <|nl|>
<|12-s|> for <|s|> ( IEvent Declaration <|s|> event <|s|> : <|s|> c ) <|s|> { <|nl|> <|16-s|> if <|s|> ( event != <|s|> null ) <|s|> { <|nl|>
<|12-s|> if <|s|> ( index <|s|> > <|s|> f Size ) <|s|> { <|nl|> <|16-s|> f Size <|s|> = <|s|> index ; <|nl|>
<|t|> static <|s|> final <|s|> int <|s|> IDI _ CANCEL <|s|> = <|s|> 102 ; <|nl|>
<|del|> <|nl|>
<|s|> * <|s|> Copyright <|s|> ( c ) <|s|> 2017 , <|s|> 2019 <|s|> Ericsson <|nl|>
<|12-s|> if <|s|> ( ! f Tip Shell . is Disposed ( ) ) <|s|> { <|nl|>
<|2-t|> if <|s|> ( ! result <|s|> || <|s|> f Encapsulate Declaring Class ) <|nl|>
<|del|> <|nl|>
<|2-t|> arguments . put ( ATTRIBUTE _ VISIBILITY , <|s|> Integer . value Of ( f Visibility ) . to String ( ) ); <|nl|>
<|4-t|> Default Code Formatter Constants . NEXT _ LINE ); <|nl|> <|2-t|> assert Formatter Result ( ); <|nl|>
<|s|> * <|s|> Copyright <|s|> ( c ) <|s|> 2015 , <|s|> 2019 <|s|> Obeo . <|nl|>
<|4-s|> <|s|> * <|s|> @ param <|s|> source <|nl|> <|4-s|> <|s|> * <|12-s|> Semantic <|s|> element <|s|> corresponding <|s|> to <|s|> the <|s|> source <|s|> of <|s|> the <|s|> reference <|nl|>
<|4-s|> } <|nl|> <|nl|>
<|8-s|> // <|s|> Check <|s|> that <|s|> the <|s|> original <|s|> edge <|s|> is <|s|> no <|s|> longer <|s|> visible <|s|> but <|s|> is <|s|> always <|s|> here <|nl|>
<|8-s|> bot . wait Until ( new <|s|> Default Condition ( ) <|s|> { <|nl|>
<|3-t|> if <|s|> ( ! name . equals ( src Name ) ) <|nl|> <|4-t|> throw <|s|> new <|s|> Repository Not Found Exception ( name ); <|nl|> <|nl|> <|3-t|> final <|s|> Repository <|s|> db <|s|> = <|s|> src . get Repository ( ); <|nl|> <|3-t|> db . increment Open ( ); <|nl|> <|3-t|> return <|s|> db ; <|nl|> <|2-t|> } ); <|nl|>
<|3-t|> if <|s|> ( ! name . equals ( src Name ) ) <|nl|> <|4-t|> throw <|s|> new <|s|> Repository Not Found Exception ( name ); <|nl|> <|nl|> <|3-t|> final <|s|> Repository <|s|> db <|s|> = <|s|> src . get Repository ( ); <|nl|> <|3-t|> db . increment Open ( ); <|nl|> <|3-t|> return <|s|> db ; <|nl|> <|2-t|> } ); <|nl|>
<|2-t|> Collections . sort ( entries , <|s|> ( Mutable Entry <|s|> o 1 , <|s|> Mutable Entry <|s|> o 2 ) <|s|> -> <|s|> Long <|nl|> <|4-t|> . signum ( o 1 . get Offset ( ) <|s|> - <|s|> o 2 . get Offset ( ) ) ); <|nl|>
<|2-t|> if <|s|> ( result <|s|> != <|s|> null ) <|s|> { <|nl|> <|3-t|> return <|s|> result . stream ( ) . find First ( ); <|nl|>
<|2-t|> result <|s|> = <|s|> new User Selection ; <|nl|>
<|del|> <|nl|>
<|t|> private <|s|> Collection < T > <|s|> result ; <|nl|>
<|t|> public <|s|> Optional < T > <|s|> get First Result ( ) <|s|> { <|nl|>
<|3-t|> result <|s|> = <|s|> null ; <|nl|>
<|3-t|> result <|s|> = <|s|> null ; <|nl|>
<|del|> <|nl|>
<|2-t|> // <|s|> Make <|s|> sure <|s|> that <|s|> timestamps <|s|> are <|s|> modified <|s|> and <|s|> read <|s|> so <|s|> that <|s|> a <|s|> full <|nl|>
<|8-s|> try <|s|> ( Ctf Iterator <|s|> funky <|s|> = <|s|> ( Ctf Iterator ) <|s|> trace . create Iterator ( ) ) <|s|> { <|nl|>
<|8-s|> try <|s|> ( Ctf Iterator <|s|> iter <|s|> = <|s|> ( Ctf Iterator ) <|s|> f Trace . create Iterator ( ); ) <|s|> { <|nl|>
<|8-s|> try <|s|> ( Ctf Iterator <|s|> iter 1 <|s|> = <|s|> ( Ctf Iterator ) <|s|> f Trace . create Iterator ( ); <|s|> Ctf Iterator <|s|> iter 2 <|s|> = <|s|> ( Ctf Iterator ) <|s|> f Trace . create Iterator ( ) ) <|s|> { <|nl|>
<|12-s|> long <|s|> time <|s|> = <|s|> Objects . require Non Null ( current Event ) . get Timestamp ( ) . get Value ( ); <|nl|> <|12-s|> f Cur Location <|s|> = <|s|> new <|s|> Ctf Location ( new <|s|> Ctf Location Info ( time , <|s|> time <|s|> != <|s|> seek To Timestamp <|s|> ? <|s|> 0 <|s|> : <|s|> index ) ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|2-t|> return <|s|> Arrays . as List ( Boolean . TRUE , <|s|> Boolean . FALSE ); <|nl|>
<|2-t|> Test Repository < File Repository > <|s|> test Repository <|s|> = <|s|> new <|s|> Test Repository < File Repository > ( repository ); <|nl|>
<|4-t|> Config Constants . CONFIG _ KEY _ TRUSTFOLDERSTAT , <|nl|> <|4-t|> trust Folder Stats . boolean Value ( ) ); <|nl|>
<|2-t|> String <|s|> directly Connected Elements <|s|> = <|s|> provider . get Diagram Text ( selection ); <|nl|> <|2-t|> assert True ( directly Connected Elements . equals ( EXPECTED _ TEXT _ FOR _ INTERNAL _ LINKS ) ); <|nl|>
<|12-s|> assert Equals ( " sched _ switch " , <|s|> event . get Name ( ) ); <|nl|> <|12-s|> assert Equals ( duplicate Location Indexed One , <|s|> iterator . get Location ( ) . get Location Info ( ) ); <|nl|>
<|12-s|> Ctf Location Info <|s|> duplicate Location Out Of Bounds <|s|> = <|s|> new <|s|> Ctf Location Info ( 1331668247 3289219 44 L , <|s|> 4 L ); <|nl|> <|12-s|> assert True ( iterator . seek ( duplicate Location Out Of Bounds ) ); <|nl|> <|12-s|> event <|s|> = <|s|> get Current Event ( iterator ); <|nl|> <|12-s|> assert Not Null ( event ); <|nl|> <|12-s|> assert Equals ( 1331668247 3289253 63 L , <|s|> get Timestamp In Nanos ( event ) ); <|nl|>
<|8-s|> long <|s|> offset <|s|> = <|s|> ctf Location Data . get Index ( ); <|nl|> <|8-s|> while <|s|> ( current Event <|s|> != <|s|> null <|s|> && <|s|> index <|s|> < <|s|> offset ) <|s|> { <|nl|>
<|12-s|> long <|s|> time <|s|> = <|s|> Objects . require Non Null ( current Event ) . get Timestamp ( ) . get Value ( ); <|nl|> <|12-s|> f Cur Location <|s|> = <|s|> new <|s|> Ctf Location ( new <|s|> Ctf Location Info ( time , <|s|> time <|s|> != <|s|> seek To Timestamp <|s|> ? <|s|> 0 <|s|> : <|s|> index ) ); <|nl|>
<|2-t|> return <|s|> true ; <|nl|>
<|2-t|> filter . do Filter ( req , <|s|> res , <|nl|> <|4-t|> ( Servlet Request <|s|> request , <|s|> Servlet Response <|s|> response ) <|s|> -> <|s|> { <|nl|> <|4-t|> <|t|> ( ( Http Servlet Response ) <|s|> response ) . send Error ( SC _ NOT _ FOUND ); <|nl|> <|4-t|> } ); <|nl|>
<|4-s|> <|s|> * <|s|> @ param <|s|> left <|nl|> <|4-s|> <|s|> * <|12-s|> true <|s|> to <|s|> scroll <|s|> left <|s|> else <|s|> false <|nl|>
public <|s|> interface <|s|> ITmf Zoom To Selection Provider <|s|> { <|nl|> <|nl|> <|4-s|> /* * <|nl|> <|4-s|> <|s|> * <|s|> Zoom <|s|> to <|s|> selection <|nl|> <|4-s|> <|s|> */ <|nl|> <|4-s|> void <|s|> zoom To Selection ( ); <|nl|>
<|s|> * <|s|> Base <|s|> handler , <|s|> makes <|s|> sure <|s|> we <|s|> have <|s|> a <|s|> TMF <|s|> view <|s|> control <|s|> selected . <|nl|>
<|4-s|> public <|s|> abstract <|s|> void <|s|> execute ( Tmf View <|s|> view ); <|nl|>
public <|s|> class <|s|> Tmf View Zoom In Handler <|s|> extends <|s|> Tmf View Base Handler <|s|> { <|nl|> <|4-s|> <|nl|>
<|4-s|> private <|s|> static <|s|> final <|s|> String <|s|> DATA _ UNIT _ DIR <|s|> = <|s|> " / data / unit / selection / " ; <|nl|>
<|8-s|> // <|s|> Trace <|s|> 2 <|s|> has <|s|> duplicate <|s|> time <|s|> stamps <|nl|>
<|12-s|> Ctf Location Info <|s|> middle Location Index One <|s|> = <|s|> new <|s|> Ctf Location Info ( 1331668250 3285610 95 L , <|s|> 1 L ); <|nl|> <|12-s|> assert True ( iterator . seek ( middle Location Index One ) ); <|nl|> <|12-s|> event <|s|> = <|s|> iterator . get Current Event ( ); <|nl|>
<|12-s|> assert Equals ( 1331668250 3285617 61 L , <|s|> iterator . get Current Timestamp ( ) ); <|nl|> <|12-s|> // <|s|> next <|s|> event <|s|> location <|nl|>
<|12-s|> Ctf Location Info <|s|> duplicate Location Index Huge <|s|> = <|s|> new <|s|> Ctf Location Info ( 1331668247 3289219 44 L , <|s|> 9001000000 L ); <|nl|> <|12-s|> assert True ( iterator . seek ( duplicate Location Index Huge ) ); <|nl|> <|12-s|> event <|s|> = <|s|> iterator . get Current Event ( ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|s|> * <|s|> Copyright <|s|> ( c ) <|s|> 2010 , <|s|> 2019 <|s|> THALES <|s|> GLOBAL <|s|> SERVICES <|nl|>
<|s|> * <|s|> Copyright <|s|> ( c ) <|s|> 2012 , <|s|> 2019 <|s|> THALES <|s|> GLOBAL <|s|> SERVICES <|nl|>
<|s|> * <|s|> Copyright <|s|> ( c ) <|s|> 2017 , <|s|> 2019 <|s|> THALES <|s|> GLOBAL <|s|> SERVICES . <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> assert Equals ( 3 , <|s|> iterator . previous Index ( ) ); <|nl|> <|8-s|> assert Equals ( 4 , <|s|> iterator . next Index ( ) ); <|nl|>
<|s|> * <|s|> Sparse <|s|> list , <|s|> a <|s|> list <|s|> optimized <|s|> for <|s|> when <|s|> most <|s|> ( > <|s|> 90 % ) <|s|> of <|s|> the <|s|> data <|s|> is <|nl|> <|s|> * <|s|> < code > null </ code > . <|nl|> <|s|> * <|nl|> <|s|> * <|s|> Note : <|s|> this <|s|> iterates <|s|> in <|s|> the <|s|> sorted <|s|> order . <|nl|> <|s|> * <|nl|> <|s|> * <|s|> This <|s|> implementation <|s|> supports : <|nl|>
<|t|> private <|s|> int <|s|> get Threshold ( ) <|s|> { <|nl|>
<|del|> <|nl|>
<|s|> * <|s|> Sparse <|s|> list , <|s|> a <|s|> list <|s|> optimized <|s|> for <|s|> when <|s|> most <|s|> of <|s|> the <|s|> data <|s|> is <|s|> < code > null </ code > . <|nl|> <|s|> * <|s|> Nulls <|s|> will <|s|> increment <|s|> the <|s|> size <|s|> of <|s|> the <|s|> datastructure <|s|> but <|s|> not <|s|> stored <|s|> as <|s|> null <|nl|> <|s|> * <|s|> means <|s|> the <|s|> data <|s|> is <|s|> not <|s|> present . <|nl|>
<|s|> * <|s|> TODO : <|s|> Keep <|s|> an <|s|> eye <|s|> out <|s|> for <|s|> a <|s|> better <|s|> datastructure ... <|s|> this <|s|> is <|s|> fine , <|s|> but <|s|> if <|s|> it <|nl|> <|s|> * <|s|> can <|s|> be <|s|> replaced <|s|> by <|s|> an <|s|> externally <|s|> maintained <|s|> datastructure , <|s|> that <|s|> would <|s|> be <|nl|> <|s|> * <|s|> better . <|nl|>
<|4-s|> private <|s|> final <|s|> Map < Integer , <|s|> E > <|s|> f Inner Elements <|s|> = <|s|> new <|s|> Hash Map < > ( ); <|nl|>
<|8-s|> return <|s|> f Inner Elements . contains Value ( o ); <|nl|>
<|8-s|> if <|s|> ( e <|s|> != <|s|> null ) <|s|> { <|nl|> <|12-s|> f Inner Elements . put ( f Size , <|s|> e ); <|nl|>
<|8-s|> return <|s|> f Inner Elements . values ( ) . contains All ( c ); <|nl|>
<|12-s|> set ( key , <|s|> event ); <|nl|>
<|12-s|> set ( key , <|s|> event ); <|nl|>
<|4-s|> <|s|> * <|s|> Returns <|s|> null <|s|> if <|s|> there <|s|> is <|s|> no <|s|> element <|s|> found <|s|> at <|s|> that <|s|> index . <|nl|>
<|8-s|> return <|s|> f List . get ( f Cursor ); <|nl|>
<|8-s|> return <|s|> f Cursor <|s|> + <|s|> 1 ; <|nl|>
<|t|> public <|s|> void <|s|> test Noexcept Operator Functions _ 545021 ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|> <|2-t|> parse And Check Bindings ( ); <|nl|>
<|del|> <|nl|>
<|t|> // <|2-s|> constexpr <|s|> bool <|s|> noexcept _ unaryop _ is _ noexcept <|s|> = <|s|> noexcept ( ! t 2 ); <|nl|> <|t|> public <|s|> void <|s|> test Noexcept Operator Overloaded Operators _ 545021 ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|> <|2-t|> parse And Check Bindings ( ); <|nl|>
<|t|> public <|s|> CPPFunction Type ( IType <|s|> return Type , <|s|> IType [ ] <|s|> types , <|s|> ICPPEvaluation <|s|> noexcept Specifier ) <|s|> { <|nl|> <|2-t|> this ( return Type , <|s|> types , <|s|> noexcept Specifier , <|s|> false , <|s|> false , <|s|> false , <|s|> false , <|s|> false ); <|nl|>
<|3-t|> if <|s|> ( ! Eval Util . evaluate Noexcept Specifier ( overload . get Type ( ) . get Noexcept Specifier ( ) ) ) <|nl|> <|4-t|> return <|s|> false ; <|nl|>
<|2-t|> return <|s|> f Condition . is Noexcept ( in Called Context ) <|s|> && <|s|> f Positive . is Noexcept ( in Called Context ) <|nl|> <|4-t|> && <|s|> f Negative . is Noexcept ( in Called Context ); <|nl|>
<|del|> <|nl|>
<|2-t|> assert <|s|> false ; <|s|> // <|s|> Shouldn ' t <|s|> exist <|s|> outside <|s|> of <|s|> a <|s|> dependent <|s|> context <|nl|>
<|2-t|> assert <|s|> false ; <|s|> // <|s|> Shouldn ' t <|s|> exist <|s|> outside <|s|> of <|s|> a <|s|> dependent <|s|> context <|nl|>
<|t|> public <|s|> boolean <|s|> is Noexcept ( boolean <|s|> in Called Context ) <|s|> { <|nl|> <|2-t|> if <|s|> ( ! f Owner Eval . is Noexcept ( in Called Context ) ) <|nl|> <|3-t|> return <|s|> false ; <|nl|>
<|2-t|> assert <|s|> false ; <|s|> // <|s|> Shouldn ' t <|s|> exist <|s|> outside <|s|> of <|s|> a <|s|> dependent <|s|> context <|nl|>
<|3-t|> if <|s|> ( ! Eval Util . evaluate Noexcept Specifier ( overload . get Type ( ) . get Noexcept Specifier ( ) ) ) <|nl|> <|4-t|> return <|s|> false ; <|nl|>
<|8-s|> List < String > <|s|> reference <|s|> = <|s|> Arrays . as List ( " Pomme " , <|s|> " Peche " , <|s|> " Poire " , <|s|> null , <|s|> " Banane " ); <|nl|>
<|8-s|> assert Equals ( " yo " , <|s|> iterator . previous ( ) ); <|nl|> <|8-s|> assert Equals ( " Hola " , <|s|> iterator . previous ( ) ); <|nl|>
<|s|> * <|s|> Nulls <|s|> will <|s|> increment <|s|> the <|s|> size <|s|> of <|s|> the <|s|> Sparse List <|s|> but <|s|> they <|s|> are <|s|> not <|s|> stored <|nl|> <|s|> * <|s|> internally . <|nl|> <|s|> * <|s|> </ p > <|nl|> <|s|> * <|s|> < p > <|nl|> <|s|> * <|s|> Note : <|s|> this <|s|> iterates <|s|> in <|s|> the <|s|> list <|s|> order . <|nl|> <|s|> * <|s|> </ p > <|nl|>
<|s|> * <|s|> Nulls <|s|> will <|s|> increment <|s|> the <|s|> size <|s|> of <|s|> the <|s|> Sparse List <|s|> but <|s|> they <|s|> are <|s|> not <|s|> stored <|nl|> <|s|> * <|s|> internally . <|nl|> <|s|> * <|s|> </ p > <|nl|> <|s|> * <|s|> < p > <|nl|> <|s|> * <|s|> Note : <|s|> this <|s|> iterates <|s|> in <|s|> the <|s|> list <|s|> order . <|nl|> <|s|> * <|s|> </ p > <|nl|>
<|4-s|> /* * <|nl|> <|4-s|> <|s|> * <|s|> A <|s|> backing <|s|> map <|s|> used <|s|> to <|s|> store <|s|> the <|s|> non - null <|s|> elements <|nl|> <|4-s|> <|s|> */ <|nl|> <|4-s|> private <|s|> final <|s|> Map < Integer , <|s|> @ Non Null <|s|> E > <|s|> f Inner Elements <|s|> = <|s|> new <|s|> Hash Map < > ( ); <|nl|> <|4-s|> /* * <|nl|> <|4-s|> <|s|> * <|s|> The <|s|> list <|s|> size : <|s|> map <|s|> size <|s|> + <|s|> number <|s|> of <|s|> nulls <|nl|> <|4-s|> <|s|> */ <|nl|>
<|8-s|> return <|s|> f Size <|s|> == <|s|> 0 ; <|nl|>
<|8-s|> return <|s|> ( o <|s|> == <|s|> null <|s|> && <|s|> size ( ) <|s|> > <|s|> f Inner Elements . size ( ) ) <|s|> || <|s|> f Inner Elements . contains Value ( o ); <|nl|>
<|del|> <|nl|>
<|4-s|> public <|s|> int <|s|> index Of ( Object <|s|> o ) <|s|> { <|nl|> <|8-s|> if <|s|> ( o <|s|> == <|s|> null <|s|> && <|s|> contains ( null ) ) <|s|> { <|nl|> <|12-s|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> size ( ); <|s|> i ++ ) <|s|> { <|nl|> <|16-s|> if <|s|> ( ! f Inner Elements . contains Key ( i ) ) <|s|> { <|nl|> <|16-s|> <|4-s|> return <|s|> i ; <|nl|> <|16-s|> } <|nl|> <|12-s|> } <|nl|> <|8-s|> } <|nl|>
<|8-s|> int <|s|> last <|s|> = <|s|> - 1 ; <|nl|> <|8-s|> if <|s|> ( o <|s|> == <|s|> null <|s|> && <|s|> contains ( null ) ) <|s|> { <|nl|> <|12-s|> for <|s|> ( int <|s|> i <|s|> = <|s|> size ( ) <|s|> - 1 ; <|s|> i <|s|> >= <|s|> 0 ; <|s|> i -- ) <|s|> { <|nl|> <|16-s|> if <|s|> ( ! f Inner Elements . contains Key ( i ) ) <|s|> { <|nl|> <|16-s|> <|4-s|> return <|s|> i ; <|nl|> <|16-s|> } <|nl|> <|12-s|> } <|nl|> <|8-s|> } <|nl|>
<|2-t|> persp Switcher Toolbar . request Layout ( ); <|nl|>
<|8-s|> f Model <|s|> = <|s|> model ; <|nl|> <|8-s|> f Start Time <|s|> = <|s|> model . get Start Time ( ); <|nl|> <|8-s|> f End Time <|s|> = <|s|> model . get End Time ( ); <|nl|>
<|8-s|> if <|s|> ( obj <|s|> instanceof <|s|> Time Line Event ) <|s|> { <|nl|>
<|3-t|> if <|s|> ( get Type ( ) <|s|> == <|s|> PROJECT ) <|s|> { <|nl|> <|4-t|> // <|s|> project <|s|> entry <|s|> always <|s|> has <|s|> workspace <|s|> relative <|s|> path <|nl|> <|4-t|> return <|s|> root . find Member ( path ); <|nl|>
<|del|> <|nl|>
<|8-s|> assert Equals ( " Hola " , <|s|> iterator . next ( ) ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> return <|s|> next Index ( ) <|s|> < <|s|> f List . size ( ); <|nl|>
<|8-s|> return <|s|> previous Index ( ) <|s|> >= <|s|> 0 ; <|nl|>
<|8-s|> return <|s|> o <|s|> == <|s|> null <|s|> ? <|s|> size ( ) <|s|> > <|s|> f Inner Elements . size ( ) <|s|> : <|s|> f Inner Elements . contains Value ( o ); <|nl|>
<|12-s|> return Array [ i ] <|s|> = <|s|> ( T ) <|s|> next ; <|nl|>
<|16-s|> first <|s|> = <|s|> Math . min ( entry . get Key ( ) , <|s|> first ); <|nl|>
<|8-s|> return <|s|> Spliterators . spliterator ( iterator ( ) , <|s|> f Size , <|s|> Spliterator . ORDERED ); <|nl|>
<|8-s|> return <|s|> new <|s|> Generic Read Only List Iterator < > ( this , <|s|> index ); <|nl|>
<|8-s|> throw <|s|> new <|s|> Unsupported Operation Exception ( " No <|s|> add ( int , <|s|> E ) <|s|> in <|s|> " <|s|> + <|s|> this . get Class ( ) . get Name ( ) ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|8-s|> throw <|s|> new <|s|> Unsupported Operation Exception ( " No <|s|> delete ( int ) <|s|> in <|s|> " <|s|> + <|s|> this . get Class ( ) . get Name ( ) ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|8-s|> throw <|s|> new <|s|> Unsupported Operation Exception ( " No <|s|> remove ( Object ) <|s|> in <|s|> " <|s|> + <|s|> this . get Class ( ) . get Name ( ) ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|8-s|> throw <|s|> new <|s|> Unsupported Operation Exception ( " No <|s|> add All ( int , <|s|> Collection < ? <|s|> extends <|s|> E > ) <|s|> in <|s|> " <|s|> + <|s|> this . get Class ( ) . get Name ( ) ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|8-s|> throw <|s|> new <|s|> Unsupported Operation Exception ( " No <|s|> sub List ( int , <|s|> int ) <|s|> in <|s|> " <|s|> + <|s|> this . get Class ( ) . get Name ( ) ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|s|> * <|s|> Copyright <|s|> ( c ) <|s|> 2019 <|s|> vogella <|s|> Gmb H <|s|> and <|s|> others . <|nl|>
<|del|> <|nl|>
<|2-t|> <|s|> * <|s|> This <|s|> is <|s|> invoked <|s|> just <|s|> before <|s|> starting <|s|> to <|s|> walk <|s|> looking <|s|> for <|s|> the <|s|> closes <|nl|> <|2-t|> <|s|> * <|s|> bitmap . <|s|> Can <|s|> be <|s|> used <|s|> to <|s|> tune <|s|> the <|s|> walker <|s|> configuration . <|nl|>
<|3-t|> throws <|s|> Missing Object Exception , <|s|> Incorrect Object Type Exception , <|nl|> <|3-t|> <|4-s|> <|2-s|> <|s|> IOException <|s|> { <|nl|>
<|2-t|> IConcurrent Model Listener [ ] <|s|> listeners <|s|> = <|s|> get Listeners ( ); <|nl|> <|2-t|> for <|s|> ( IConcurrent Model Listener <|s|> listener <|s|> : <|s|> listeners ) <|s|> { <|nl|>
<|4-t|> <|t|> // <|s|> We <|s|> don ' t <|s|> record <|s|> the <|s|> copy <|s|> since <|s|> this <|s|> recursive <|s|> call <|s|> will <|nl|> <|4-t|> <|t|> // <|s|> do <|s|> so . <|s|> Just <|s|> record <|s|> the <|s|> overwrites . <|nl|> <|4-t|> <|t|> overwritten Resources . add All ( Arrays . as List ( overwritten ) ); <|nl|>
<|4-t|> <|3-t|> result . add All ( Arrays . as List ( resources ) ); <|nl|>
<|3-t|> resource Set . add All ( Arrays . as List ( selected Resources ) ); <|nl|>
<|8-s|> <|s|> * <|s|> Display <|s|> XY <|s|> lines <|s|> for <|s|> this <|s|> entry , <|s|> ie <|s|> one <|s|> or <|s|> more <|s|> continuous <|s|> lines <|s|> that <|s|> change <|nl|>
<|12-s|> throw <|s|> new <|s|> Illegal Argument Exception ( " Needs <|s|> to <|s|> be <|s|> a <|s|> Time Line Event " ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|12-s|> throw <|s|> new <|s|> Illegal Argument Exception ( " Needs <|s|> to <|s|> be <|s|> a <|s|> Time Line Event " ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|4-s|> public <|s|> Time Line Event ( ITime Graph Entry <|s|> entry , <|s|> long <|s|> time ) <|s|> { <|nl|> <|8-s|> this ( entry , <|s|> time , <|s|> new <|s|> Array List < > ( ) ); <|nl|>
<|4-s|> public <|s|> Time Line Event ( ITime Graph Entry <|s|> entry , <|s|> long <|s|> time , <|s|> List < Long > <|s|> values ) <|s|> { <|nl|> <|8-s|> super ( entry , <|s|> time , <|s|> 0 ); <|nl|>
<|8-s|> if <|s|> ( ! super . equals ( obj ) ) <|s|> { <|nl|>
<|8-s|> if <|s|> ( obj <|s|> instanceof <|s|> Time Line Event ) <|s|> { <|nl|>
<|16-s|> . append ( ' ] ' ) . to String ( ); <|nl|>
<|8-s|> List < List < Long Point >> <|s|> series Model <|s|> = <|s|> new <|s|> Array List < > ( ); <|nl|>
<|8-s|> List < List < Long Point >> <|s|> series Model <|s|> = <|s|> new <|s|> Array List < > ( ); <|nl|>
<|8-s|> int <|s|> nb Series <|s|> = <|s|> - 1 ; <|nl|>
<|12-s|> if <|s|> ( x <|s|> >= <|s|> rect . x <|s|> + <|s|> rect . width ) <|s|> { <|nl|>
<|12-s|> List < Long > <|s|> values <|s|> = <|s|> time Event . get Values ( ); <|nl|> <|12-s|> if <|s|> ( nb Series <|s|> == <|s|> - 1 ) <|s|> { <|nl|> <|16-s|> nb Series <|s|> = <|s|> values . size ( ); <|nl|> <|12-s|> } <|nl|>
<|12-s|> List < Long > <|s|> values <|s|> = <|s|> time Event . get Values ( ); <|nl|> <|12-s|> if <|s|> ( nb Series <|s|> == <|s|> - 1 ) <|s|> { <|nl|> <|16-s|> nb Series <|s|> = <|s|> values . size ( ); <|nl|> <|12-s|> } <|nl|>
<|16-s|> series Model . get ( i ) . add ( new <|s|> Long Point ( x , <|s|> val ) ); <|nl|>
<|16-s|> series Model . get ( i ) . add ( new <|s|> Long Point ( x , <|s|> val ) ); <|nl|>
<|8-s|> for <|s|> ( Time Line Event <|s|> ref <|s|> : <|s|> refs ) <|s|> { <|nl|> <|12-s|> Map < String , <|s|> Object > <|s|> event Style <|s|> = <|s|> time Graph Provider . get Event Style ( ref ); <|nl|>
<|8-s|> for <|s|> ( Time Line Event <|s|> ref <|s|> : <|s|> refs ) <|s|> { <|nl|> <|12-s|> Map < String , <|s|> Object > <|s|> event Style <|s|> = <|s|> time Graph Provider . get Event Style ( ref ); <|nl|>
<|8-s|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> series Model . size ( ); <|s|> i ++ ) <|s|> { <|nl|>
<|s|> * <|s|> Copyright <|s|> ( c ) <|s|> 2000 , <|s|> 2019 <|s|> IBM <|s|> Corporation <|s|> and <|s|> others . <|nl|>
<|3-t|> // <|s|> Accumulate <|s|> the <|s|> overwrites <|s|> into <|s|> the <|s|> full <|s|> list <|nl|> <|3-t|> overwritten Resources . add All ( Arrays . as List ( overwrites ) ); <|nl|>
<|3-t|> // <|s|> Accumulate <|s|> the <|s|> overwrites <|s|> into <|s|> the <|s|> full <|s|> list <|nl|> <|3-t|> overwritten Resources . add All ( Arrays . as List ( overwrites ) ); <|nl|>
<|4-t|> <|t|> // <|s|> We <|s|> don ' t <|s|> record <|s|> the <|s|> copy <|s|> since <|s|> this <|s|> recursive <|s|> call <|s|> will <|nl|> <|4-t|> <|t|> // <|s|> do <|s|> so . <|s|> Just <|s|> record <|s|> the <|s|> overwrites . <|nl|> <|4-t|> <|t|> overwritten Resources . add All ( Arrays . as List ( overwritten ) ); <|nl|>
<|4-t|> <|t|> // <|s|> We <|s|> don ' t <|s|> record <|s|> the <|s|> moved <|s|> resources <|s|> since <|s|> the <|s|> recursive <|nl|> <|4-t|> <|t|> // <|s|> call <|s|> has <|s|> done <|s|> so . <|s|> Just <|s|> record <|s|> the <|s|> overwrites . <|nl|> <|4-t|> <|t|> overwritten Resources . add All ( Arrays . as List ( overwritten ) ); <|nl|>
<|4-t|> <|3-t|> result . add All ( Arrays . as List ( resources ) ); <|nl|>
<|4-t|> <|4-t|> resolutions . add All ( Arrays . as List ( res ) ); <|nl|>
<|4-t|> <|2-t|> System . arraycopy ( temp File Names , <|s|> 0 , <|s|> file Names , <|s|> 0 , <|s|> actual Length ); <|nl|>
<|2-t|> super . add All ( Arrays . as List ( elements ) ); <|nl|>
<|4-t|> non Ui Visible . add All ( Arrays . as List ( filter Ids To Activate ) ); <|nl|>
<|4-t|> <|t|> input Array . add All ( Arrays . as List ( wizard Categories . get Categories ( ) ) ); <|nl|>
<|4-t|> input Array . add All ( Arrays . as List ( wizard Categories . get Categories ( ) ) ); <|nl|>
<|3-t|> queued Events . add All ( Arrays . as List ( pref Ids ) ); <|nl|>
<|3-t|> kids . add All ( Arrays . as List ( children ) ); <|nl|>
<|2-t|> System . arraycopy ( all Elements , <|s|> 0 , <|s|> current Elements , <|s|> 0 , <|s|> current Elements . length ); <|nl|>
<|3-t|> System . arraycopy ( members , <|s|> 0 , <|s|> new Members , <|s|> 0 , <|s|> members . length ); <|nl|>
<|2-s|> protected <|s|> Leased Smtp Connection <|s|> with Connection Pool ( Smtp Connection Pool <|s|> connection Pool ) <|s|> { <|nl|> <|4-s|> m _ connection Pool <|s|> = <|s|> connection Pool ; <|nl|>
<|2-s|> } <|nl|> <|nl|> <|2-s|> public <|s|> boolean <|s|> is Closed ( ) <|s|> { <|nl|> <|4-s|> return <|s|> m _ closed ; <|nl|> <|2-s|> } <|nl|>
<|2-s|> protected <|s|> static <|s|> final <|s|> String <|s|> JOB _ NAME _ CLOSE _ IDLE _ CONNECTIONS <|s|> = <|s|> " smtp - close - idle - connections " ; <|nl|>
<|4-s|> <|2-s|> Stream . of ( m _ idle Entries , <|s|> m _ leased Entries ) <|nl|> <|8-s|> <|2-s|> . flat Map ( Collection :: stream ) <|nl|> <|8-s|> <|2-s|> . for Each ( this :: safe Close Transport ); <|nl|>
<|2-s|> private <|s|> Transport <|s|> m _ transport ; <|nl|> <|2-s|> // <|s|> creation <|s|> time <|s|> of <|s|> this <|s|> pool <|s|> entry <|s|> object <|s|> in <|s|> milliseconds <|nl|>
<|nl|> <|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> @ return <|s|> Returns <|s|> the <|s|> pool Size <|s|> specified <|s|> for <|s|> this <|s|> { @ link <|s|> Smtp Server Config } <|s|> object . <|nl|> <|2-s|> <|s|> */ <|nl|>
<|12-s|> if <|s|> ( x <|s|> >= <|s|> rect . x <|s|> + <|s|> rect . width ) <|s|> { <|nl|>
<|16-s|> min <|s|> = <|s|> 0 ; <|nl|>
<|16-s|> min <|s|> = <|s|> 0 ; <|nl|>
<|s|> * <|s|> Copyright <|s|> ( c ) <|s|> 2019 <|s|> Bachmann <|s|> electronic <|s|> Gmb H <|s|> and <|s|> others . <|nl|>
<|s|> * <|4-s|> <|s|> Bachmann <|s|> electronic <|s|> Gmb H <|s|> - <|s|> initial <|s|> API <|s|> and <|s|> implementation <|nl|>
<|2-t|> // <|s|> Create <|s|> two <|s|> Part Stacks <|s|> with <|s|> MParts <|s|> inside <|nl|>
<|2-t|> // <|s|> Create <|s|> a <|s|> Composite Part <|s|> with <|s|> MParts <|s|> inside <|nl|>
<|2-t|> // <|s|> Make <|s|> sure <|s|> the <|s|> widget <|s|> is <|s|> not <|s|> a <|s|> CTab Folder <|nl|>
<|2-t|> assert Equals ( tbm . get Size ( ) , <|s|> 0 ); <|nl|>
<|t|> protected <|s|> int <|s|> get Threshold ( ) <|s|> { <|nl|> <|2-t|> // <|s|> fixed <|s|> default <|s|> threshold <|s|> provided <|s|> up <|s|> to <|s|> v 3 . 15 <|nl|>
<|2-t|> f Category Viewer . refresh ( ); <|nl|>
<|del|> <|nl|>
<|16-s|> <|4-s|> Activator . get Default ( ) . log Error ( " Syscall <|s|> names <|s|> not <|s|> available ! " ); <|s|> // $ NON - NLS - 1 $ <|nl|> <|16-s|> <|4-s|> return <|s|> new <|s|> Syscall Lookup ( Collections . empty List ( ) ); <|nl|>
<|4-s|> <|s|> * <|12-s|> A <|s|> trace <|s|> on <|s|> which <|s|> we <|s|> are <|s|> interested <|s|> to <|s|> fetch <|s|> a <|s|> model <|nl|>
<|4-t|> <|t|> IVariable Binding [ ] <|s|> syn Vars <|s|> = <|s|> binding . get Synthetic Outer Locals ( ); <|nl|> <|4-t|> <|t|> if <|s|> ( syn Vars <|s|> == <|s|> null <|s|> || <|s|> syn Vars . length <|s|> == <|s|> 0 ) <|s|> { // <|s|> name <|s|> cannot <|s|> be <|s|> updated <|s|> if <|s|> Synthetic <|s|> Outer <|s|> Locals <|s|> are <|s|> not <|s|> available <|nl|> <|4-t|> <|2-t|> return <|s|> true ; <|nl|> <|4-t|> <|t|> } <|nl|>
<|nl|> <|4-t|> <|t|> @ Override <|nl|>
<|4-t|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> visible . length ; <|s|> i ++ ) <|s|> { <|nl|> <|4-t|> <|t|> check State . add ( visible [ i ] ); <|nl|> <|4-t|> } <|nl|>
<|3-t|> all Detectors . add All ( Arrays . as List ( configured Detectors ) ); <|nl|>
<|2-t|> if <|s|> ( noexcept Specifier <|s|> != <|s|> null <|s|> && <|s|> noexcept Specifier . get Value ( ) <|s|> instanceof <|s|> Integral Value ) <|s|> { <|nl|>
<|8-s|> P _ Reuse Check Result <|s|> reuse Check Result <|s|> = <|s|> is Reuse Allowed ( candidate ); <|nl|> <|8-s|> if <|s|> ( reuse Check Result . is Reuse Allowed ( ) ) <|s|> { <|nl|>
<|2-s|> <|s|> * <|s|> @ return <|s|> Returns <|s|> the <|s|> size <|s|> of <|s|> the <|s|> connection <|s|> pool <|s|> to <|s|> use <|s|> with <|s|> this <|s|> { @ link <|s|> Smtp Server Config } . <|s|> If <|s|> 0 , <|s|> smtp <|s|> connection <|nl|> <|2-s|> <|s|> * <|8-s|> <|s|> pooling <|s|> is <|s|> disabled . <|nl|>
<|16-s|> Activator . get Default ( ) . log Error ( e . get Message ( ) , <|s|> e ); <|nl|>
<|16-s|> Activator . get Default ( ) . log Error ( " Error : <|s|> getting <|s|> number <|s|> of <|s|> core <|s|> " <|s|> + <|s|> e . get Message ( ) , <|s|> e ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|2-t|> int <|s|> version Compare Result <|s|> = <|s|> compare Workspace And Ide Versions ( url ); <|nl|>
<|4-s|> public <|s|> @ Nullable <|s|> Image Descriptor <|s|> get Image Descripter From Path ( String <|s|> path ) <|s|> { <|nl|> <|8-s|> return <|s|> Abstract UIPlugin . image Descriptor From Plugin ( PLUGIN _ ID , <|s|> path ); <|nl|>
<|12-s|> return <|s|> attribute . get Attribute Type ( ) . get Id String ( ); <|nl|>
<|2-t|> ISite Feature <|s|> feature <|s|> = <|s|> get Current Item ( ); <|nl|> <|2-t|> if <|s|> ( feature <|s|> != <|s|> null ) <|s|> { <|nl|> <|3-t|> String <|s|> value <|s|> = <|s|> include <|s|> ? <|s|> recompute Url ( ) <|s|> : <|s|> null ; <|nl|> <|3-t|> feature . set URL ( value ); <|nl|> <|2-t|> } <|nl|>
<|8-s|> Syscall Lookup <|s|> instance <|s|> = <|s|> s Instance ; <|nl|>
<|16-s|> <|4-s|> Activator . get Default ( ) . log Warning ( " Syscall <|s|> names <|s|> not <|s|> available ! " ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-t|> <|t|> variables [ i ] <|s|> = <|s|> new <|s|> JDIPlaceholder Variable ( f Variables [ i ] [ 0 ] , <|nl|> <|4-t|> <|3-t|> evaluation Block . evaluate ( f Variables [ i ] [ 1 ] ) , <|nl|> <|4-t|> <|3-t|> java Value ); <|nl|>
<|8-s|> <|s|> Label <|s|> label <|s|> = <|s|> editor . get Toolkit ( ) . create Label ( this , <|s|> prefix <|s|> + <|s|> " <|s|> \ " " <|s|> + <|s|> get Object Name ( <|nl|> <|12-s|> this Art ) <|s|> + <|s|> " \ " <|s|> " <|s|> + <|s|> action <|s|> + <|s|> get Completed Cancelled String ( art ) <|s|> + <|s|> " <|s|> \ " " <|s|> + <|s|> get Object Name ( art ) <|s|> + <|s|> " \ " <|s|> " ); <|nl|>
<|4-t|> <|t|> if <|s|> ( f Binding <|s|> instanceof <|s|> ICPPMethod ) <|s|> { <|nl|>
<|4-t|> <|3-t|> report Problem ( VIRTUAL _ CALL _ ID , <|s|> problem Node ); <|nl|>
<|4-t|> <|3-t|> if <|s|> ( member Binding <|s|> instanceof <|s|> ICPPConstructor ) <|s|> { <|nl|>
<|4-s|> private <|s|> final <|s|> List < ITmf Event Aspect <?> > <|s|> f Aspects <|s|> = <|s|> new <|s|> Array List < > ( ); <|nl|>
<|8-s|> f Aspects . add ( aspect ); <|nl|>
<|8-s|> return <|s|> EMPTY _ STRING ; <|nl|>
<|del|> <|nl|>
<|12-s|> if <|s|> ( event String <|s|> != <|s|> EMPTY _ STRING ) <|s|> { <|nl|>
<|12-s|> if <|s|> ( ! event String . is Empty ( ) ) <|s|> { <|nl|>
<|s|> * <|s|> Copyright <|s|> ( c ) <|s|> 2011 - 2019 <|s|> Eclipse Source <|s|> Muenchen <|s|> Gmb H <|s|> and <|s|> others . <|nl|>
<|2-t|> set Description ( PREFERENCE _ PAGE _ DESCRIPTION ); <|nl|>
<|del|> <|nl|>
<|nl|> <|t|> boolean <|s|> is Checksum Changed ( File <|s|> pack File ) <|s|> { <|nl|> <|2-t|> return <|s|> was Checksum Changed <|s|> = <|s|> checksum <|s|> != <|s|> MISSING _ CHECKSUM <|nl|> <|4-t|> && <|s|> ! checksum . equals ( read Checksum ( pack File ) ); <|nl|> <|t|> } <|nl|> <|nl|>
<|4-t|> if <|s|> ( ALL _ OS . equals ( prop Os ) <|s|> || <|s|> ALL _ OS . equals ( os ) ) <|s|> { <|nl|> <|4-t|> <|t|> return <|s|> true ; <|nl|>
<|4-t|> if <|s|> ( ALL _ OS . equals ( prop Os ) <|s|> || <|s|> ALL _ OS . equals ( os ) ) <|s|> { <|nl|> <|4-t|> <|t|> return <|s|> true ; <|nl|>
<|4-t|> <|t|> if <|s|> ( ALL _ ARCH . equals ( arch ) <|s|> || <|s|> ALL _ ARCH . equals ( prop Arch ) ) <|s|> { <|nl|> <|4-t|> <|2-t|> return <|s|> true ; <|nl|>
<|4-t|> <|t|> if <|s|> ( ALL _ ARCH . equals ( arch ) <|s|> || <|s|> ALL _ ARCH . equals ( prop Arch ) ) <|s|> { <|nl|> <|4-t|> <|2-t|> return <|s|> true ; <|nl|>
<|del|> <|nl|>
<|2-t|> private <|s|> static <|s|> final <|s|> String <|s|> ALL _ ARCH <|s|> = <|s|> " " ; <|s|> // $ NON - NLS - 1 $ <|nl|> <|2-t|> private <|s|> static <|s|> final <|s|> String <|s|> ALL _ OS <|s|> = <|s|> " " ; <|s|> // $ NON - NLS - 1 $ <|nl|> <|nl|>
<|12-s|> super . add Event ( event ); <|nl|>
<|8-s|> if <|s|> ( event List <|s|> != <|s|> null ) <|s|> { <|nl|> <|12-s|> // <|s|> Sets <|s|> a <|s|> filtered <|s|> list <|nl|> <|12-s|> super . set Event List ( event List . stream ( ) . map ( time Event <|s|> -> <|s|> is Valid Event ( time Event ) <|s|> ? <|s|> time Event <|s|> : <|s|> null ) . collect ( Collectors . to List ( ) ) ); <|nl|>
<|8-s|> if <|s|> ( is Valid Event ( event ) ) <|s|> { <|nl|> <|12-s|> super . update Zoomed Event ( event ); <|nl|> <|8-s|> } <|nl|>
<|8-s|> return <|s|> ( event <|s|> instanceof <|s|> Time Line Event ); <|nl|>
<|16-s|> series To Add . add ( new <|s|> Long Point ( x , <|s|> val ) ); <|nl|>
<|8-s|> return <|s|> get Class ( ) . get Simple Name ( ) <|s|> + <|s|> " <|s|> time = " <|s|> + <|s|> f Time <|s|> + <|s|> " <|s|> value =[ " <|s|> + <|s|> get Label ( ) <|s|> + <|s|> ' ]'; <|s|> // $ NON - NLS - 1 $ <|s|> // $ NON - NLS - 2 $ <|nl|>
<|16-s|> long <|s|> val <|s|> = <|s|> values . get ( i ); <|nl|>
<|16-s|> long <|s|> val <|s|> = <|s|> values . get ( i ); <|nl|>
<|16-s|> long <|s|> val <|s|> = <|s|> values . get ( i ); <|nl|>
<|8-s|> is Valid Event ( event ); <|nl|>
<|16-s|> if <|s|> ( values . size ( ) <|s|> < <|s|> i ) <|s|> { <|nl|> <|16-s|> <|4-s|> long <|s|> val <|s|> = <|s|> values . get ( i ); <|nl|>
<|del|> <|nl|>
<|s|> * <|s|> Generic <|s|> Time Line Event <|s|> implementation , <|s|> basically <|s|> a <|s|> point <|s|> with <|s|> multiple <|nl|> <|s|> * <|s|> potential <|s|> Y <|s|> values <|s|> and <|s|> one <|s|> X <|nl|>
<|nl|> <|4-s|> /* * <|nl|> <|4-s|> <|s|> * <|s|> One <|s|> time <|s|> line <|s|> X <|s|> and <|s|> mutliple <|s|> Ys . <|s|> Able <|s|> to <|s|> support <|s|> multiple <|s|> lines <|s|> for <|s|> a <|nl|> <|4-s|> <|s|> * <|s|> series . <|nl|> <|4-s|> <|s|> */ <|nl|>
<|4-s|> <|s|> * <|12-s|> The <|s|> values <|s|> to <|s|> display <|s|> at <|s|> this <|s|> given <|s|> timestamp <|nl|>
<|8-s|> boolean <|s|> is Empty <|s|> = <|s|> true ; <|nl|>
<|8-s|> sanitize List ( event List , <|s|> super :: set Event List ); <|nl|>
<|12-s|> get Values ( ) . for Each ( ( Long <|s|> value ) <|s|> -> <|s|> sj . add ( value <|s|> == <|s|> null <|s|> ? <|s|> String . value Of ( value ) <|s|> : <|s|> Number Format . get Number Instance ( Locale . get Default ( ) ) . format ( value ) ) ); <|nl|>
<|8-s|> return <|s|> Collections . unmodifiable List ( f Values ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> sanitize List ( event List , <|s|> super :: set Event List ); <|nl|>
<|8-s|> f Values . add ( value ); <|nl|> <|8-s|> f Label <|s|> = <|s|> null ; <|nl|>
<|8-s|> SWTBot <|s|> wizard Bot <|s|> = <|s|> SWTBot Sirius Helper . get Shell Bot ( " Pane <|s|> Based " ); <|nl|>
<|4-s|> <|s|> * <|s|> Test <|s|> the <|s|> cancel <|s|> on <|s|> the <|s|> first <|s|> wizard . <|nl|>
<|4-t|> String <|s|> prop Os <|s|> = <|s|> property . get Os ( ) <|s|> != <|s|> null <|s|> ? <|s|> property . get Os ( ) . trim ( ) <|s|> : <|s|> ALL _ OS ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|2-t|> final <|s|> int <|s|> a <|s|> = <|s|> 32 ; <|s|> // <|s|> ' <|s|> ' <|nl|> <|2-t|> int <|s|> e <|s|> = <|s|> 126 ; <|s|> // <|s|> ' ~ ' <|nl|>
<|t|> public <|s|> void <|s|> test Detect Modification Although Same Size And Modificationtime ( ) <|nl|>
<|t|> public <|s|> void <|s|> test Detect Modification Although Same Size And Modificationtime ( ) <|nl|>
<|t|> public <|s|> void <|s|> test Detect Modification Although Same Size And Modificationtime ( ) <|nl|>
<|2-t|> // <|s|> don ' t <|s|> use <|s|> mtime <|s|> of <|s|> the <|s|> parent <|s|> folder <|s|> to <|s|> detect <|s|> file <|s|> modification . <|nl|>
<|2-t|> // <|s|> don ' t <|s|> use <|s|> mtime <|s|> of <|s|> the <|s|> parent <|s|> folder <|s|> to <|s|> detect <|s|> file <|s|> modification . <|nl|>
<|t|> public <|s|> void <|s|> test Detect Modification Although Same Size And Modificationtime And File Key ( ) <|nl|>
<|t|> public <|s|> void <|s|> test Detect Modification Although Same Size And Modificationtime And File Key ( ) <|nl|>
<|2-t|> // <|s|> generator <|s|> works <|s|> differently . <|s|> Then <|s|> we <|s|> have <|s|> to <|s|> search <|s|> for <|s|> more <|nl|> <|2-t|> // <|s|> consistent <|nl|>
<|t|> update Style Bits ( image <|s|> == <|s|> null ); <|nl|>
<|t|> update Style Bits ( true ); <|nl|>
<|2-t|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> entries . length ; <|s|> i ++ ) <|s|> { <|nl|> <|3-t|> list . add ( entries [ i ] ); <|nl|>
<|2-t|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> entries . length ; <|s|> i ++ ) <|s|> { <|nl|> <|3-t|> if ( entries [ i ] <|s|> != <|s|> null ) <|s|> { <|nl|> <|4-t|> f Entries . add ( entries [ i ] ); <|nl|>
<|3-t|> index <|s|> = <|s|> f Entries . index Of ( sel . get First Element ( ) ); <|nl|> <|2-t|> } <|nl|> <|2-t|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> entries . length ; <|s|> i ++ ) <|s|> { <|nl|> <|3-t|> if <|s|> ( ! f Entries . contains ( entries [ i ] ) ) <|s|> { <|nl|> <|4-t|> f Entries . add ( index , <|s|> entries [ i ] ); <|nl|>
<|2-t|> } <|nl|>
<|2-t|> // <|s|> add <|s|> listeners <|nl|> <|2-t|> if <|s|> ( f Organizers <|s|> != <|s|> null ) <|s|> { <|nl|> <|3-t|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> f Organizers . length ; <|s|> i ++ ) <|s|> { <|nl|> <|4-t|> f Organizers [ i ] . add Property Change Listener ( this ); <|nl|>
<|3-t|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> f Filters . length ; <|s|> i ++ ) <|s|> { <|nl|> <|4-t|> if <|s|> ( f Filters [ i ] . equals ( property ) ) <|s|> { <|nl|>
<|3-t|> for <|s|> ( int <|s|> i = 0 ; <|s|> i < f Bytes . length ; <|s|> i ++ ) <|nl|> <|3-t|> { <|nl|>
<|2-t|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> f Toggle Detail Pane Actions . length ; <|s|> i ++ ) <|s|> { <|nl|> <|3-t|> f Toggle Detail Pane Actions [ i ] . set Checked ( f Toggle Detail Pane Actions [ i ] . get Orientation ( ) . equals ( orientation ) ); <|nl|>
<|2-t|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> items . length ; <|s|> i ++ ) <|s|> { <|nl|> <|3-t|> IContribution Item <|s|> i Contribution Item <|s|> = <|s|> items [ i ]; <|nl|>
<|3-t|> for <|s|> ( int <|s|> i <|s|> = <|s|> 0 ; <|s|> i <|s|> < <|s|> f Breakpoints . length ; <|s|> i ++ ) <|s|> { <|nl|>
<|4-t|> IBreakpoint <|s|> breakpoint <|s|> = <|s|> f Breakpoints [ i ]; <|nl|>
<|3-t|> for <|s|> ( int <|s|> i = 0 ; <|s|> i < f Editors . length ; <|s|> i ++ ) <|nl|> <|3-t|> { <|nl|> <|4-t|> f Editors [ i ] . dispose ( ); <|nl|>
<|s|> * <|s|> @ author <|s|> Eugen <|s|> Neufeld <|s|> < eneufeld @ eclipsesource . com > <|nl|> <|s|> * <|s|> @ since <|s|> 1 . 22 <|nl|>
<|3-t|> return <|s|> " " ; <|nl|>
<|s|> * <|s|> @ author <|s|> Eugen <|s|> Neufeld <|s|> < eneufeld @ eclipsesource . com > <|nl|> <|s|> * <|s|> @ since <|s|> 1 . 22 <|nl|>
<|2-t|> for <|s|> ( Package Visibility Statement <|s|> stat <|s|> : <|s|> stats ) <|s|> { <|nl|> <|3-t|> Package Binding <|s|> pb <|s|> = <|s|> stat . resolved Package ; <|nl|>
<|3-t|> this . declared Packages . put ( package Name , <|s|> package Binding . get Incarnation ( this ) ); <|nl|>
<|2-t|> Module Binding <|s|> primary Module <|s|> = <|s|> child Package . enclosing Module ; <|nl|>
<|del|> <|nl|>
<|t|> public <|s|> static <|s|> final <|s|> String <|s|> AUTHORS <|s|> = <|s|> " Authors " ; <|s|> // $ NON - NLS - 1 $ <|nl|>
<|t|> public <|s|> static <|s|> final <|s|> String <|s|> VERSION <|s|> = <|s|> " Version " ; <|s|> // $ NON - NLS - 1 $ <|nl|>
<|3-t|> String <|s|> all Authors Label <|s|> = <|s|> " " ; <|s|> // $ NON - NLS - 1 $ <|nl|>
<|3-t|> } <|s|> catch <|s|> ( Unknown Property Exception <|s|> e ) <|s|> { <|nl|> <|4-t|> // <|s|> nothing <|s|> to <|s|> do . <|s|> If <|s|> the <|s|> property <|s|> doesn ' t <|s|> exist , <|s|> we <|s|> probably <|s|> get <|s|> an <|s|> exception <|s|> for <|s|> nothing ! <|nl|> <|3-t|> } <|s|> catch <|s|> ( Not Removeable Exception <|s|> e ) <|s|> { <|nl|> <|4-t|> Activator . log . error ( e ); <|nl|>
<|del|> <|nl|>
<|2-t|> return <|s|> image ; <|nl|>
<|2-t|> Image <|s|> image <|s|> = <|s|> ( Image ) <|s|> ( ( MUIElement ) <|s|> element ) . get Transient Data ( ) . get ( <|nl|> <|4-t|> IPresentation Engine . OVERRIDE _ ICON _ IMAGE _ KEY ); <|nl|>
<|3-t|> if <|s|> ( ! exist ) <|s|> { <|nl|>
<|t|> protected <|s|> void <|s|> show Tab ( MUIElement <|s|> tab Element ) <|s|> { <|nl|>
<|3-t|> try <|s|> { <|nl|> <|4-t|> Data Input Stream <|s|> input <|s|> = <|s|> new <|s|> Data Input Stream ( new <|s|> File Input Stream ( f ) ); <|nl|> <|4-t|> try <|s|> { <|nl|> <|4-t|> <|t|> map . put All ( read Old Format Extension Mappings ( input ) ); <|nl|> <|4-t|> } <|s|> finally <|s|> { <|nl|> <|4-t|> <|t|> input . close ( ); <|nl|> <|4-t|> <|t|> f . delete ( ); <|nl|> <|4-t|> } <|nl|>
<|4-s|> <|s|> * <|s|> @ param <|s|> character <|s|> an <|s|> upper <|s|> case <|s|> hex <|s|> character <|nl|>
<|del|> <|nl|>
<|t|> private <|s|> static <|s|> final <|s|> String <|s|> TYPE _ NAME <|s|> = <|s|> " local - selection - transfer - format " <|s|> + <|s|> System . current Time Millis ( ); <|s|> // $ NON - NLS - 1 $ <|s|> ; <|nl|>
<|4-t|> return <|s|> Long . to String ( value ) <|s|> + <|s|> time Interval Prefixes [ i ]; <|nl|>
<|3-t|> if <|s|> ( parent <|s|> != <|s|> null ) <|s|> { <|nl|> <|4-t|> rv <|s|> = <|s|> parent <|s|> + <|s|> " . " ; <|nl|>
<|del|> <|nl|>
<|3-t|> create Adapter Types ( adapters ); <|nl|>
<|nl|>
<|t|> protected <|s|> final <|s|> boolean <|s|> first Parent ; <|nl|>
<|4-s|> public <|s|> < T <|s|> extends <|s|> ITmf Tree Data Provider < ? <|s|> extends <|s|> ITmf Tree Data Model >> <|s|> boolean <|s|> remove Data Provider ( ITmf Trace <|s|> trace , <|s|> T <|s|> provider ) <|s|> { <|nl|> <|8-s|> return <|s|> f Instances . remove ( trace , <|s|> provider ); <|nl|>
<|t|> private <|s|> void <|s|> check Create FBType ( FB <|s|> fb ) <|s|> { <|nl|>
<|t|> public <|s|> void <|s|> create FBType ( final <|s|> FBType <|s|> fb Type ) <|s|> throws <|s|> Deployment Exception <|s|> { <|nl|> <|2-t|> set Attribute ( get Device ( ) , <|s|> " FBType " , <|s|> get Types ( ) ); <|s|> // $ NON - NLS - 1 $ <|nl|>
<|3-t|> if <|s|> ( f Formatter Options <|s|> == <|s|> null ) <|s|> { <|nl|>
<|4-t|> resulting Edits = <|s|> rewrite . rewrite AST ( ); <|nl|> <|3-t|> } <|s|> else <|s|> { <|nl|> <|4-t|> resulting Edits = <|s|> rewrite . rewrite AST ( new <|s|> Document ( f Cu . get Source ( ) ) , <|s|> f Formatter Options ); <|nl|>
<|t|> @ Suppress Warnings ( " rawtypes " ) <|nl|>
<|t|> @ Suppress Warnings ( " rawtypes " ) <|nl|>
<|3-t|> set Selection To Widget ( Arrays . as List ( tree Selection . get Paths ( ) ) , <|s|> reveal ); <|nl|>
<|s|> * <|s|> IBM <|s|> Corporation <|s|> - <|s|> initial <|s|> API <|s|> and <|s|> implementation <|nl|> <|s|> * <|s|> Oakland <|s|> Software <|s|> ( Francis <|s|> Upton <|s|> - <|s|> francisu @ ieee . org ) <|nl|> <|s|> * <|4-s|> bug <|s|> 197113 <|s|> Project <|s|> Explorer <|s|> drag <|s|> and <|s|> drop <|s|> selection <|s|> not <|s|> working <|s|> properly <|nl|>
<|t|> private <|s|> void <|s|> check Create FBType ( FBType <|s|> fb Type ) <|s|> { <|nl|>
<|4-t|> <|t|> project Selection . add ( ( ( Automation System ) <|s|> element ) . get Project ( ) ); <|nl|> <|4-t|> } <|s|> else <|s|> if <|s|> ( element <|s|> instanceof <|s|> IProject ) <|s|> { <|nl|> <|4-t|> <|t|> project Selection . add ( ( IProject ) <|s|> element ); <|nl|>
<|2-t|> // <|s|> I <|s|> have <|s|> nothing <|s|> of <|s|> my <|s|> own <|s|> to <|s|> reveal ; <|s|> only <|s|> the <|s|> next <|s|> step <|s|> to <|s|> drill <|s|> down <|s|> into <|nl|>
<|t|> private <|s|> static <|s|> Collection < LSBased Hyperlink > <|s|> to Hyperlinks ( final <|s|> IDocument <|s|> document , <|s|> final <|s|> IRegion <|s|> link Region , <|nl|> <|3-t|> Either < List < ? <|s|> extends <|s|> Location > , <|s|> List < ? <|s|> extends <|s|> Location Link >> <|s|> locations ) <|s|> { <|nl|>
<|2-t|> if <|s|> ( index <|s|> < <|s|> get Children ( ) . size ( ) ) <|s|> { <|nl|> <|3-t|> ref Edit Part <|s|> = <|s|> ( Edit Part ) <|s|> get Children ( ) . get ( index ); <|nl|>
<|2-t|> } <|nl|> <|t|> } <|nl|>
<|4-s|> private <|s|> static <|s|> boolean <|s|> enable Uri Fragment Cache <|s|> = <|s|> false ; <|nl|>
<|4-s|> <|s|> * <|12-s|> but <|s|> sometimes <|s|> it <|s|> is <|s|> already <|s|> known <|s|> by <|s|> the <|s|> caller <|s|> or <|s|> it <|s|> can <|s|> be <|s|> null <|s|> ( during <|s|> drag ' n ' drop <|s|> of <|s|> element <|s|> with <|nl|>
<|t|> <|s|> * <|s|> @ return <|s|> a <|s|> step - wise <|s|> chain <|s|> of <|s|> operations <|s|> to <|s|> progressively <|s|> reveal <|s|> the <|s|> { @ code <|s|> object } <|nl|> <|t|> <|s|> * <|8-s|> <|s|> in <|s|> the <|s|> given <|s|> { @ code <|s|> scope } , <|s|> or <|s|> { @ linkplain <|s|> Reveal Step # fail ( ) <|s|> a <|s|> failed <|s|> step } <|s|> if <|s|> none <|nl|>
<|t|> <|s|> * <|s|> @ return <|s|> a <|s|> step - wise <|s|> chain <|s|> of <|s|> operations <|s|> to <|s|> progressively <|s|> reveal <|s|> the <|s|> { @ code <|s|> object } <|nl|> <|t|> <|s|> * <|8-s|> <|s|> in <|s|> the <|s|> given <|s|> { @ code <|s|> scope } , <|s|> or <|s|> { @ linkplain <|s|> Reveal Step # fail ( ) <|s|> a <|s|> failed <|s|> step } <|s|> if <|s|> none <|nl|>
<|t|> if <|s|> ( is Disposed ( ) ) <|s|> SWT . error ( SWT . ERROR _ GRAPHIC _ DISPOSED ); <|nl|> <|t|> /* <|nl|> <|t|> <|s|> * <|s|> Conversion <|s|> formula <|s|> comes <|s|> from <|s|> Cairo ' s <|s|> _ cairo _ color _ double _ to _ short ( ) <|nl|> <|t|> <|s|> * <|s|> and <|s|> color _ to _ pixel ( ) <|s|> functions . <|s|> See <|s|> bug <|s|> 549181 <|s|> and <|s|> 549101 <|s|> for <|s|> more <|s|> info . <|nl|> <|t|> <|s|> */ <|nl|>
<|t|> if <|s|> ( is Disposed ( ) ) <|s|> SWT . error ( SWT . ERROR _ GRAPHIC _ DISPOSED ); <|nl|> <|t|> /* <|nl|> <|t|> <|s|> * <|s|> Conversion <|s|> formula <|s|> comes <|s|> from <|s|> Cairo ' s <|s|> _ cairo _ color _ double _ to _ short ( ) <|nl|> <|t|> <|s|> * <|s|> and <|s|> color _ to _ pixel ( ) <|s|> functions . <|s|> See <|s|> bug <|s|> 549181 <|s|> and <|s|> 549101 <|s|> for <|s|> more <|s|> info . <|nl|> <|t|> <|s|> */ <|nl|>
<|2-t|> buf = <|s|> new <|s|> String Builder ( ); <|nl|>
<|2-t|> Stereotype Application Conflict Tests . class , <|s|> } ) <|nl|>
import <|s|> java . util . Hash Map ; <|nl|>
<|t|> private <|s|> static <|s|> URI <|s|> get Stereotype URI ( EObject <|s|> stereotype Application ) <|s|> { <|nl|>
<|t|> private <|s|> static <|s|> < K , <|s|> L , <|s|> V > <|s|> V <|s|> put ( Map < K , <|s|> Map < L , <|s|> V >> <|s|> map Of Maps , <|s|> K <|s|> key 1 , <|s|> L <|s|> key 2 , <|s|> V <|s|> value ) <|s|> { <|nl|>
<|nl|> /* * <|nl|> <|s|> * <|s|> @ author <|s|> Andrew <|s|> M . <|s|> Finkbeiner <|nl|> <|s|> */ <|nl|>
<|nl|> /* * <|nl|> <|s|> * <|s|> @ author <|s|> Andrew <|s|> M . <|s|> Finkbeiner <|nl|> <|s|> */ <|nl|>
<|nl|> /* * <|nl|> <|s|> * <|s|> @ author <|s|> Andrew <|s|> M . <|s|> Finkbeiner <|nl|> <|s|> */ <|nl|>
<|4-s|> <|s|> * <|s|> Enable <|s|> or <|s|> disable <|s|> the <|s|> ability <|s|> to <|s|> cache <|s|> the <|s|> computed <|s|> values . <|s|> The <|s|> cache <|s|> is <|s|> cleared <|s|> when <|s|> this <|s|> method <|s|> is <|s|> called <|s|> to <|nl|>
<|2-s|> protected <|s|> static <|s|> final <|s|> String <|s|> TEXT _ LINE _ SEPARATOR <|s|> = <|s|> " \ n " ; <|nl|>
<|4-s|> private <|s|> Description Descriptor <|s|> m _ description ; <|nl|>
<|2-s|> private <|s|> Table Listener <|s|> m _ table Listener ; <|nl|> <|2-s|> private <|s|> boolean <|s|> m _ is Grouping ; <|nl|> <|2-s|> private <|s|> boolean <|s|> m _ is Sorting ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|2-s|> private <|s|> int <|s|> m _ http Status ; <|nl|> <|2-s|> private <|s|> String <|s|> m _ error Code ; <|nl|>
<|2-s|> private <|s|> int <|s|> m _ http Status ; <|nl|> <|2-s|> private <|s|> String <|s|> m _ error Code ; <|nl|>
<|2-s|> public <|s|> Error Response Builder <|s|> with Http Status ( int <|s|> http Status ) <|s|> { <|nl|> <|4-s|> m _ http Status <|s|> = <|s|> http Status ; <|nl|>
<|2-s|> public <|s|> Error Response Builder <|s|> with Error Code ( int <|s|> error Code ) <|s|> { <|nl|> <|4-s|> m _ error Code <|s|> = <|s|> String . value Of ( error Code ); <|nl|>
<|2-s|> public <|s|> Error Response Builder <|s|> with Error Code ( String <|s|> error Code ) <|s|> { <|nl|> <|4-s|> m _ error Code <|s|> = <|s|> error Code ; <|nl|>
<|2-t|> } <|s|> else <|s|> if <|s|> ( new Name Value <|s|> != <|s|> null ) <|s|> { <|nl|> <|3-t|> Refactoring UIPlugin . log Error Message ( Refactoring UIMessages . Rename Resource Handler _ ERROR _ EXPECTED _ STRING <|s|> + <|s|> new Name Value . get Class ( ) . get Name ( ) ); <|s|> <|nl|>
<|2-t|> add Page ( new <|s|> Rename Resource Refactoring Configuration Page ( processor ) ); <|nl|>
<|3-t|> Refactoring UIPlugin . log Error Message ( NLS . bind ( Refactoring UIMessages . Rename Resource Handler _ ERROR _ EXPECTED _ STRING , <|s|> new Name Value . get Class ( ) . get Name ( ) ) ); <|nl|>
<|t|> private <|s|> class <|s|> Value Comment Cell Modifier <|s|> implements <|s|> ICell Modifier <|s|> { <|nl|>
<|nl|> <|nl|>
<|16-s|> <|2-s|> AWorkbench . popup ( " Commit <|s|> Branch <|s|> Error ! " , <|nl|> <|16-s|> <|4-s|> <|s|> " All <|s|> blocking <|s|> reviews <|s|> must <|s|> be <|s|> completed <|s|> before <|s|> committing <|s|> a <|s|> new <|s|> branch . <|2-s|> Please <|s|> complete <|s|> all <|s|> blocking <|s|> reviews <|s|> in <|s|> order <|s|> to <|s|> continue . " ); <|nl|>
<|del|> <|nl|>
<|4-t|> is Dark Theme <|s|> = <|s|> ( lp Data [ 0 ] <|s|> == <|s|> 0 ); <|nl|>
<|t|> @ Deprecated <|nl|>
<|4-t|> <|2-t|> Close Resource Action <|s|> cra <|s|> = <|s|> new <|s|> Close Resource Action ( ( ) <|s|> -> <|s|> null ); <|nl|> <|4-t|> <|2-t|> cra . selection Changed ( new <|s|> Structured Selection ( project ) ); <|nl|> <|4-t|> <|2-t|> cra . run ( ); <|nl|>
<|2-t|> return <|s|> File Utils . get File Attributes Basic ( this , <|s|> path ); <|nl|>
<|4-t|> if <|s|> ( line <|s|> != <|s|> null ) <|s|> { <|nl|> <|4-t|> <|t|> // <|s|> successfully <|s|> parsed <|s|> as <|s|> a <|s|> non - comment <|s|> line <|nl|> <|4-t|> <|t|> // <|s|> mark <|s|> this <|s|> line <|s|> as <|s|> a <|s|> comment <|s|> explicitly <|nl|>
<|nl|>
<|t|> private <|s|> void <|s|> add ( String ... <|s|> search Strings ) <|s|> { <|nl|> <|2-t|> boolean <|s|> has Strings = <|s|> false ; <|nl|> <|2-t|> if <|s|> ( search Strings <|s|> != <|s|> null ) <|s|> { <|nl|> <|3-t|> for <|s|> ( String <|s|> search String <|s|> : <|s|> search Strings ) <|s|> { <|nl|> <|4-t|> has Strings |= <|s|> insert ( search String ); <|nl|>
<|t|> // <|s|> The <|s|> algorithm <|s|> has <|s|> been <|s|> modified <|s|> to <|s|> support <|s|> both <|s|> reporting <|s|> all <|s|> matches <|s|> or <|s|> only <|s|> leftmost <|s|> longest <|s|> matches . <|nl|>
<|del|> <|nl|>
<|4-t|> <|t|> // <|s|> first <|s|> match . <|s|> Note <|s|> that <|s|> we <|s|> _ do _ <|s|> have <|s|> a <|s|> match <|s|> at <|s|> least <|s|> from <|s|> this <|s|> node <|s|> itself . <|nl|>
<|2-t|> Multi String Matcher <|s|> m <|s|> = <|s|> Multi String Matcher . builder ( ) . add ( ( String [ ] ) <|s|> null ) . build ( ); <|nl|> <|2-t|> List < Match > <|s|> matches <|s|> = <|s|> m . find ( " dddhiheddd " , <|s|> 0 ); <|nl|> <|2-t|> assert Equals ( " Expected <|s|> no <|s|> match " , <|s|> 0 , <|s|> matches . size ( ) ); <|nl|>
<|4-t|> // <|s|> Results <|s|> are <|s|> ordered <|s|> by <|s|> offset . <|s|> <|nl|> <|4-t|> // <|s|> We <|s|> are <|s|> searching <|s|> for <|s|> the <|s|> leftmost <|s|> so <|s|> all <|s|> remaining <|s|> candidates <|s|> do <|s|> not <|s|> matter . <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> String <|s|> PACKAGING <|s|> = <|s|> " eclipse - target - definition " ; <|nl|>
<|2-t|> File Utils . delete ( root , <|s|> File Utils . RECURSIVE <|s|> | <|s|> File Utils . RETRY ); <|nl|>
<|4-t|> <|t|> LOG . warn ( Message Format . format ( <|nl|> <|4-t|> <|3-t|> JGit Text . get ( ) . skip Not Accessible Path , <|nl|> <|4-t|> <|3-t|> file . get Path ( ) ) ); <|nl|>
<|3-t|> LOG . warn ( Message Format . format ( JGit Text . get ( ) . read Pipe Is Not Allowed , <|nl|> <|4-t|> <|t|> command , <|s|> dir ) ); <|nl|>
<|2-t|> // <|s|> ignore <|s|> deltas <|s|> with <|s|> filtered <|s|> resource <|nl|> <|2-t|> if <|s|> ( delta <|s|> != <|s|> null <|s|> && <|s|> get Sync File Filter ( project ) . should Ignore ( delta . get Resource ( ) ) ) <|s|> { <|nl|>
<|2-t|> // <|s|> ignore <|s|> deltas <|s|> with <|s|> filtered <|s|> resource <|nl|> <|2-t|> if <|s|> ( delta <|s|> != <|s|> null <|s|> && <|s|> get Sync File Filter ( project ) . should Ignore ( delta . get Resource ( ) ) ) <|s|> { <|nl|>
<|t|> <|s|> * <|s|> internal <|s|> data <|s|> is <|s|> not <|s|> there . <|s|> We <|s|> do <|s|> not <|s|> support <|s|> that <|s|> and <|s|> in <|s|> such <|s|> case <|nl|>
<|t|> <|s|> * <|s|> internal <|s|> data <|s|> is <|s|> not <|s|> there . <|s|> We <|s|> do <|s|> not <|s|> support <|s|> that <|s|> and <|s|> in <|s|> such <|s|> case <|nl|>
<|t|> <|s|> * <|s|> Bug <|s|> 550423 : <|s|> When <|s|> non - XP - theme <|s|> COMMCTL 32 . DLL <|s|> gets <|s|> loaded , <|s|> undocumented <|nl|> <|t|> <|s|> * <|s|> internal <|s|> data <|s|> is <|s|> not <|s|> there . <|s|> We <|s|> do <|s|> not <|s|> support <|s|> that <|s|> and <|s|> is <|s|> such <|s|> case <|nl|> <|t|> <|s|> * <|s|> Get Window Long Ptr <|s|> function <|s|> fails <|s|> and <|s|> return <|s|> zero . <|nl|>
<|3-t|> int <|s|> count <|s|> = <|s|> ( int ) OS . Send Message <|s|> ( handle , <|s|> OS . CB _ GETCOUNT , <|s|> 0 , <|s|> 0 ); <|nl|>
<|del|> <|nl|>
<|nl|>
<|2-t|> Assert . is Not Null ( this . exported Table , <|s|> Messages . Export As Table Configuration Wizard _ We Cant Found The Table To Export ); <|nl|>
<|4-t|> <|t|> // <|s|> ask <|s|> " outer " <|s|> object <|s|> about <|s|> field <|s|> probably <|s|> declared <|s|> within <|nl|> <|4-t|> <|t|> return <|s|> outer Object . get Field ( name , <|s|> outer . signature ( ) ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> assert That ( values , <|s|> contains In Any Order ( value For ( CHILD _ 2 , <|s|> 2 ) , <|s|> value For ( CHILD _ 3 , <|s|> 3 ) ) ); <|nl|>
<|4-s|> private <|s|> static <|s|> final <|s|> String <|s|> SAD _ ENTRIES _ MAPPING <|s|> = <|s|> " sad - entries - mapping " ; <|nl|>
<|s|> * <|s|> Factory <|s|> producing <|s|> readers <|s|> for <|s|> Ip Sec <|s|> plugin ' s <|s|> data . <|nl|>
<|s|> * <|s|> Factory <|s|> producing <|s|> readers <|s|> for <|s|> Ip Sec <|s|> plugin ' s <|s|> data . <|nl|>
<|16-s|> <|8-s|> . new Hash Set ( Instance Identifier . create ( Spd . class ) . child ( Spd Entries . class ) ) , <|nl|> <|16-s|> new <|s|> Generic Init List Reader < > ( <|nl|> <|16-s|> <|8-s|> IPSEC _ STATE _ ID . augmentation ( Ipsec State Spd Augmentation . class ) . child ( Spd . class ) , <|nl|> <|16-s|> <|8-s|> new <|s|> Ipsec State Spd Customizer ( vpp Api ) ) ); <|nl|>
<|8-s|> this . ipsec Sa Details Reply Dump Manager <|s|> = <|nl|> <|16-s|> new <|s|> Dump Cache Manager . Dump Cache Manager Builder < Ipsec Sa Details Reply Dump , <|s|> Void > ( ) <|nl|> <|16-s|> <|8-s|> . with Executor ( new <|s|> Ipsec State Customizer . Ipsec State Sa Details Dump Executor ( vpp Api ) ) <|nl|> <|16-s|> <|8-s|> . accept Only ( Ipsec Sa Details Reply Dump . class ) <|nl|> <|16-s|> <|8-s|> . build ( ); <|nl|>
<|8-s|> final <|s|> Optional < Ipsec Sa Details Reply Dump > <|s|> dump Sa <|s|> = <|nl|> <|16-s|> ipsec Sa Details Reply Dump Manager . get Dump ( id , <|s|> ctx . get Modification Cache ( ) ); <|nl|>
<|16-s|> sa Builder . set Spi ( Integer . to Unsigned Long ( details . spi ) ) <|nl|> <|16-s|> <|8-s|> . set Anti Replay Window ( Long . value Of ( details . replay Window ) . int Value ( ) ) <|nl|> <|16-s|> <|8-s|> . set Authentication Algorithm ( Ike Integrity Algorithm T . for Value ( details . integ Alg ) ) <|nl|> <|16-s|> <|8-s|> . set Encryption Algorithm ( Ike Encryption Algorithm T . for Value ( details . crypto Alg ) ); <|nl|>
<|12-s|> return <|s|> get Reply For Read ( jvpp . ipsec Sa Dump ( dump ) . to Completable Future ( ) , <|s|> identifier ); <|nl|>
<|8-s|> // <|s|> VPP <|s|> doesn ' t <|s|> support <|s|> deletion <|s|> of <|s|> local <|s|> key <|s|> file <|nl|>
<|del|> <|nl|>
<|12-s|> entry . use Anti Replay <|s|> = <|s|> data After . get Anti Replay Window ( ) <|s|> > <|s|> 0 <|nl|> <|16-s|> <|4-s|> ? <|s|> BYTE _ TRUE <|nl|> <|16-s|> <|4-s|> : <|s|> BYTE _ FALSE ; <|nl|>
<|s|> * <|s|> Factory <|s|> producing <|s|> writers <|s|> for <|s|> Ip Sec <|s|> plugin ' s <|s|> data . <|nl|>
<|8-s|> registry . subtree Add ( Sets . new Hash Set ( Instance Identifier . create ( Sad Entries . class ) . child ( Source Address . class ) , <|nl|>
<|16-s|> new <|s|> Generic Writer < > ( IKE 2 _ ID . child ( Policy . class ) . child ( Identity . class ) , <|nl|> <|16-s|> <|8-s|> new <|s|> Ikev 2 Policy Identity Customizer ( vpp Api ) ) ); <|nl|>
<|s|> * <|s|> Module <|s|> class <|s|> instantiating <|s|> Ip Sec <|s|> plugin <|s|> components . <|nl|>
<|del|> <|nl|>
<|16-s|> Sets . new Hash Set ( IID . child ( Conform Action . class ) , <|s|> IID . child ( Exceed Action . class ) , <|nl|> <|16-s|> <|8-s|> IID . child ( Violate Action . class ) ) , <|nl|> <|16-s|> new <|s|> Generic List Writer < > ( POLICER _ IID , <|s|> new <|s|> Policer Customizer ( vpp Api , <|s|> policer Context ) , <|nl|> <|16-s|> <|8-s|> new <|s|> Policer Validator ( policer Context ) ) ); <|nl|>
<|s|> * <|s|> Copyright <|s|> ( c ) <|s|> 2019 <|s|> PANTHEON . tech . <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|8-s|> this . statistics Manager <|s|> = <|s|> check Not Null ( statistics Manager , <|s|> " Statistics <|s|> Manager <|s|> should <|s|> not <|s|> be <|s|> null " ); <|nl|>
<|8-s|> LOG . debug ( " Sending <|s|> Interface Statistics Dump <|s|> request ... " ); <|nl|>
<|8-s|> check Not Null ( bridge Domain Context , <|s|> " bridge Domain Context <|s|> should <|s|> not <|s|> be <|s|> null " ); <|nl|>
<|8-s|> check Not Null ( bridge Domain Context , <|s|> " bridge Domain Context <|s|> should <|s|> not <|s|> be <|s|> null " ); <|nl|>
<|8-s|> check Not Null ( disabled Interfaces Manager , <|s|> " disabled Interfaces Manager <|s|> should <|s|> not <|s|> be <|s|> null " ); <|nl|>
<|4-s|> private <|s|> void <|s|> validate Vxlan ( final <|s|> Vxlan <|s|> data ) <|s|> { <|nl|>
<|2-s|> public <|s|> String <|s|> get Project Name ( ) <|s|> { <|nl|> <|4-s|> return <|s|> m Project Name ; <|nl|>
<|2-s|> public <|s|> String <|s|> get Project ID ( ) <|s|> { <|nl|> <|4-s|> return <|s|> m Project ID ; <|nl|>
<|2-s|> public <|s|> String <|s|> get Project Path ( ) <|s|> { <|nl|> <|4-s|> return <|s|> m Project Path ; <|nl|>
<|del|> <|nl|>
<|nl|>
<|nl|>
<|2-t|> this . controller Options <|s|> = <|s|> controller . get Options ( ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> m Matrix <|s|> = <|s|> Matrix Helper . create Matrix ( data ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> System . load Library ( " model - exporter - jni " ); <|nl|>
<|2-s|> <|s|> * <|s|> @ param <|s|> input Path <|s|> - <|s|> path <|s|> and <|s|> name <|s|> of <|s|> the <|s|> . dae <|s|> file <|s|> to <|s|> process . <|s|> Required . <|nl|> <|2-s|> <|s|> * <|s|> @ param <|s|> output Path <|s|> - <|s|> path <|s|> ( incl . <|s|> name ) <|s|> to <|s|> save <|s|> the <|s|> . dli <|s|> and <|s|> . bin <|s|> files <|s|> to . <|nl|>
<|nl|>
<|del|> <|nl|>
<|nl|> <|2-s|> static <|s|> void <|s|> create Part ( String <|s|> id ) <|s|> { <|nl|>
<|nl|>
<|nl|>
<|nl|>
<|s|> * <|s|> A <|s|> widget <|s|> for <|s|> a <|s|> property <|s|> whose <|s|> value <|s|> can <|s|> be <|s|> presented <|s|> as <|s|> a <|s|> Text <|s|> box . <|nl|>
<|del|> <|nl|>
<|nl|>
<|del|> <|nl|>
<|s|> * <|s|> Provides <|s|> descriptions <|s|> of <|s|> a <|s|> given <|s|> list <|s|> of <|s|> resources . <|nl|>
<|2-s|> <|s|> * <|s|> Return <|s|> the <|s|> list <|s|> of <|s|> resources . <|nl|>
import <|s|> org . eclipse . jface . viewers . ITree Content Provider ; <|nl|>
<|2-s|> public <|s|> void <|s|> populate ( ITree Content Provider <|s|> provider , <|s|> Property Provider Selection Changed Listener <|s|> listener ) <|s|> { <|nl|>
<|del|> <|nl|>
<|8-s|> receiver . register ( " Texture " <|s|> + <|s|> ( index + 1 ) , <|s|> new <|s|> Property ( this , <|s|> " Texture Array " , <|s|> Property . Type . String , <|s|> true , <|s|> null , <|s|> new <|s|> Array Element Setter ( index ) , <|s|> String [ ] . class ) ); <|nl|>
<|8-s|> String <|s|> string <|s|> = <|s|> " " ; <|nl|> <|nl|>
<|12-s|> token . login ( password ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|16-s|> <|16-s|> <|8-s|> } <|s|> catch <|s|> ( Exception <|s|> e ) <|s|> { <|nl|> <|16-s|> <|16-s|> <|12-s|> CMS . debug ( method <|s|> + <|s|> " failed <|s|> getting <|s|> issuer <|s|> from <|s|> Revoke Request : " <|s|> + <|s|> e . to String ( ) ); <|nl|>
<|16-s|> new <|s|> Password Converter ( ) , <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> <|s|> * <|s|> a <|s|> worker <|s|> thread <|s|> pool , <|s|> which <|s|> allows <|s|> blocking <|s|> operations <|s|> inside <|s|> the <|s|> Future . <|nl|>
<|4-s|> <|s|> * <|s|> @ return <|s|> A <|s|> Handler <|s|> with <|s|> the <|s|> Future <|s|> which <|s|> contains <|s|> the <|s|> post <|s|> collection <|s|> logic . <|nl|>
<|del|> <|nl|>
<|4-s|> private <|s|> final <|s|> Map < String , <|s|> Atomic Long > <|s|> quality Map <|s|> = <|s|> new <|s|> Concurrent Hash Map < > ( ); <|nl|> <|4-s|> private <|s|> final <|s|> Map < String , <|s|> Atomic Long > <|s|> error Map <|s|> = <|s|> new <|s|> Concurrent Hash Map < > ( ); <|nl|>
<|4-s|> public <|s|> void <|s|> register Queue Metrics ( Atomic Integer <|s|> current Queue Size , <|s|> int <|s|> queue Size ) <|s|> { <|nl|>
<|4-s|> public <|s|> void <|s|> register Total Metrics ( Async Result < Collector Job Result > <|s|> post Result ) <|s|> { <|nl|>
<|del|> <|nl|>
<|8-s|> return <|s|> new <|s|> Collector Job Result ( request Id , <|s|> " test - src " , <|s|> " test - quality " , <|s|> " test - created " , <|s|> new <|s|> Json Object ( ) , <|s|> error ); <|nl|>
<|del|> <|nl|>
<|8-s|> // <|s|> sort <|s|> cert <|s|> chain <|s|> from <|s|> root <|s|> to <|s|> leaf <|nl|> <|8-s|> cert Chain <|s|> = <|s|> Crypto Util . sort Certificate Chain ( cert Chain ); <|nl|> <|nl|> <|8-s|> for <|s|> ( X 509 Certificate <|s|> cert <|s|> : <|s|> cert Chain ) <|s|> { <|nl|> <|12-s|> logger . debug ( " PKITrust Manager : <|2-s|> - <|s|> " <|s|> + <|s|> cert . get Subject DN ( ) ); <|nl|>
<|4-s|> public <|s|> void <|s|> check Server Trusted ( X 509 Certificate [ ] <|s|> cert Chain , <|s|> String <|s|> auth Type ) <|s|> throws <|s|> Certificate Exception <|s|> { <|nl|>
<|12-s|> if <|s|> ( " rsa " . equals ( algorithm ) ) <|s|> { <|nl|>
<|12-s|> else <|s|> if <|s|> ( " ecc " . equals ( algorithm ) ) <|s|> { <|nl|>
<|12-s|> } <|s|> else <|s|> { <|nl|> <|16-s|> throw <|s|> new <|s|> Exception ( " Invalid <|s|> algorithm : <|s|> " <|s|> + <|s|> algorithm ); <|nl|> <|12-s|> } <|nl|>
<|16-s|> len Or Curve , <|s|> " " <|s|> + <|s|> length , <|nl|>
<|12-s|> content . put Single ( " profile Id " , <|s|> actual Profile Id ); <|nl|>
<|del|> <|nl|>
<|8-s|> String <|s|> msg <|s|> = <|s|> " " ; <|nl|> <|nl|> <|8-s|> if <|s|> ( serial <|s|> == <|s|> null ) <|s|> { <|nl|> <|12-s|> throw <|s|> new <|s|> EBase Exception ( method <|s|> + <|s|> " paramster <|s|> serial <|s|> cannot <|s|> be <|s|> null " ); <|nl|> <|8-s|> } <|nl|>
<|12-s|> throw <|s|> new <|s|> PKIException ( " Failed <|s|> to <|s|> parse <|s|> profile <|s|> configuration " , <|s|> e ); <|nl|>
<|4-s|> <|2-s|> Pattern . compile ( " ^ plugin - " <|s|> + <|s|> PLUGIN _ NAME _ PATTERN _ STRING <|s|> + <|s|> " - [ a - z A - Z ] + $ " ); <|nl|>
<|2-s|> Plugin Permissions Util ( <|nl|>
<|4-s|> <|s|> * <|4-s|> <|s|> scoped <|s|> to . <|nl|> <|4-s|> <|s|> * <|s|> @ throws <|s|> Permission Backend Exception <|s|> if <|s|> failure <|s|> consulting <|s|> backend <|s|> configuration . <|nl|>
<|8-s|> // <|s|> TODO ( xchangcheng ): <|s|> implement <|s|> for <|s|> plugin <|s|> defined <|s|> project <|s|> permissions . <|nl|>
<|12-s|> <|2-s|> new <|s|> Description ( " average <|s|> processing <|s|> delay <|s|> per <|s|> updated <|s|> change " ) <|nl|>
<|12-s|> <|2-s|> new <|s|> Description ( " processing <|s|> delay <|s|> for <|s|> a <|s|> processing <|s|> single <|s|> batch <|s|> of <|s|> pushes " ) <|nl|>
<|12-s|> <|2-s|> Field . of String ( " type " , <|s|> " type <|s|> of <|s|> push <|s|> ( create / replace , <|s|> autoclose , <|s|> normal ) " ) ); <|nl|>
<|4-s|> <|2-s|> if <|s|> ( ! autoclosed . is Empty ( ) ) <|s|> { <|nl|> <|8-s|> metrics . changes . record ( Result Change Ids . Key . AUTOCLOSED , <|s|> autoclosed . size ( ) ); <|nl|> <|8-s|> total Changes <|s|> += <|s|> autoclosed . size ( ); <|nl|> <|4-s|> <|2-s|> } <|nl|>
<|4-s|> <|2-s|> if <|s|> ( test Checker Update . force Invalid Config ( ) ) <|s|> { <|nl|>
<|2-s|> public <|s|> abstract <|s|> boolean <|s|> force Invalid Config ( ); <|nl|>
<|2-s|> } <|nl|> <|nl|> <|2-s|> @ Test <|nl|> <|2-s|> public <|s|> void <|s|> get Non Existing Check With Invalid Uuid Fails ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|> <|4-s|> exception . expect ( Resource Not Found Exception . class ); <|nl|> <|4-s|> exception . expect Message ( " Not <|s|> found : <|s|> n 0 n - e # isting " ); <|nl|> <|nl|> <|4-s|> checks Api Factory . revision ( patch Set Id ) . id ( " n 0 n - e # isting " ) . get ( ); <|nl|> <|2-s|> } <|nl|>
<|4-s|> <|2-s|> owner Id <|s|> = <|s|> account Id ; <|nl|>
<|12-s|> <|2-s|> Field . of String ( " type " , <|s|> " type <|s|> of <|s|> push <|s|> ( create / replace , <|s|> autoclose ) " ) ); <|nl|>
<|16-s|> <|4-s|> <|2-s|> " Processing <|s|> delay <|s|> per <|s|> push <|s|> divided <|s|> by <|s|> the <|s|> number <|s|> of <|s|> changes <|s|> in <|s|> said <|s|> push . <|s|> ( Only <|s|> includes <|s|> pushes <|s|> which <|s|> contain <|s|> changes . ) " ) <|nl|>
<|2-s|> private <|s|> static <|s|> Project Access Input <|s|> create Access Input ( String <|s|> access Section , <|s|> String <|s|> permission Name ) <|s|> { <|nl|>
<|2-s|> public <|s|> void <|s|> is Plugin Permission Returns True For Valid Name ( ) <|s|> { <|nl|>
<|2-s|> public <|s|> void <|s|> is Plugin Permission Returns False For Invalid Name ( ) <|s|> { <|nl|> <|4-s|> Immutable List < String > <|s|> in Valid Plugin Permissions <|s|> = <|nl|>
<|2-s|> public <|s|> void <|s|> is Plugin Permission Returns False For Invalid Name ( ) <|s|> { <|nl|> <|4-s|> Immutable List < String > <|s|> in Valid Plugin Permissions <|s|> = <|nl|>
<|2-s|> public <|s|> void <|s|> set Access Add Plugin Capability Succeed ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|>
<|8-s|> <|2-s|> jira Client . add Value To Field ( its Server Info , <|s|> issue Key , <|s|> value , <|s|> field Id ); <|nl|> <|8-s|> <|2-s|> // <|s|> No <|s|> value <|s|> to <|s|> return <|nl|>
<|4-s|> <|2-s|> input <|s|> = <|s|> new <|s|> Check Input ( ); <|nl|>
<|4-s|> <|2-s|> throws <|s|> Rest Api Exception , <|s|> IOException , <|s|> Orm Exception <|s|> { <|nl|> <|4-s|> if <|s|> ( input <|s|> == <|s|> null ) <|s|> { <|nl|> <|4-s|> <|2-s|> input <|s|> = <|s|> new <|s|> Check Input ( ); <|nl|> <|4-s|> } <|nl|>
<|4-s|> <|2-s|> log . error ( " invalid <|s|> value <|s|> for <|s|> { }; <|s|> using <|s|> default <|s|> value <|s|> { } " , <|s|> name , <|s|> default Value ); <|nl|> <|4-s|> <|2-s|> log . debug ( " Failed <|s|> to <|s|> retrieve <|s|> integer <|s|> value : <|s|> { } " , <|s|> e . get Message ( ) , <|s|> e ); <|nl|>
<|12-s|> log . info ( " [ { } ] <|s|> Setting <|s|> kafka <|s|> property : <|s|> { } <|s|> = <|s|> { } " , <|s|> subsection Name , <|s|> prop Name , <|s|> value ); <|nl|>
<|8-s|> log . error ( " invalid <|s|> value <|s|> for <|s|> { }; <|s|> using <|s|> default <|s|> value <|s|> { } " , <|s|> name , <|s|> default Value ); <|nl|> <|8-s|> log . debug ( " Failed <|s|> to <|s|> retrieve <|s|> boolean <|s|> value : <|s|> { } " , <|s|> e . get Message ( ) , <|s|> e ); <|nl|>
public <|s|> class <|s|> Module <|s|> extends <|s|> Lifecycle Module <|s|> { <|nl|> <|2-s|> private <|s|> static <|s|> final <|s|> Logger <|s|> log <|s|> = <|s|> Logger Factory . get Logger ( Module . class ); <|nl|>
<|4-s|> listener ( ) . to ( Multi Site Log File . class ); <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> LOGGER . debug ( " Already <|s|> connected . " ); <|nl|>
<|8-s|> log . debug ( " Invalidated <|s|> cache <|s|> { } " , <|s|> entry . get Cache Name ( ) ); <|nl|>
<|8-s|> log . debug ( " Invalidated <|s|> cache <|s|> { } [ { } ] " , <|s|> entry . get Cache Name ( ) , <|s|> entry . get Key ( ) ); <|nl|>
<|8-s|> <|2-s|> msg Log . info ( " Consuming <|s|> event : <|s|> Header [ { } ] <|s|> Body [ { } ] " , <|s|> event . get Header ( ) , <|s|> event . get Body ( ) ); <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|2-s|> private <|s|> static <|s|> String <|s|> strip Trailing Slash ( String <|s|> name ) <|s|> { <|nl|> <|4-s|> while <|s|> ( name . ends With ( " / " ) ) <|s|> { <|nl|> <|4-s|> <|2-s|> name <|s|> = <|s|> name . substring ( 0 , <|s|> name . length ( ) <|s|> - <|s|> 1 ); <|nl|> <|4-s|> } <|nl|>
<|2-s|> private <|s|> static <|s|> String <|s|> strip ( String <|s|> name ) <|s|> { <|nl|>
<|nl|> <|2-s|> @ Test <|nl|>
<|nl|> <|2-s|> @ Test <|nl|>
<|8-s|> " gerrit <|s|> create - project <|s|> -- branch <|s|> master <|s|> -- owner <|s|> " <|s|> + <|nl|> <|8-s|> new Group Name <|s|> + <|s|> " <|s|> " <|s|> + <|s|> new Project Name <|s|> + <|s|> " . git " ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> bind ( Shared Ref Database . class ) . to ( In Memory Dfs Ref Database . class ); <|nl|>
<|4-s|> return <|s|> ref Name . starts With ( " refs / changes " ) <|s|> && <|s|> ! ref Name . ends With ( " / meta " ); <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|del|> <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|2-s|> <|s|> * <|s|> attributes <|s|> of <|s|> the <|s|> new <|s|> check . <|s|> To <|s|> create <|s|> the <|s|> check <|s|> in <|s|> the <|s|> storage <|s|> for <|s|> real , <|s|> { @ link <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|del|> <|nl|>
<|nl|> <|2-s|> @ Inject <|nl|>
<|del|> <|nl|>
<|4-s|> Thread . sleep ( 2000 L ); <|nl|>
<|8-s|> . contains All Of ( change Notes Ref , <|s|> patchset Ref ); <|nl|>
import <|s|> org . eclipse . jgit . revwalk . Rev Walk ; <|nl|> import <|s|> org . junit . Before ; <|nl|>
<|8-s|> <|2-s|> " Gerrit <|s|> is <|s|> still <|s|> running <|s|> on <|s|> Review Db : <|s|> please <|s|> migrate <|s|> to <|s|> Note Db <|s|> " <|nl|> <|12-s|> <|2-s|> + <|s|> " and <|s|> then <|s|> reload <|s|> the <|s|> multi - site <|s|> plugin . " ); <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> Stream . of ( check States ) . for Each ( list Pending Checks :: add State ); <|nl|>
<|4-s|> <|2-s|> Stream . of ( check States ) . for Each ( list Pending Checks :: add State ); <|nl|>
import <|s|> static <|s|> com . googlesource . gerrit . plugins . its . jira . Jira Config . PROJECT _ CONFIG _ PASSWORD _ KEY ; <|nl|> import <|s|> static <|s|> com . googlesource . gerrit . plugins . its . jira . Jira Config . PROJECT _ CONFIG _ URL _ KEY ; <|nl|> import <|s|> static <|s|> com . googlesource . gerrit . plugins . its . jira . Jira Config . PROJECT _ CONFIG _ USERNAME _ KEY ; <|nl|>
<|4-s|> <|2-s|> Ordering . natural ( ) . sorted Copy ( result . errors ) . for Each ( e <|s|> -> <|s|> logger . at Severe ( ) . log ( e ) ); <|nl|> <|4-s|> <|2-s|> Ordering . natural ( ) . sorted Copy ( result . warnings ) . for Each ( w <|s|> -> <|s|> logger . at Warning ( ) . log ( w ) ); <|nl|>
<|4-s|> <|2-s|> read Files . put ( Parser . combine ( project , <|s|> file ) , <|s|> content ); <|nl|>
<|4-s|> // <|s|> TODO : <|s|> Check <|s|> if <|s|> an <|s|> included <|s|> file <|s|> exists <|s|> and <|s|> that <|s|> it <|s|> has <|s|> valid <|s|> syntax . <|nl|>
<|4-s|> Set < String > <|s|> all Files ; <|s|> // <|s|> to <|s|> detect <|s|> recursive <|s|> inclusion <|s|> quickly <|nl|>
<|4-s|> <|2-s|> all Files . add ( combine ( project , <|s|> file ) ); <|nl|>
<|4-s|> <|2-s|> all Files . remove ( combine ( current Project ( ) , <|s|> current File ( ) ) ); <|nl|>
<|4-s|> <|2-s|> return <|s|> all Files . contains ( combine ( project , <|s|> file ) ); <|nl|>
<|4-s|> Push Type <|s|> push Type ; <|nl|>
<|4-s|> <|2-s|> total Changes <|s|> = <|s|> replaced . size ( ) <|s|> + <|s|> created . size ( ); <|nl|>
<|8-s|> . contains All Of ( <|nl|> <|12-s|> change Notes Ref , <|nl|> <|12-s|> patchset Ref ); <|s|> // <|s|> ' refs / sequences / changes ' <|s|> not <|s|> always <|s|> updated <|s|> thus <|s|> not <|s|> checked <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> throw <|s|> as Rest Api Exception ( " Cannot <|s|> retrieve <|s|> check " , <|s|> e ); <|nl|>
<|2-s|> static <|s|> < T <|s|> extends <|s|> Enum < T > <|s|> & <|s|> List Option > <|s|> Enum Set < T > <|s|> from Bits ( Class < T > <|s|> clazz , <|s|> int <|s|> v ) <|s|> { <|nl|> <|4-s|> Enum Set < T > <|s|> r <|s|> = <|s|> Enum Set . none Of ( clazz ); <|nl|> <|4-s|> T [ ] <|s|> values ; <|nl|>
<|2-s|> public <|s|> boolean <|s|> get ( Change Notes <|s|> notes , <|s|> Optional < String > <|s|> claimed Original ) <|nl|>
<|4-s|> return <|s|> pure Revert Cache . is Pure Revert ( <|nl|> <|8-s|> notes . get Project Name ( ) , <|nl|> <|8-s|> Object Id . from String ( notes . get Current Patch Set ( ) . get Revision ( ) . get ( ) ) , <|nl|> <|8-s|> claimed Original Object Id ); <|nl|>
<|2-s|> private <|s|> static <|s|> final <|s|> String <|s|> ID _ CACHE <|s|> = <|s|> " pure _ revert " ; <|nl|>
<|2-s|> <|s|> * <|s|> Returns <|s|> { @ code <|s|> true } <|s|> if <|s|> { @ code <|s|> claimed Revert } <|s|> is <|s|> a <|s|> pure <|s|> ( clean ) <|s|> revert <|s|> of <|s|> the <|s|> change <|s|> that <|s|> is <|nl|> <|2-s|> <|s|> * <|s|> referenced <|s|> in <|s|> { @ link <|s|> com . google . gerrit . reviewdb . client . Change # get Revert Of ( ) } . <|nl|>
<|8-s|> Object Id . from String ( change Notes . get Current Patch Set ( ) . get Revision ( ) . get ( ) ) ); <|nl|>
<|2-s|> <|s|> * <|s|> @ throws <|s|> IOException <|s|> if <|s|> there <|s|> was <|s|> a <|s|> problem <|s|> with <|s|> the <|s|> storage <|s|> layer <|nl|>
<|12-s|> throw <|s|> new <|s|> Bad Request Exception ( " can ' t <|s|> check <|s|> against <|s|> initial <|s|> commit " ); <|nl|>
<|4-s|> <|2-s|> return <|s|> pure Revert . get ( notes ( ) , <|s|> Optional . empty ( ) ); <|nl|> <|4-s|> } <|s|> catch <|s|> ( IOException <|s|> | <|s|> Bad Request Exception <|s|> | <|s|> Resource Conflict Exception <|s|> e ) <|s|> { <|nl|>
<|2-s|> public <|s|> void <|s|> serialization ( ) <|s|> { <|nl|>
<|2-s|> static <|s|> String <|s|> get File Key ( String <|s|> project , <|s|> String <|s|> file ) <|s|> { <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|del|> <|nl|>
<|nl|> <|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> When <|s|> deleting <|s|> a <|s|> Ref <|s|> this <|s|> temporary <|s|> Ref <|s|> Tombstone <|s|> will <|s|> be <|s|> created <|s|> and <|s|> then <|s|> cleaned - up <|s|> at <|s|> a <|s|> later <|nl|> <|2-s|> <|s|> * <|s|> stage <|s|> by <|s|> the <|s|> garbage <|s|> collection <|nl|> <|2-s|> <|s|> */ <|nl|>
<|del|> <|nl|>
<|2-s|> public <|s|> boolean <|s|> equals ( Object <|s|> other ) <|s|> { <|nl|> <|4-s|> if <|s|> ( this <|s|> == <|s|> other ) <|s|> { <|nl|>
<|8-s|> <|2-s|> " Error <|s|> trying <|s|> to <|s|> perform <|s|> CAS <|s|> at <|s|> path <|s|> % s " , <|s|> Zk Ref Info DAO . path For ( project Name , <|s|> new Ref ) ); <|nl|>
<|4-s|> <|2-s|> Zk Ref Info DAO <|s|> marshaller , <|nl|>
<|4-s|> <|2-s|> private <|s|> final <|s|> Zookeeper Test Container Support <|s|> zookeeper Container ; <|nl|>
<|4-s|> <|2-s|> install ( new <|s|> Validation Module ( multi Site Config ) ); <|nl|> <|nl|> <|4-s|> <|2-s|> listener ( ) . to Instance ( new <|s|> Zookeeper Stop At Shutdown ( zookeeper Container ) ); <|nl|>
<|2-s|> default <|s|> String <|s|> a Branch Ref ( ) <|s|> { <|nl|> <|4-s|> return <|s|> Ref Names . REFS _ HEADS <|s|> + <|s|> test Branch ( ); <|nl|>
<|4-s|> Object Id <|s|> object Id <|s|> = <|s|> AN _ OBJECT _ ID _ 1 ; <|nl|> <|4-s|> String <|s|> ref Name <|s|> = <|s|> a Branch Ref ( ); <|nl|>
<|4-s|> marshaller . create ( new <|s|> Zk Ref Info ( project Name , <|s|> old Ref ) ); <|nl|>
<|4-s|> in Zk . get ( ) . equals ( Tombstone Ref . for Ref ( old Ref ) ); <|nl|>
<|4-s|> final <|s|> Object Id <|s|> object Id <|s|> = <|s|> read Object Id At ( root Path <|s|> + <|s|> " / " <|s|> + <|s|> OBJECT _ ID _ PATH ); <|nl|>
<|4-s|> <|2-s|> @ Named ( " Zk Lock Timeout " ) <|s|> Duration <|s|> lock Timeout ) <|s|> { <|nl|>
import <|s|> com . google . gerrit . reviewdb . client . Change ; <|nl|> import <|s|> com . google . gerrit . reviewdb . client . Patch Set ; <|nl|>
<|del|> <|nl|>
<|4-s|> test Patch Set Id <|s|> = <|s|> result . get Patch Set Id ( ); <|nl|> <|4-s|> test Change Id <|s|> = <|s|> result . get Change Id ( ); <|nl|>
<|del|> <|nl|>
<|2-s|> public <|s|> void <|s|> disabled Checker Does Not Blocking Submit ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|>
<|2-s|> public <|s|> void <|s|> multiple Checker Blocking Submit ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|> <|4-s|> Checker Uuid <|s|> checker Uuid <|s|> = <|s|> new Required Checker ( ) . create ( ); <|nl|>
<|2-s|> <|s|> * <|8-s|> " owners " <|s|> found <|s|> in <|s|> lines <|s|> control <|s|> changed <|s|> files <|s|> in <|s|> ' dir ' . <|nl|>
<|2-s|> <|s|> * <|s|> For <|s|> an <|s|> ' include ' <|s|> statement , <|s|> parsed <|s|> data <|s|> is <|s|> all <|s|> appended <|s|> to <|s|> the <|s|> given <|s|> result <|s|> parameter . <|nl|>
<|2-s|> <|s|> * <|s|> The <|s|> inclusion <|s|> is <|s|> skipped <|s|> if <|s|> the <|s|> to <|s|> be <|s|> included <|s|> file <|s|> is <|s|> already <|s|> on <|s|> the <|s|> including <|s|> file <|s|> stack . <|nl|>
<|4-s|> // <|s|> contains Exactly <|s|> does <|s|> not <|s|> check <|s|> order <|s|> of <|s|> elements . <|nl|>
<|4-s|> configure Plugin ( " enforce Level " , <|s|> " ENFORCE " ); <|nl|> <|4-s|> Push One Commit . Result <|s|> r <|s|> = <|s|> create Change ( " test <|s|> message " , <|s|> " A / 1 / foo . c " , <|s|> " void <|s|> main ( ) \ n " ); <|nl|>
<|2-s|> <|s|> * <|s|> referenced <|s|> in <|s|> { @ link <|s|> Change # get Revert Of ( ) } . <|nl|>
<|4-s|> Change Notes <|s|> claimed Original <|s|> = <|nl|>
<|2-s|> @ Test <|nl|> <|2-s|> public <|s|> void <|s|> Test Dummy Repo Setup ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|> <|4-s|> create Test Repository Content ( ); <|nl|>
<|4-s|> Plugin Config <|s|> plugin Config <|s|> = <|nl|> <|8-s|> plugin Config Factory . get From Project Config With Inheritance ( project State , <|s|> plugin Name ); <|nl|>
<|4-s|> if <|s|> ( enforce Level <|s|> == <|s|> Enforcement Level . DISABLED ) <|s|> { <|nl|> <|4-s|> <|2-s|> this . logger <|nl|> <|8-s|> <|2-s|> . at Info ( ) <|nl|> <|8-s|> <|2-s|> . log ( <|nl|> <|12-s|> <|2-s|> " Owners File Rule <|s|> was <|s|> run <|s|> for <|s|> change <|s|> % s <|s|> but <|s|> enforcement <|s|> is <|s|> disabled <|s|> via <|s|> project . config " , <|nl|> <|12-s|> <|2-s|> Config . get Change Id ( cd ) ); <|nl|>
<|4-s|> <|2-s|> Owners Db <|s|> db <|s|> = <|nl|> <|8-s|> <|2-s|> Cache . get Instance ( plugin Config Factory , <|s|> repo Manager ) <|nl|> <|12-s|> <|2-s|> . get ( true , <|s|> project State , <|s|> accounts , <|s|> emails , <|s|> repo Manager , <|s|> plugin Config Factory , <|s|> cd ); <|nl|>
<|4-s|> if <|s|> ( result <|s|> >= <|s|> 0 ) <|s|> { <|nl|> <|4-s|> <|2-s|> sr . status <|s|> = <|s|> Status . OK ; <|nl|> <|4-s|> <|2-s|> return <|s|> Immutable List . of ( sr ); <|nl|>
<|2-s|> public <|s|> void <|s|> change Without Permissions ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|>
<|4-s|> if <|s|> ( ! exists ( root Path ) ) <|s|> { <|nl|> <|4-s|> <|2-s|> return <|s|> Optional . empty ( ); <|nl|> <|4-s|> } <|nl|>
<|8-s|> <|2-s|> . set Fallback Text ( " All <|s|> required <|s|> checks <|s|> must <|s|> pass " ) <|nl|> <|8-s|> <|2-s|> . set Type ( " checks _ pass " ) <|nl|>
<|8-s|> <|2-s|> . set Fallback Text ( " All <|s|> required <|s|> checks <|s|> must <|s|> pass " ) <|nl|> <|8-s|> <|2-s|> . set Type ( " checks _ pass " ) <|nl|>
<|del|> <|nl|>
<|4-s|> Project . Name Key <|s|> other Repo <|s|> = <|s|> new <|s|> Project . Name Key ( " All - Projects " ); <|nl|> <|4-s|> checker Operations . checker ( checker Uuid ) . for Update ( ) . repository ( other Repo ) . update ( ); <|nl|>
<|2-s|> static <|s|> byte [ ] <|s|> write Object Id ( Object Id <|s|> value ) <|s|> throws <|s|> IOException <|s|> { <|nl|>
<|8-s|> checkers . checkers Of ( resource . get Project ( ) ) . stream ( ) <|nl|>
<|4-s|> /* * <|s|> Backfills <|s|> checks <|s|> for <|s|> relevant <|s|> checkers <|s|> with <|s|> default <|s|> when <|s|> they <|s|> don ' t <|s|> exist <|s|> yet . <|s|> */ <|nl|> <|4-s|> public <|s|> abstract <|s|> boolean <|s|> backfill Checks ( ); <|nl|>
<|8-s|> new <|s|> Distributed Atomic Value ( client , <|s|> path For ( project Name , <|s|> old Ref , <|s|> new Ref ) , <|s|> retry Policy ); <|nl|>
<|8-s|> new <|s|> Distributed Atomic Value ( client , <|s|> path For ( project Name , <|s|> old Ref , <|s|> new Ref ) , <|s|> retry Policy ); <|nl|>
<|2-s|> @ Inject <|s|> private <|s|> All Projects Name <|s|> all Projects ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> checker Operations . checker ( checker Uuid ) . for Update ( ) . repository ( all Projects ) . update ( ); <|nl|>
<|4-s|> assert That ( change Info . submittable ) . is True ( ); <|nl|> <|4-s|> assert That ( change Info . requirements ) . is Empty ( ); <|nl|>
<|4-s|> assert That ( change Info . submittable ) . is False ( ); <|nl|> <|4-s|> assert That ( change Info . requirements ) . contains Exactly ( SUBMIT _ REQUIREMENT _ INFO ); <|nl|>
<|2-s|> @ Before <|nl|> <|2-s|> public <|s|> void <|s|> set Up ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|> <|4-s|> assume ( ) . that ( Note Db Mode . get ( ) ) . is Equal To ( Note Db Mode . ON ); <|nl|>
<|4-s|> <|2-s|> get Post Filtered Pending Checks ( cd . project ( ) , <|s|> cd . current Patch Set ( ) . get Id ( ) ) <|nl|>
<|4-s|> check ( " patch Set ( ) " ) . that ( patch Set ) . is Not Null ( ); <|nl|>
<|4-s|> Dynamic Set . bind ( binder ( ) , <|s|> Change Attribute Factory . class ) <|nl|>
<|nl|> <|2-s|> @ Test <|nl|> <|2-s|> public <|s|> void <|s|> all Blocking Conditions Considered ( ) <|s|> { <|nl|> <|4-s|> assert That ( Enum Set . all Of ( Blocking Condition . class ) ) . contains Exactly ( STATE _ NOT _ PASSING ); <|nl|> <|2-s|> } <|nl|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> if <|s|> ( ! opts . combined ) <|s|> { <|nl|>
<|8-s|> <|2-s|> check Key . repository ( ) , <|s|> ref Update , <|s|> current User . map ( user <|s|> -> <|s|> user . state ( ) ) . or Else ( null ) ); <|nl|>
<|2-s|> public <|s|> void <|s|> updating Check State Updates Cache ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|>
<|4-s|> <|s|> * <|s|> can <|s|> also <|s|> implement <|s|> a <|s|> way <|s|> to <|s|> clear <|s|> per <|s|> user <|s|> sessions . <|nl|> <|4-s|> <|s|> * <|nl|> <|4-s|> <|s|> * <|s|> @ return <|s|> account <|s|> ID . <|nl|>
<|nl|> <|4-s|> /* * <|nl|> <|4-s|> <|s|> * <|s|> This <|s|> is <|s|> public <|s|> so <|s|> that <|s|> plugins <|s|> that <|s|> implement <|s|> a <|s|> web <|s|> session , <|nl|> <|4-s|> <|s|> * <|s|> can <|s|> also <|s|> implement <|s|> a <|s|> way <|s|> to <|s|> clear <|s|> per <|s|> user <|s|> sessions . <|nl|> <|4-s|> <|s|> */ <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> assert Message ( e , <|s|> expected Message Parts ); <|nl|>
<|4-s|> check ( " get Type ( ) " ) . that ( type Name ( actual ( ) . get Type ( ) ) ) . is Equal To ( type Name ( expected Type ) ); <|nl|>
<|2-s|> public <|s|> static <|s|> Check <|s|> new Backfilled Check ( Project . Name Key <|s|> project , <|s|> Patch Set <|s|> ps , <|s|> Checker <|s|> checker ) <|s|> { <|nl|> <|4-s|> return <|s|> Check . builder ( Check Key . create ( project , <|s|> ps . get Id ( ) , <|s|> checker . get Uuid ( ) ) ) <|nl|>
<|8-s|> checker <|nl|> <|12-s|> . get ( ) <|nl|> <|12-s|> . query Matching Changes ( <|nl|> <|16-s|> retry Helper , <|s|> query Builder Provider . get ( ) , <|s|> change Query Processor Provider ); <|nl|> <|4-s|> Checker Uuid <|s|> checker Uuid <|s|> = <|s|> checker . get ( ) . get Uuid ( ); <|nl|>
<|8-s|> Enums . get If Present ( Check State . class , <|s|> value ) <|nl|> <|12-s|> . to Java Util ( ) <|nl|>
<|4-s|> this . checker Uuid <|s|> = <|s|> require Non Null ( checker Uuid , <|s|> " checker Uuid " ); <|nl|>
<|8-s|> && <|s|> servlet . matcher ( ( ( Http Servlet Request ) <|s|> req ) . get Servlet Path ( ) ) . matches ( ); <|nl|>
<|4-s|> check ( " trimmed Messages ( ) " ) . that ( got ) . contains At Least Elements In ( expected Lines ) . in Order ( ); <|nl|>
<|4-s|> assert That ( checkers By Repository Notes . get ( project ) ) . contains Exactly ( checker Uuid ); <|nl|> <|4-s|> assert That ( get Refs Meta Checkers State ( ) ) . is Equal To ( commit Id ); <|nl|>
<|4-s|> assert That ( checkers By Repository Notes . get ( project 2 ) ) . is Empty ( ); <|nl|> <|4-s|> assert That ( get Refs Meta Checkers State ( ) ) . is Equal To ( commit Id ); <|nl|>
<|2-s|> public <|s|> void <|s|> no Op Update ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|>
<|8-s|> log . at Warning ( ) . with Cause ( e ) . log ( " Cannot <|s|> check <|s|> project <|s|> access <|s|> permission " ); <|nl|>
<|2-s|> private <|s|> final <|s|> Filter <|s|> error Handler ; <|nl|>
public <|s|> final <|s|> class <|s|> Request Failure Exception <|s|> extends <|s|> Runtime Exception <|s|> { <|nl|>
<|4-s|> <|2-s|> Local Disk Repository Manager <|s|> local Disk Repository Manager ) <|s|> { <|nl|> <|4-s|> this . git Repository Manager <|s|> = <|s|> local Disk Repository Manager ; <|nl|> <|2-s|> } <|nl|> <|nl|> <|2-s|> public <|s|> Multi Site Git Repository Manager ( Git Repository Manager <|s|> git Repository Manager ) <|s|> { <|nl|>
<|4-s|> bind ( Git Repository Manager . class ) . to ( Multi Site Git Repository Manager . class ); <|nl|>
<|4-s|> bind ( Git Repository Manager . class ) . to ( Multi Site Git Repository Manager . class ); <|nl|>
<|4-s|> do Return ( true ) . when ( shared Ref Db ) . compare And Put ( A _ TEST _ PROJECT _ NAME , <|s|> old Ref , <|s|> new Ref ); <|nl|>
<|4-s|> <|2-s|> @ Assisted <|s|> Repository <|s|> repository ) <|s|> { <|nl|> <|4-s|> super ( new <|s|> Base Repository Builder ( ) ); <|nl|>
<|4-s|> return <|s|> multi Site Ref Database ; <|nl|>
<|2-s|> private <|s|> boolean <|s|> quiet ; <|nl|>
<|del|> <|nl|>
<|4-s|> return <|s|> wrap ( name , <|s|> git Repository Manager . open Repository ( name ) ); <|nl|>
<|4-s|> return <|s|> wrap ( name , <|s|> git Repository Manager . create Repository ( name ) ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> this ( new <|s|> File Based Config ( site Paths . etc _ dir . resolve ( MULTI _ SITE _ CONFIG ) . to File ( ) , <|s|> FS . DETECTED ) ); <|nl|>
<|2-s|> protected <|s|> void <|s|> configure ( ) <|s|> { <|nl|> <|4-s|> bind ( Destination Factory . class ) . in ( Scopes . SINGLETON ); <|nl|>
<|12-s|> <|2-s|> " Cannot <|s|> get <|s|> rate <|s|> limits <|s|> for <|s|> anonymous <|s|> access <|s|> from <|s|> remote <|s|> host <|s|> ' ' { } ' ' " , <|nl|> <|12-s|> <|2-s|> req . get Remote Host ( ) , <|nl|> <|12-s|> <|2-s|> e ); <|nl|>
<|8-s|> logger . error ( " Failed <|s|> to <|s|> post <|s|> heartbeat <|s|> event : <|s|> { } " , <|s|> e . get Message ( ) , <|s|> e ); <|nl|>
<|12-s|> <|2-s|> " % d <|s|> % ss <|s|> reindexed <|s|> in <|s|> % d <|s|> msec <|s|> ( % d / sec ) , <|s|> % d <|s|> failed " , <|nl|>
<|8-s|> <|2-s|> log . warn ( <|nl|> <|12-s|> <|2-s|> " Change <|s|> { } <|s|> seems <|s|> too <|s|> old <|s|> compared <|s|> compared <|s|> to <|s|> the <|s|> event <|s|> timestamp <|s|> ( event - Ts ={ } <|s|> >> <|s|> change - Ts ={ } ) " , <|nl|> <|12-s|> <|2-s|> id , <|nl|> <|12-s|> <|2-s|> index Event , <|nl|> <|12-s|> <|2-s|> change Ts ); <|nl|> <|8-s|> <|2-s|> reschedule Index ( id , <|s|> maybe Body , <|s|> retry Count ++ ); <|nl|>
<|4-s|> <|2-s|> log . at Severe ( ) . log ( " Failed <|s|> to <|s|> process <|s|> eviction <|s|> request : <|s|> % s " , <|s|> e . get Message ( ) ); <|nl|>
<|12-s|> <|2-s|> " Failed <|s|> to <|s|> % s <|s|> % s <|s|> on <|s|> % s <|s|> [ % d / % d ] " , <|s|> action , <|s|> key , <|s|> destination , <|s|> exec Cnt , <|s|> max Tries ); <|nl|>
<|12-s|> log . at Severe ( ) . with Cause ( ie ) . log ( <|nl|>
<|16-s|> + <|s|> " <|s|> Only <|s|> two <|s|> members <|s|> are <|s|> supported . <|s|> Members : <|s|> % s " , <|nl|>
<|8-s|> log . at Fine ( ) . log ( " Channel <|s|> bound <|s|> to <|s|> % s " , <|s|> address . get ( ) ); <|nl|>
<|4-s|> <|2-s|> Immutable List . of ( " refs / draft - comments / . * " , <|s|> " refs / changes / [ 0 - 9 ] + / [ 0 - 9 ] + / [ 0 - 9 ] + " ); <|nl|>
<|2-s|> private <|s|> final <|s|> Pattern <|s|> servlet Path <|s|> = <|nl|>
<|4-s|> if <|s|> ( ! self . get ( ) . is Identified User ( ) ) <|s|> { <|nl|>
<|del|> <|nl|>
<|4-s|> String <|s|> ref Name <|s|> = <|s|> ref . get Name ( ); <|nl|> <|4-s|> return <|s|> ref Name . starts With ( " refs / draft - comments " ) <|nl|> <|8-s|> || <|s|> ( ref Name . starts With ( " refs / changes " ) <|s|> && <|s|> ! ref Name . ends With ( " / meta " ) ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> return <|s|> ref Name <|s|> == <|s|> null <|nl|> <|8-s|> || <|s|> ref Name . starts With ( " refs / draft - comments " ) <|nl|>
<|8-s|> new <|s|> Distributed Atomic Value ( client , <|s|> path For ( project Name , <|s|> old Ref , <|s|> new Ref ) , <|s|> retry Policy ); <|nl|>
<|4-s|> assert That ( zookeeper Container . read Ref Value From Zk ( A _ TEST _ PROJECT _ NAME , <|s|> ref ) ) <|nl|> <|8-s|> . is Equal To ( ref . get Object Id ( ) ); <|nl|>
<|2-s|> Dispatch Command ( <|nl|> <|4-s|> <|2-s|> Permission Backend <|s|> permission Backend , <|nl|> <|4-s|> <|2-s|> @ Assisted <|s|> Map < String , <|s|> Command Provider > <|s|> all , <|nl|> <|4-s|> <|2-s|> Dynamic Set < Ssh Command Pre Execution Filter > <|s|> command Filters ) <|s|> { <|nl|>
<|8-s|> throw <|s|> new <|s|> Illegal Argument Exception ( " username <|s|> " <|s|> + <|s|> username <|s|> + <|s|> " <|s|> already <|s|> in <|s|> use " ); <|nl|>
<|2-s|> private <|s|> List < Destination > <|s|> all Destinations ; <|nl|>
<|2-s|> private <|s|> List < Destination > <|s|> all Destinations ; <|nl|>
<|del|> <|nl|>
<|8-s|> <|2-s|> Rev Walk <|s|> rw <|s|> = <|s|> new <|s|> Rev Walk ( repo ) ) <|s|> { <|nl|>
<|4-s|> Ref <|s|> null Ref <|s|> = <|s|> Shared Ref Database . NULL _ REF ; <|nl|>
<|4-s|> // <|s|> This <|s|> ref <|s|> should <|s|> be <|s|> ignored <|s|> even <|s|> if <|s|> new Ref <|s|> is <|s|> null <|nl|> <|4-s|> assert That ( zk Shared Ref Database . compare And Put ( A _ TEST _ PROJECT _ NAME , <|s|> existing Ref , <|s|> null Ref ) ) <|nl|>
<|4-s|> <|2-s|> try <|s|> { <|nl|> <|8-s|> replication Queue . get ( ) . stop ( ); <|nl|>
<|2-s|> private <|s|> List < Change Data > <|s|> execute Index Query With Retry ( Predicate < Change Data > <|s|> predicate ) <|nl|>
<|4-s|> return <|s|> execute Index Query With Retry ( create Query Predicate ( checker ) ); <|nl|>
<|nl|> <|2-s|> @ Test <|nl|> <|2-s|> public <|s|> void <|s|> verify Too Long Query ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|> <|4-s|> String <|s|> query <|s|> = <|s|> Checker Test Data . long Query With Supported Operators ( 5 ); <|nl|> <|4-s|> assert That ( query ) . is Equal To ( " file : foo <|s|> file : foo <|s|> file : foo <|s|> file : foo <|s|> file : foo " ); <|nl|> <|4-s|> Checker Query . clean ( query ); <|nl|> <|2-s|> } <|nl|> <|nl|>
<|8-s|> Future <?> <|s|> future <|s|> = <|s|> executor . submit ( evaluation Task ); <|nl|>
<|2-s|> private <|s|> void <|s|> add Task Listener ( Future <?> <|s|> future , <|s|> Evaluation Task <|s|> evaluation Task ) <|s|> { <|nl|> <|4-s|> Listenable Future <?> <|s|> listenable Future <|s|> = <|s|> Jdk Future Adapters . listen In Pool Thread ( future ); <|nl|>
<|2-s|> private <|s|> void <|s|> add Task Listener ( Future <?> <|s|> future , <|s|> Evaluation Task <|s|> evaluation Task ) <|s|> { <|nl|> <|4-s|> Listenable Future <?> <|s|> listenable Future <|s|> = <|s|> Jdk Future Adapters . listen In Pool Thread ( future ); <|nl|>
<|del|> <|nl|>
<|4-s|> when ( executor . submit ( task Same Path Not Completed ) ) . then Return ( new <|s|> Completable Future < > ( ) ); <|nl|>
<|2-s|> /* * <|s|> Name <|s|> of <|s|> the <|s|> access <|s|> section . <|s|> It <|s|> could <|s|> be <|s|> a <|s|> ref <|s|> pattern <|s|> or <|s|> something <|s|> else . <|s|> */ <|nl|>
<|2-s|> /* * <|s|> Name <|s|> of <|s|> the <|s|> access <|s|> section . <|s|> It <|s|> could <|s|> be <|s|> a <|s|> ref <|s|> pattern <|s|> or <|s|> something <|s|> else . <|s|> */ <|nl|>
<|del|> <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|8-s|> <|2-s|> Super Manifest Ref Updated Listener . trim Stack ( <|nl|>
<|4-s|> // <|s|> Create <|s|> normal User Group , <|s|> containing <|s|> user , <|s|> and <|s|> context User Group , <|s|> containing <|s|> context User <|nl|>
<|4-s|> // <|s|> Create <|s|> normal User Group , <|s|> containing <|s|> user , <|s|> and <|s|> context User Group , <|s|> containing <|s|> context User <|nl|>
<|4-s|> <|2-s|> Dynamic Set < Ssh Execute Command Interceptor > <|s|> command Interceptors , <|nl|> <|4-s|> <|2-s|> @ Assisted <|s|> Map < String , <|s|> Command Provider > <|s|> all ) <|s|> { <|nl|>
<|12-s|> <|2-s|> String . format ( <|nl|> <|16-s|> <|2-s|> " blocked <|s|> by <|s|> % s , <|s|> contact <|s|> gerrit <|s|> administrators <|s|> for <|s|> more <|s|> details " , <|nl|> <|16-s|> <|2-s|> command Interceptor . name ( ) ) ); <|nl|>
<|2-s|> <|s|> * <|s|> @ return <|s|> whether <|s|> or <|s|> not <|s|> this <|s|> command <|s|> with <|s|> these <|s|> arguments <|s|> can <|s|> be <|s|> executed <|nl|>
<|4-s|> <|2-s|> for <|s|> ( Ssh Execute Command Interceptor <|s|> command Interceptor <|s|> : <|s|> command Interceptors ) <|s|> { <|nl|> <|8-s|> if <|s|> ( ! command Interceptor . accept ( actual Command Name , <|s|> args ) ) <|s|> { <|nl|> <|8-s|> <|2-s|> throw <|s|> new <|s|> Unlogged Failure ( <|nl|> <|12-s|> <|2-s|> 126 , <|nl|> <|12-s|> <|2-s|> " blocked <|s|> by <|s|> " <|nl|> <|16-s|> <|2-s|> + <|s|> command Interceptor . name ( ) <|nl|> <|16-s|> <|2-s|> + <|s|> " , <|s|> contact <|s|> gerrit <|s|> administrators <|s|> for <|s|> more <|s|> details " ); <|nl|>
<|2-s|> <|s|> * <|s|> @ return <|s|> whether <|s|> or <|s|> not <|s|> this <|s|> command <|s|> with <|s|> this <|s|> arguments <|s|> can <|s|> be <|s|> executed <|nl|>
<|del|> <|nl|>
<|2-s|> public <|s|> void <|s|> stop ( ) <|s|> { <|nl|> <|4-s|> if <|s|> ( scheduled Cleanup Task <|s|> != <|s|> null ) <|s|> { <|nl|> <|4-s|> <|2-s|> scheduled Cleanup Task . cancel ( true ); <|nl|> <|4-s|> <|2-s|> scheduled Cleanup Task <|s|> = <|s|> null ; <|nl|> <|4-s|> } <|nl|>
<|del|> <|nl|>
<|12-s|> <|2-s|> try <|s|> ( Open Repo <|s|> all Users Repo <|s|> = <|s|> Open Repo . open ( repo Manager , <|s|> all Users Name ) ) <|s|> { <|nl|> <|16-s|> all Users Repo . add Updates ( draft Updates ); <|nl|>
<|4-s|> final <|s|> All Users Name <|s|> all Users ; <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> // <|s|> Don ' t <|s|> email <|s|> if <|s|> an <|s|> administrator <|s|> removed <|s|> a <|s|> password <|s|> on <|s|> behalf <|s|> of <|s|> the <|s|> user . <|nl|>
<|4-s|> <|2-s|> delete Key Factory . create ( user , <|s|> " SSH " ) . send ( ); <|nl|>
<|8-s|> <|2-s|> " Cannot <|s|> send <|s|> SSH <|s|> key <|s|> deletion <|s|> message <|s|> to <|s|> { } " , <|s|> user . get Account ( ) . get Preferred Email ( ) , <|s|> e ); <|nl|>
<|del|> <|nl|>
<|2-s|> private <|s|> void <|s|> validate Batch Ref Update And Apply ( <|nl|>
<|4-s|> <|2-s|> logger . at Warning ( ) . log ( " Failed <|s|> to <|s|> process <|s|> batch <|s|> update <|s|> % s " , <|s|> e . get Message ( ) ); <|nl|>
<|16-s|> <|8-s|> old Refs . get Or Default ( cmd . get New Id ( ) , <|s|> shared Ref Db . NULL _ REF ) , <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> boolean <|s|> is In Sync ; <|nl|>
<|8-s|> throw <|s|> new <|s|> No Such Element Exception ( error Message ); <|nl|>
<|4-s|> <|2-s|> String <|s|> error Message <|s|> = <|s|> " Failing <|s|> batch <|s|> execute Wrapper <|s|> in <|s|> Multi Site Batch Ref Update " ; <|nl|> <|4-s|> <|2-s|> logger . at Warning ( ) . with Cause ( e ) . log ( error Message ); <|nl|>
<|16-s|> " Unable <|s|> to <|s|> create <|s|> ref <|s|> ' % s ' , <|s|> trying <|s|> to <|s|> create <|s|> a <|s|> new <|s|> ref <|s|> but <|s|> there <|s|> is <|s|> a <|s|> value <|s|> " <|nl|>
<|2-s|> } <|nl|> <|nl|> <|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> Verify <|s|> if <|s|> the <|s|> DB <|s|> contains <|s|> a <|s|> value <|s|> for <|s|> the <|s|> specific <|s|> project <|s|> and <|s|> ref <|s|> name <|nl|> <|2-s|> <|s|> * <|nl|> <|2-s|> <|s|> * <|s|> @ param <|s|> project Name <|nl|> <|2-s|> <|s|> * <|s|> @ param <|s|> ref Name <|nl|> <|2-s|> <|s|> * <|s|> @ return <|nl|> <|2-s|> <|s|> */ <|nl|> <|2-s|> boolean <|s|> exists ( String <|s|> project Name , <|s|> String <|s|> ref Name ) <|s|> throws <|s|> Exception ; <|nl|>
<|4-s|> if <|s|> ( ignore Ref In Shared Db ( More Objects . first Non Null ( old Ref . get Name ( ) , <|s|> new Ref . get Name ( ) ) ) <|s|> { <|nl|>
<|nl|>
<|del|> <|nl|>
<|8-s|> new <|s|> Zk Shared Ref Database ( zookeeper Container . get Curator ( ) , <|s|> new <|s|> Retry NTimes ( 5 , <|s|> 30 ) , <|s|> 1000 l ); <|nl|>
<|4-s|> <|2-s|> // <|s|> Don ' t <|s|> email <|s|> if <|s|> an <|s|> administrator <|s|> removed <|s|> a <|s|> key <|s|> on <|s|> behalf <|s|> of <|s|> the <|s|> user . <|nl|>
<|8-s|> <|2-s|> " Cannot <|s|> send <|s|> Http Password <|s|> added <|s|> or <|s|> changed <|s|> message <|s|> to <|s|> { } " , <|nl|> <|8-s|> <|2-s|> user . get Account ( ) . get Preferred Email ( ) , <|s|> e ); <|nl|>
<|2-s|> /* * <|s|> ID <|s|> of <|s|> commit . <|s|> */ <|nl|>
<|2-s|> // <|s|> directly , <|s|> and <|s|> instead <|s|> use <|s|> the <|s|> public <|s|> getter / setter <|s|> that <|s|> wraps <|s|> an <|s|> Object Id . <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|4-s|> return <|s|> abbreviate Name ( id , <|s|> ABBREV _ STR _ LEN ); <|nl|>
<|2-s|> <|s|> * <|s|> @ param <|s|> n <|s|> number <|s|> of <|s|> hex <|s|> chars , <|s|> 1 <|s|> to <|s|> 40 . <|nl|>
<|2-s|> <|s|> * <|4-s|> <|s|> chars . <|nl|> <|2-s|> <|s|> * <|s|> @ throws <|s|> IOException <|s|> if <|s|> an <|s|> error <|s|> occurs <|s|> while <|s|> looking <|s|> for <|s|> ambiguous <|s|> objects . <|nl|>
<|2-s|> <|s|> * <|s|> @ param <|s|> n <|s|> minimum <|s|> number <|s|> of <|s|> hex <|s|> chars , <|s|> 1 <|s|> to <|s|> 40 . <|nl|>
<|2-s|> <|s|> * <|4-s|> <|s|> { @ code <|s|> n } <|s|> chars . <|nl|> <|2-s|> <|s|> * <|s|> @ throws <|s|> IOException <|s|> if <|s|> an <|s|> error <|s|> occurs <|s|> while <|s|> looking <|s|> for <|s|> ambiguous <|s|> objects . <|nl|>
<|4-s|> return <|s|> " implicit <|s|> merge <|s|> of <|s|> " <|s|> + <|s|> abbreviate Name ( commit ); <|nl|>
<|4-s|> // <|s|> Recipe <|s|> for <|s|> creating <|s|> ambiguous <|s|> IDs <|s|> courtesy <|s|> of <|s|> git <|s|> core : <|nl|> <|4-s|> // <|s|> https :// github . com / git / git / blob / df 799 f 5 d 99 ac 51 d 4 fc 791 d 546 de 3 f 9360885 82 fc / t / t 1512 - rev - parse - disambiguation . sh <|nl|>
<|4-s|> return <|s|> " implicit <|s|> merge <|s|> of <|s|> " <|s|> + <|s|> abbreviate Name ( commit ); <|nl|>
<|nl|> <|2-s|> public <|s|> Path <|s|> ensure For Backend ( Lfs Backend <|s|> backend ) <|s|> throws <|s|> IOException <|s|> { <|nl|> <|4-s|> return <|s|> get For Backend ( backend , <|s|> true ); <|nl|> <|2-s|> } <|nl|> <|nl|>
<|4-s|> <|2-s|> Path <|s|> ensured <|s|> = <|s|> Files . create Directories ( Paths . get ( data Dir ) ); <|nl|>
<|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> Returns <|s|> the <|s|> name <|s|> of <|s|> the <|s|> REST <|s|> API <|s|> handler <|s|> that <|s|> is <|s|> in <|s|> the <|s|> stack <|s|> trace <|s|> of <|s|> the <|s|> caller <|s|> of <|s|> this <|nl|> <|2-s|> <|s|> * <|s|> method . <|nl|> <|2-s|> <|s|> */ <|nl|>
<|16-s|> <|4-s|> <|2-s|> first Non Null ( Note Db Util . guess Rest Api Handler ( ) , <|s|> " Update <|s|> Note Db <|s|> refs <|s|> async " ) , <|nl|> <|16-s|> <|4-s|> <|2-s|> false ); <|nl|>
<|2-s|> public <|s|> void <|s|> mark Comment Published ( Comment <|s|> c ) <|s|> { <|nl|> <|4-s|> check State ( ! delete . contains Key ( key ( c ) ) , <|s|> " comment <|s|> already <|s|> marked <|s|> for <|s|> deletion " ); <|nl|>
<|4-s|> <|2-s|> boolean <|s|> publish Only <|s|> = <|s|> draft Updates . values ( ) . stream ( ) . all Match ( Change Draft Update :: can Run Async ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> public <|s|> List < Top Menu . Menu Entry > <|s|> top Menus ( ) <|s|> throws <|s|> Rest Api Exception <|s|> { <|nl|>
<|2-s|> protected <|s|> void <|s|> do Index ( String <|s|> id , <|s|> Optional < Change Index Event > <|s|> index Event ) <|s|> { <|nl|>
<|16-s|> cols Proto <|nl|> <|16-s|> <|4-s|> . to Builder ( ) <|nl|>
<|4-s|> <|2-s|> logger . at Severe ( ) . log ( <|nl|>
<|4-s|> <|2-s|> @ Nullable <|s|> Project State <|s|> project State , <|nl|>
<|2-s|> private <|s|> static <|s|> final <|s|> String <|s|> NAME <|s|> = <|s|> " combined _ check _ state " ; <|nl|>
<|12-s|> <|2-s|> Field . of Boolean ( <|nl|> <|16-s|> <|2-s|> " updated " , <|s|> " whether <|s|> reloading <|s|> resulted <|s|> in <|s|> updating <|s|> the <|s|> cached <|s|> value " ) ); <|nl|>
<|4-s|> void <|s|> record Reload ( boolean <|s|> updated , <|s|> Duration <|s|> elapsed ) <|s|> { <|nl|> <|4-s|> <|2-s|> reload Latency . record ( updated , <|s|> elapsed . to Nanos ( ) , <|s|> NANOSECONDS ); <|nl|> <|4-s|> <|2-s|> reload Count . increment And Get ( updated ); <|nl|>
<|4-s|> <|2-s|> metrics . record Reload ( updated , <|s|> sw . elapsed ( ) ); <|nl|>
<|4-s|> Check Input <|s|> check Input <|s|> = <|s|> new <|s|> Check Input ( ); <|nl|> <|4-s|> check Input . state <|s|> = <|s|> Check State . FAILED ; <|nl|> <|4-s|> checks Api Factory . revision ( ps Id ) . id ( checker Uuid ) . update ( check Input ); <|nl|> <|nl|>
<|4-s|> expect ( cd . project ( ) ) . and Return ( Project . name Key ( " My - Project " ) ); <|nl|> <|4-s|> expect ( cd . get Id ( ) ) . and Return ( Change . id ( 1 ) ); <|nl|> <|4-s|> expect ( cd . current Patch Set ( ) ) . and Throw ( new <|s|> Storage Exception ( " Fail <|s|> for <|s|> test " ) ); <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|2-s|> private <|s|> Change <|s|> new Change ( ) <|s|> { <|nl|>
<|del|> <|nl|>
<|2-s|> <|s|> * <|s|> @ param <|s|> check State Count <|s|> count <|s|> of <|s|> check <|s|> states . <|nl|>
<|4-s|> <|s|> * <|s|> @ return <|s|> the <|s|> { @ link <|s|> Check State Count } <|s|> of <|s|> the <|s|> given <|s|> state <|s|> map . <|nl|>
<|4-s|> <|2-s|> for <|s|> ( Map . Entry < Check State , <|s|> Boolean > <|s|> check State And Required State <|s|> : <|nl|> <|8-s|> <|2-s|> states And Required . entries ( ) ) <|s|> { <|nl|> <|8-s|> Check State <|s|> state <|s|> = <|s|> check State And Required State . get Key ( ); <|nl|>
<|nl|> <|4-s|> Patch Set . Id <|s|> current Path Set Id ; <|nl|>
<|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> Check <|s|> if <|s|> a <|s|> ref Name <|s|> should <|s|> be <|s|> ignored <|s|> by <|s|> shared <|s|> Ref - Db <|nl|> <|2-s|> <|s|> * <|nl|> <|2-s|> <|s|> * <|s|> @ param <|s|> ref Name <|nl|> <|2-s|> <|s|> * <|s|> @ return <|s|> true <|s|> if <|s|> ref <|s|> should <|s|> be <|s|> ignored ; <|s|> false <|s|> otherwise <|nl|> <|2-s|> <|s|> */ <|nl|> <|2-s|> default <|s|> boolean <|s|> is Ref To Be Ignored By Shared Ref Db ( String <|s|> ref Name ) <|s|> { <|nl|>
<|8-s|> PRODUCTION , <|s|> Lib Module Loader . load Modules ( cfg Injector , <|s|> Lib Module Type . DB _ MODULE ) ); <|nl|>
/* * <|s|> Loadable <|s|> module <|s|> type <|s|> for <|s|> the <|s|> different <|s|> Gerrit <|s|> injectors . <|s|> */ <|nl|>
<|2-s|> <|s|> * <|s|> Returns <|s|> the <|s|> module <|s|> type <|s|> for <|s|> lib Module <|s|> loaded <|s|> from <|s|> < gerrit _ site / lib > <|s|> directory . <|nl|>
<|2-s|> protected <|s|> void <|s|> do Index ( Account . Id <|s|> id , <|s|> Optional < Index Event > <|s|> index Event ) <|s|> { <|nl|>
<|2-s|> private <|s|> static <|s|> final <|s|> double <|s|> CHANGE _ NUM _ DOUBLE <|s|> = <|s|> CHANGE _ NUM ; <|nl|>
<|2-s|> private <|s|> final <|s|> String <|s|> ALL <|s|> = <|s|> " . * " ; <|nl|>
<|4-s|> <|2-s|> existing Or Default Ref . put ( <|nl|> <|8-s|> <|2-s|> ref Name , <|s|> Enforce Policy . value Of ( ref And Policy [ 1 ] . trim ( ) . to Upper Case ( ) ) ); <|nl|> <|nl|> <|4-s|> <|2-s|> project And Refs Enforcements . put ( project Name , <|s|> existing Or Default Ref ); <|nl|>
<|8-s|> Optional . of Nullable ( <|nl|> <|16-s|> Optional . of Nullable ( PREDEF _ ENFORCEMENTS . get ( project Name ) . get ( ref Name ) ) <|nl|> <|16-s|> <|4-s|> . or Else Get ( ( ) <|s|> -> <|s|> PREDEF _ ENFORCEMENTS . get ( project Name ) . get ( ALL ) ) ) <|nl|> <|12-s|> . or Else Get ( ( ) <|s|> -> <|s|> PREDEF _ ENFORCEMENTS . get ( project Name ) . get ( ref Name ) ); <|nl|>
<|8-s|> Optional . of Nullable ( <|nl|> <|16-s|> Optional . of Nullable ( PREDEF _ ENFORCEMENTS . get ( project Name ) . get ( ref Name ) ) <|nl|> <|16-s|> <|4-s|> . or Else Get ( ( ) <|s|> -> <|s|> PREDEF _ ENFORCEMENTS . get ( project Name ) . get ( ALL ) ) ) <|nl|> <|12-s|> . or Else Get ( ( ) <|s|> -> <|s|> PREDEF _ ENFORCEMENTS . get ( project Name ) . get ( ref Name ) ); <|nl|>
<|2-s|> boolean <|s|> is Up To Date ( String <|s|> project , <|s|> Ref <|s|> ref ) <|s|> throws <|s|> IOException ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> return <|s|> read Object Id ( value In Zk ) . equals ( ref . get Object Id ( ) ); <|nl|>
<|2-s|> public <|s|> Locker <|s|> lock Ref ( String <|s|> project , <|s|> Ref <|s|> ref ) <|s|> throws <|s|> IOException <|s|> { <|nl|>
<|4-s|> <|2-s|> throw <|s|> new <|s|> Shared Lock Exception ( project , <|s|> ref , <|s|> e ); <|nl|>
<|4-s|> Multi Site Batch Ref Update <|s|> create ( String <|s|> project , <|s|> Ref Database <|s|> ref Db ); <|nl|>
<|12-s|> batch Ref Update , <|s|> ( ) <|s|> -> <|s|> batch Ref Update . execute ( walk , <|s|> monitor , <|s|> options ) ); <|nl|>
<|12-s|> batch Ref Update , <|s|> ( ) <|s|> -> <|s|> batch Ref Update . execute ( walk , <|s|> monitor ) ); <|nl|>
<|4-s|> <|2-s|> @ Assisted <|s|> Ref Database <|s|> ref Db ) <|s|> { <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> return <|s|> do Execute Ref Update ( ref Update , <|s|> ref Update Function ); <|nl|> <|4-s|> } <|s|> catch <|s|> ( Shared Db Split Brain Exception <|s|> e ) <|s|> { <|nl|> <|4-s|> <|2-s|> validation Metrics . increment Split Brain ( ); <|nl|>
<|del|> <|nl|>
<|4-s|> } <|nl|> <|nl|>
<|2-s|> protected <|s|> Ref Pair <|s|> new Ref Pair From ( Ref Update <|s|> ref Update ) <|s|> throws <|s|> IOException <|s|> { <|nl|> <|4-s|> return <|s|> new <|s|> Ref Pair ( ref Db . get Ref ( ref Update . get Name ( ) ) , <|s|> ref Update . get Ref ( ) ); <|nl|>
<|2-s|> protected <|s|> Ref Pair <|s|> new Ref Pair From ( Ref Update <|s|> ref Update ) <|s|> throws <|s|> IOException <|s|> { <|nl|> <|4-s|> return <|s|> new <|s|> Ref Pair ( ref Db . get Ref ( ref Update . get Name ( ) ) , <|s|> ref Update . get Ref ( ) ); <|nl|>
<|4-s|> <|2-s|> @ Assisted <|s|> Ref Database <|s|> ref Db ) <|s|> { <|nl|>
<|4-s|> <|2-s|> @ Assisted <|s|> Ref Database <|s|> ref Db ) <|s|> { <|nl|>
<|2-s|> <|nl|> <|2-s|> public <|s|> Ref Update . Result <|s|> execute Ref Update ( <|nl|> <|4-s|> <|2-s|> Ref Update <|s|> ref Update , <|nl|> <|4-s|> <|2-s|> No Parameter Function < Ref Update . Result > <|s|> git Update Fun ) <|nl|>
<|2-s|> <|nl|> <|2-s|> public <|s|> Ref Update . Result <|s|> execute Ref Update ( <|nl|> <|4-s|> <|2-s|> Ref Update <|s|> ref Update , <|nl|> <|4-s|> <|2-s|> No Parameter Function < Ref Update . Result > <|s|> git Update Fun ) <|nl|>
<|4-s|> <|2-s|> if <|s|> ( local Ref <|s|> != <|s|> null ) <|s|> { <|nl|> <|8-s|> is In Sync <|s|> = <|s|> shared Ref Db . is Up To Date ( project Name , <|s|> local Ref ); <|nl|>
@ Run With ( Mockito JUnit Runner . class ) <|nl|> @ Ignore <|s|> // <|s|> The <|s|> focus <|s|> of <|s|> this <|s|> test <|s|> suite <|s|> is <|s|> unclear <|s|> and <|s|> all <|s|> tests <|s|> are <|s|> failing <|s|> when <|s|> the <|s|> code <|s|> is <|nl|> <|8-s|> // <|s|> working , <|s|> and <|s|> the <|s|> other <|s|> way <|s|> around <|nl|>
<|8-s|> update Shared Db Or Throw Exception For ( ref Pair For Update ); <|nl|>
<|4-s|> Rest Api Exception <|s|> thrown <|s|> = <|s|> assert Throws ( err Type , <|s|> ( ) <|s|> -> <|s|> branch ( branch ) . create ( in ) ); <|nl|> <|4-s|> if <|s|> ( err Msg <|s|> != <|s|> null ) <|s|> { <|nl|> <|4-s|> <|2-s|> assert That ( thrown ) . has Message That ( ) . contains ( err Msg ); <|nl|> <|4-s|> } <|nl|>
<|4-s|> Review Input <|s|> post Submit Review 1 <|s|> = <|s|> new <|s|> Review Input ( ); <|nl|> <|4-s|> post Submit Review 1 . label ( P . get Name ( ) , <|s|> P . get Max ( ) . get Value ( ) ); <|nl|> <|4-s|> revision ( r ) . review ( post Submit Review 1 ); <|nl|>
<|4-s|> data . put ( " static Resource Path " , <|s|> sanitized Static Path ); <|nl|>
<|4-s|> Map < String , <|s|> Object > <|s|> data <|s|> = <|s|> new <|s|> Hash Map < > ( ); <|nl|>
<|del|> <|nl|>
<|4-s|> Patch Set . Builder <|s|> builder <|s|> = <|nl|> <|8-s|> Patch Set . builder ( ) <|nl|> <|12-s|> . id ( patch Set Id Converter . from Proto ( proto . get Id ( ) ) ) <|nl|> <|12-s|> . groups ( <|nl|> <|16-s|> proto . has Groups ( ) <|s|> ? <|s|> Patch Set . split Groups ( proto . get Groups ( ) ) <|s|> : <|s|> Immutable List . of ( ) ); <|nl|>
<|2-s|> public <|s|> void <|s|> get Branch Returns Correct Branch For Two Digits Versions ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|>
<|s|> * <|8-s|> <|s|> delegate . do Filter ( req , <|s|> res , <|s|> chain ); <|nl|>
<|4-s|> INCORRECT _ OBJECT _ TYPE ( SC _ BAD _ REQUEST ) , <|nl|>
<|nl|> /* * <|s|> Assertion <|s|> methods <|s|> for <|s|> Gitiles . <|s|> */ <|nl|>
<|8-s|> <|2-s|> . to ( Custom Shared Ref Enforcement By Project . class ) <|nl|> <|8-s|> <|2-s|> . in ( Scopes . SINGLETON ); <|nl|>
<|16-s|> <|2-s|> account State . get User Name ( ) . is Present ( ) <|nl|>
<|4-s|> <|2-s|> return <|s|> new <|s|> File Extension Predicate ( ext ); <|nl|>
<|del|> <|nl|>
<|4-s|> // <|s|> Cache <|s|> hasn ' t <|s|> yet <|s|> populated <|s|> during <|s|> update . <|nl|> <|4-s|> // <|s|> TODO ( xchangcheng ): <|s|> still <|s|> initialize <|s|> the <|s|> cache <|s|> early <|s|> without <|s|> doing <|s|> in <|s|> the <|s|> submit <|s|> rule . <|nl|>
<|4-s|> if <|s|> ( args . get Schema ( ) . has Field ( Change Field . EXTENSION ) ) <|s|> { <|nl|> <|4-s|> <|2-s|> if <|s|> ( ext . is Empty ( ) <|s|> && <|s|> Index Module . get Index Type ( cfg ) . equals ( Index Type . ELASTICSEARCH ) ) <|s|> { <|nl|> <|8-s|> return <|s|> new <|s|> File With No Extension In Elastic Predicate ( ); <|nl|> <|4-s|> <|2-s|> } <|nl|>
<|2-s|> public <|s|> Missing Mandatory Plugins Exception ( Collection < String > <|s|> plugin Names ) <|s|> { <|nl|>
<|2-s|> private <|s|> static <|s|> String <|s|> get Message ( Collection < String > <|s|> plugin Names ) <|s|> { <|nl|>
<|4-s|> <|2-s|> throw <|s|> new <|s|> Missing Mandatory Plugins Exception ( missing Mandatory ); <|nl|>
<|del|> <|nl|>
<|4-s|> return <|s|> get Index Type ( injector . get Instance ( Key . get ( Config . class , <|s|> Gerrit Server Config . class ) ) ); <|nl|>
<|4-s|> return <|s|> cfg <|s|> != <|s|> null <|s|> ? <|s|> cfg . get Enum ( " index " , <|s|> null , <|s|> " type " , <|s|> Index Type . LUCENE ) <|s|> : <|s|> Index Type . LUCENE ; <|nl|>
<|2-s|> protected <|s|> Change Query Builder ( Definition < Change Data , <|s|> Change Query Builder > <|s|> def , <|s|> Arguments <|s|> args ) <|s|> { <|nl|> <|4-s|> super ( def , <|s|> args . op Factories ); <|nl|>
<|4-s|> <|2-s|> if <|s|> ( ext . is Empty ( ) <|s|> && <|s|> Index Module . get Index Type ( cfg ) . equals ( Index Type . ELASTICSEARCH ) ) <|s|> { <|nl|> <|8-s|> return <|s|> new <|s|> File With No Extension In Elastic Predicate ( ); <|nl|>
<|4-s|> abandon If Mergeable <|s|> = <|s|> cfg . get Boolean ( SECTION , <|s|> null , <|s|> KEY _ ABANDON _ IF _ MERGEABLE , <|s|> true ); <|nl|> <|4-s|> cleanup Account Patch Review <|s|> = <|nl|> <|8-s|> cfg . get Boolean ( SECTION , <|s|> null , <|s|> KEY _ CLEANUP _ ACCOUNT _ PATCH _ REVIEW , <|s|> false ); <|nl|>
<|4-s|> Project Config <|s|> cached Project Config 2 <|s|> = <|s|> project Cache . checked Get ( key ) . get Config ( ); <|nl|> <|4-s|> assert That ( cached Project Config 2 ) . is Not Same Instance As ( project Config ); <|nl|> <|4-s|> assert That ( cached Project Config 2 . get Project ( ) . get Description ( ) ) . is Empty ( ); <|nl|>
<|4-s|> return <|s|> check ( " get Sections ( ) " ) . that ( config . get Sections ( ) ); <|nl|>
<|s|> * <|s|> A <|s|> marker <|s|> to <|s|> say <|s|> a <|s|> method / type / field <|s|> is <|s|> added <|s|> or <|s|> is <|s|> increased <|s|> to <|s|> public <|s|> solely <|s|> because <|s|> it <|s|> is <|nl|> <|s|> * <|s|> called <|s|> from <|s|> inside <|s|> a <|s|> project <|s|> or <|s|> an <|s|> organisation <|s|> using <|s|> Gerrit . <|nl|>
<|2-s|> Runway Status <|s|> request Runway ( Push One <|s|> op ) <|s|> { <|nl|>
<|4-s|> <|2-s|> Delete Key Sender . Factory <|s|> delete Key Sender Factory ) <|s|> { <|nl|>
<|2-s|> private <|s|> final <|s|> Add Key Sender . Factory <|s|> add Key Sender Factory ; <|nl|> <|2-s|> private <|s|> final <|s|> Delete Key Sender . Factory <|s|> delete Key Sender Factory ; <|nl|>
<|12-s|> <|2-s|> delete Key Sender Factory <|nl|> <|16-s|> <|2-s|> . create ( user , <|s|> to Remove . stream ( ) . map ( Fingerprint :: to String ) . collect ( to List ( ) ) ) <|nl|>
<|2-s|> private <|s|> final <|s|> Delete Key Sender . Factory <|s|> delete Key Sender Factory ; <|nl|>
<|4-s|> Delete Key Sender <|s|> create ( Identified User <|s|> user , <|s|> List < String > <|s|> gpg Key Fingerprints ); <|nl|>
<|4-s|> Delete Key Sender <|s|> create ( Identified User <|s|> user , <|s|> List < String > <|s|> gpg Key Fingerprints ); <|nl|>
<|4-s|> this . gpg Key Fingerprints <|s|> = <|s|> Collections . empty List ( ); <|nl|>
<|4-s|> <|2-s|> @ Assisted <|s|> List < String > <|s|> gpg Key Fingerprints ) <|s|> { <|nl|>
<|4-s|> this . gpg Key Fingerprints <|s|> = <|s|> gpg Key Fingerprints ; <|nl|>
<|4-s|> throw <|s|> new <|s|> Illegal State Exception ( " key <|s|> type <|s|> is <|s|> not <|s|> SSH <|s|> or <|s|> GPG " ); <|nl|>
<|2-s|> public <|s|> String <|s|> get Gpg Key Fingerprints ( ) <|s|> { <|nl|> <|4-s|> if <|s|> ( ! gpg Key Fingerprints . is Empty ( ) ) <|s|> { <|nl|> <|4-s|> <|2-s|> return <|s|> Joiner . on ( " \ n " ) . join ( gpg Key Fingerprints ); <|nl|>
<|2-s|> <|s|> * <|s|> Records <|s|> a <|s|> permission <|s|> to <|s|> be <|s|> updated . <|nl|>
<|4-s|> <|2-s|> abstract <|s|> Builder <|s|> name ( String <|s|> name ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|nl|> <|2-s|> @ Test ( expected <|s|> = <|s|> Illegal Argument Exception . class ) <|nl|> <|2-s|> public <|s|> void <|s|> test Get Index Thread Pool Size With Invalid Size ( ) <|s|> { <|nl|> <|4-s|> global Plugin Config . set String ( INDEX _ SECTION , <|s|> null , <|s|> THREAD _ POOL _ SIZE _ KEY , <|s|> INVALID _ INT ); <|nl|> <|4-s|> get Configuration ( ) . index ( ) . thread Pool Size ( ); <|nl|> <|2-s|> } <|nl|> <|nl|>
<|4-s|> Map < String , <|s|> List < Event >> <|s|> events By Type <|s|> = <|s|> receive Events By Type ( dropped Events Queue ); <|nl|> <|4-s|> assert That ( events By Type ) . is Not Empty ( ); <|nl|> <|nl|>
<|del|> <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|2-s|> /* * <|s|> Starts <|s|> a <|s|> builder <|s|> for <|s|> allowing <|s|> a <|s|> permission . <|s|> */ <|nl|>
<|2-s|> <|s|> * <|s|> quota <|s|> issues <|s|> so <|s|> that <|s|> the <|s|> user <|s|> gets <|s|> throttled ) . <|nl|> <|2-s|> <|s|> * <|nl|> <|2-s|> <|s|> * <|s|> < p > Will <|s|> not <|s|> be <|s|> called <|s|> if <|s|> the <|s|> { @ link <|s|> # request Tokens ( String , <|s|> Quota Request Context , <|s|> long ) } <|s|> call <|nl|> <|2-s|> <|s|> * <|s|> returned <|s|> { @ link <|s|> Quota Response . Status # NO _ OP } . <|nl|>
<|del|> <|nl|>
<|8-s|> <|2-s|> ui . message ( String . format ( " ... <|s|> migrated <|s|> % d <|s|> users " , <|s|> i ) ); <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> // <|s|> Pop <|s|> up <|s|> to <|s|> the <|s|> top - level <|s|> source <|s|> folder <|s|> by <|s|> looking <|s|> for <|s|> WORKSPACE . <|nl|>
<|2-s|> protected <|s|> Builder <|s|> add Actions ( Builder <|s|> builder , <|s|> Id <|s|> c ) <|s|> { <|nl|> <|4-s|> return <|s|> builder . add Action ( delete ( OPEN _ CHANGES , <|s|> c ) ) . add Action ( delete ( OPEN _ CHANGES , <|s|> c ) ); <|nl|>
<|2-s|> private <|s|> final <|s|> boolean <|s|> omit Type ; <|nl|>
<|2-s|> private <|s|> Integer <|s|> get Major ( ) <|s|> { <|nl|> <|4-s|> return <|s|> Integer . value Of ( version . split ( " \ \ . " ) [ 0 ] ); <|nl|>
<|del|> <|nl|>
<|8-s|> check Label Name ( result . name ( ) ); <|nl|>
<|8-s|> . contains Exactly ( <|nl|> <|12-s|> " abandon " , <|s|> " group <|s|> global : Registered - Users " , <|nl|> <|12-s|> " abandon " , <|s|> " group <|s|> global : P roject - Owners " ); <|nl|>
<|16-s|> expected <|s|> ? <|s|> " expected <|s|> to <|s|> notify " <|s|> : <|s|> " expected <|s|> not <|s|> to <|s|> notify " , <|nl|> <|16-s|> type <|s|> + <|s|> " : <|s|> " <|s|> + <|s|> users . email To Name ( email ) ) , <|nl|> <|12-s|> fact ( " but <|s|> notified " , <|s|> recipient Map To String ( recipients , <|s|> users :: email To Name ) ) ); <|nl|>
<|16-s|> + <|s|> " If <|s|> you <|s|> are <|s|> sure <|s|> you <|s|> wish <|s|> to <|s|> delete <|s|> this <|s|> project , <|s|> re - run <|s|> with <|s|> the <|s|> -- yes - really - delete <|s|> flag . \ n \ n " , <|nl|>
<|del|> <|nl|>
<|8-s|> <|2-s|> project Operations . project ( all Users ) . get Head ( Ref Names . refs Users ( account Id ) ); <|nl|>
<|del|> <|nl|>
<|4-s|> project Operations <|nl|>
<|8-s|> . add ( allow Capability ( Global Capability . ACCESS _ DATABASE ) . group ( REGISTERED _ USERS ) ) <|nl|> <|8-s|> . update ( ); <|nl|> <|4-s|> project Operations <|nl|> <|8-s|> . project ( project ) <|nl|> <|8-s|> . for Update ( ) <|nl|>
<|4-s|> <|2-s|> Project Config <|s|> new Local <|s|> = <|s|> project Config Factory . create ( local Key ); <|nl|>
<|8-s|> . add ( block ( PUSH ) . ref ( " refs / heads /* " ) . group ( ANONYMOUS _ USERS ) ) <|nl|> <|8-s|> . update ( ); <|nl|> <|4-s|> project Operations <|nl|> <|8-s|> . project ( local Key ) <|nl|> <|8-s|> . for Update ( ) <|nl|>
<|del|> <|nl|>
<|s|> * <|s|> < p > If <|s|> the <|s|> execution <|s|> is <|s|> synchronous <|s|> or <|s|> the <|s|> results <|s|> are <|s|> known <|s|> a <|s|> priori , <|s|> consider <|s|> using <|s|> { @ link <|nl|>
<|4-s|> results Callback <|s|> = <|s|> require Non Null ( r , <|s|> " results <|s|> can ' t <|s|> be <|s|> null " ); <|nl|>
<|4-s|> results <|s|> = <|s|> Immutable List . copy Of ( require Non Null ( r , <|s|> " results <|s|> can ' t <|s|> be <|s|> null " ) ); <|nl|>
<|8-s|> ( ) <|s|> -> <|s|> allow Capability ( QUERY _ LIMIT ) . group ( REGISTERED _ USERS ) . range ( 1 , <|s|> 0 ) . build ( ) ); <|nl|>
class <|s|> Gson Parser <|s|> { <|nl|> <|2-s|> private <|s|> final <|s|> Gson <|s|> gson ; <|nl|>
<|2-s|> abstract <|s|> static <|s|> class <|s|> Result <|s|> { <|nl|> <|4-s|> static <|s|> Result <|s|> create ( boolean <|s|> is Valid , <|s|> Immutable List < Commit Validation Message > <|s|> messages ) <|s|> { <|nl|>
<|2-s|> abstract <|s|> static <|s|> class <|s|> Result <|s|> { <|nl|> <|4-s|> static <|s|> Result <|s|> create ( boolean <|s|> is Valid , <|s|> Immutable List < Commit Validation Message > <|s|> messages ) <|s|> { <|nl|>
<|4-s|> abstract <|s|> Immutable List < Commit Validation Message > <|s|> messages ( ); <|nl|>
<|4-s|> <|2-s|> return <|s|> new <|s|> File Extension Predicate ( ext ); <|nl|>
<|4-s|> <|2-s|> throw <|s|> new <|s|> Resource Conflict Exception ( " checks <|s|> are <|s|> not <|s|> supported <|s|> on <|s|> a <|s|> change <|s|> edit " ); <|nl|>
<|4-s|> Set < Entry < Account . Id , <|s|> Timestamp >> <|s|> accounts <|s|> = <|s|> scan Accounts ( db , <|s|> ui ) . entry Set ( ); <|nl|> <|4-s|> gc ( ui ); <|nl|>
<|2-s|> <|s|> * <|s|> default <|s|> visibility <|s|> checker <|s|> should <|s|> cover <|s|> all <|s|> common <|s|> use <|s|> cases . <|nl|>
<|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> @ param <|s|> topo Sort <|s|> whether <|s|> to <|s|> use <|s|> a <|s|> more <|s|> thorough <|s|> reachability <|s|> check <|nl|> <|2-s|> <|s|> * <|s|> by <|s|> sorting <|s|> in <|s|> topological <|s|> order <|nl|> <|2-s|> <|s|> */ <|nl|>
<|2-s|> public <|s|> void <|s|> set Up ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|> <|4-s|> /* * <|nl|> <|4-s|> <|s|> * <|s|> master <|s|> ( branch <|s|> not <|s|> visible ) <|nl|> <|4-s|> <|s|> * <|nl|> <|4-s|> <|s|> * <|s|> < p > commit C <|s|> | <|s|> commit 2 <|s|> commit B <|s|> | <|s|> | <|s|> commit 1 <|s|> commit A <|s|> <--- <|s|> refs / tags / v 0 . 1 <|s|> \ <|s|> / <|s|> \ <|s|> / <|s|> base Commit <|nl|> <|4-s|> <|s|> */ <|nl|>
<|2-s|> // <|s|> This <|s|> behavior <|s|> is <|s|> likely <|s|> a <|s|> bug . <|s|> A <|s|> fix <|s|> might <|s|> not <|s|> be <|s|> easy <|s|> as <|s|> it <|s|> might <|s|> break <|s|> syntax <|s|> highlighting . <|nl|> <|2-s|> // <|s|> TODO : <|s|> Fix <|s|> this <|s|> issue <|s|> or <|s|> remove <|s|> the <|s|> broken <|s|> parameter <|s|> ( at <|s|> least <|s|> in <|s|> the <|s|> documentation ) . <|nl|>
<|2-s|> public <|s|> Gson Parser ( @ Event Gson <|s|> Gson <|s|> gson ) <|s|> { <|nl|> <|4-s|> this . gson <|s|> = <|s|> gson ; <|nl|>
<|del|> <|nl|>
<|2-s|> private <|s|> String <|s|> plugin Name ; <|nl|> <|2-s|> /* * <|s|> All - Projects <|s|> project . config <|s|> contents . <|s|> */ <|nl|>
<|2-s|> <|s|> * <|s|> the <|s|> same <|s|> pattern <|s|> signature , <|s|> this <|s|> method <|s|> returns <|s|> a <|s|> single <|s|> valid <|s|> finding <|s|> with <|s|> the <|s|> number <|s|> of <|nl|>
<|nl|> <|2-s|> /* * <|s|> Default <|s|> value <|s|> of <|s|> time Test Max <|s|> configuration <|s|> parameter <|s|> for <|s|> avoiding <|s|> excessive <|s|> backtracking . <|s|> */ <|nl|>
<|4-s|> <|2-s|> metrics . configuration Errors . increment ( all Projects Name . get ( ) ); <|nl|> <|4-s|> <|2-s|> metrics . errors . increment ( ); <|nl|>
<|12-s|> plugin Name , <|s|> event . get Change ( ) . current Revision , <|s|> entry . get Key ( ) , <|s|> arr . error ); <|nl|> <|8-s|> metrics . add Reviewer Errors . increment ( ); <|nl|> <|8-s|> metrics . errors . increment ( ); <|nl|>
<|8-s|> <|2-s|> ? <|s|> ( Rest Api Exception ) <|s|> e <|s|> : <|s|> new <|s|> Rest Api Exception ( " Cannot <|s|> post <|s|> review " , <|s|> e ); <|nl|>
<|del|> <|nl|>
/* * <|s|> Configuration <|s|> state <|s|> for <|s|> { @ link <|s|> Copyright Validator } <|s|> from <|s|> All - Projects <|s|> project . config <|s|> file . <|s|> */ <|nl|>
<|2-s|> private <|s|> Integer <|s|> get Major ( ) <|s|> { <|nl|> <|4-s|> return <|s|> Integer . value Of ( version . split ( " \ \ . " ) [ 0 ] ); <|nl|>
<|4-s|> <|2-s|> logging Ctx . set Performance Log Records ( old Performance Log Records ); <|nl|>
<|4-s|> Logging Context . get Instance ( ) . set Performance Log Records ( old Performance Log Records ); <|nl|>
<|8-s|> " refs / tags / master - tag " , <|nl|> <|8-s|> " refs / tags / tree - tag " ); <|nl|>
<|8-s|> " HEAD " , <|s|> ps Ref 1 , <|s|> meta Ref 1 , <|s|> ps Ref 3 , <|s|> meta Ref 3 , <|s|> " refs / heads / master " , <|s|> " refs / tags / master - tag " ); <|nl|> <|4-s|> // <|s|> tree - tag <|s|> is <|s|> not <|s|> visible <|s|> because <|s|> we <|s|> don ' t <|s|> look <|s|> at <|s|> trees <|s|> reachable <|s|> from <|nl|> <|4-s|> // <|s|> refs <|nl|>
import <|s|> com . google . gerrit . testing . Config Suite ; <|nl|>
<|4-s|> <|2-s|> throws <|s|> Resource Not Found Exception , <|s|> Resource Conflict Exception , <|s|> IOException , <|nl|>
<|12-s|> + <|s|> concat ( owner Json ( " p A @ g " , <|s|> 0 , <|s|> 1 , <|s|> 0 ) , <|s|> " <|s|> ] " ); <|nl|> <|4-s|> // <|s|> The <|s|> " owners :[ ... ] " <|s|> substring <|s|> contains <|s|> only <|s|> owners <|s|> from <|s|> p A . <|nl|>
<|4-s|> <|2-s|> logger . warn ( " Unable <|s|> to <|s|> process <|s|> event <|s|> { } <|s|> on <|s|> project <|s|> { } " , <|s|> event , <|s|> event . get Project Name ( ) , <|s|> e ); <|nl|>
<|4-s|> <|2-s|> handle Git Reference Updated As User ( event , <|s|> new <|s|> Account . Id ( updater Account Info . _ account Id ) ); <|nl|> <|4-s|> } <|s|> else <|s|> { <|nl|> <|4-s|> <|2-s|> handle Git Reference Updated As Server ( event ); <|nl|>
<|4-s|> logging Ctx . set Mutable Performance Log Records ( mutable Performance Log Records ); <|nl|>
<|4-s|> <|2-s|> Copyright Review Api <|s|> review Api ) <|s|> { <|nl|>
<|2-s|> @ Override <|nl|> <|2-s|> public <|s|> void <|s|> stop ( ) <|s|> { } <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> // <|s|> Draft Handling . KEEP <|s|> is <|s|> ignored <|s|> on <|s|> publishing <|s|> a <|s|> comment . <|nl|>
<|4-s|> return <|s|> assert About ( optionals ( ) ) . that ( optional ); <|nl|>
<|4-s|> <|2-s|> return <|s|> that ( optional , <|s|> Standard Subject Builder :: that ); <|nl|>
<|2-s|> @ Nullable <|s|> private <|s|> Plugin Config <|s|> gerrit Config ; <|nl|> <|2-s|> @ Nullable <|s|> private <|s|> Check Config <|s|> check Config ; <|nl|>
<|4-s|> <|2-s|> throw <|s|> new <|s|> Commit Validation Exception ( <|nl|> <|8-s|> <|2-s|> plugin Name <|s|> + <|s|> " plugin <|s|> failed <|s|> to <|s|> read <|s|> new <|s|> project . config " , <|s|> e ); <|nl|>
<|2-s|> <|s|> */ <|nl|> <|2-s|> @ Nullable <|nl|>
<|del|> <|nl|>
<|4-s|> try <|s|> ( Rev Walk <|s|> rw <|s|> = <|s|> new <|s|> Rev Walk ( repo ); <|nl|> <|8-s|> Tree Walk <|s|> tw <|s|> = <|s|> Tree Walk . for Path ( rw . get Object Reader ( ) , <|s|> filename , <|s|> rw . parse Tree ( object Id ) ) ) <|s|> { <|nl|>
<|4-s|> try <|s|> ( Rev Walk <|s|> rw <|s|> = <|s|> new <|s|> Rev Walk ( repo ); <|nl|> <|8-s|> Tree Walk <|s|> tw <|s|> = <|s|> Tree Walk . for Path ( rw . get Object Reader ( ) , <|s|> filename , <|s|> rw . parse Tree ( object Id ) ) ) <|s|> { <|nl|>
<|del|> <|nl|>
<|4-s|> install ( new <|s|> Zk Validation Module ( config ) ); <|nl|>
<|del|> <|nl|>
<|2-s|> public <|s|> Zk Validation Module ( Configuration <|s|> cfg ) <|s|> { <|nl|> <|4-s|> this . cfg <|s|> = <|s|> new <|s|> Zookeeper Config ( cfg . get Multi Site Config ( ) ); <|nl|>
<|4-s|> private <|s|> final <|s|> File Based Config <|s|> config ; <|nl|>
<|2-s|> @ Inject <|s|> private <|s|> Comment Validator <|s|> mock Comment Validator ; <|nl|> <|2-s|> @ Inject <|s|> private <|s|> Test Comment Util <|s|> test Comment Util ; <|nl|>
<|2-s|> @ Inject <|s|> private <|s|> Comment Validator <|s|> mock Comment Validator ; <|nl|> <|2-s|> @ Inject <|s|> private <|s|> Test Comment Util <|s|> test Comment Util ; <|nl|>
<|8-s|> Comment Validator <|s|> mock Comment Validator <|s|> = <|s|> Easy Mock . create Mock ( Comment Validator . class ); <|nl|> <|8-s|> bind ( Comment Validator . class ) <|nl|> <|12-s|> . annotated With ( Exports . named ( mock Comment Validator . get Class ( ) ) ) <|nl|> <|12-s|> . to Instance ( mock Comment Validator ); <|nl|> <|8-s|> bind ( Comment Validator . class ) . to Instance ( mock Comment Validator ); <|nl|>
<|nl|> <|4-s|> Push One Commit . Result <|s|> r <|s|> = <|s|> create Change ( ); <|nl|> <|nl|>
<|8-s|> log . warn ( <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|2-s|> public <|s|> static <|s|> Immutable List < Comment Validation Failure > <|s|> find Invalid Comments ( <|nl|>
<|8-s|> throws <|s|> Patch List Not Available Exception <|s|> { <|nl|>
<|nl|> <|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> Retrieves <|s|> the <|s|> next <|s|> available <|s|> sequence <|s|> number . <|nl|> <|2-s|> <|s|> * <|nl|> <|2-s|> <|s|> * <|s|> < p > This <|s|> method <|s|> is <|s|> thread - safe . <|nl|> <|2-s|> <|s|> * <|nl|> <|2-s|> <|s|> * <|s|> @ return <|s|> the <|s|> next <|s|> available <|s|> sequence <|s|> number <|nl|> <|2-s|> <|s|> */ <|nl|>
<|nl|> <|8-s|> <|2-s|> // <|s|> Keep <|s|> blocking <|s|> until <|s|> we <|s|> verified <|s|> that <|s|> another <|s|> thread <|s|> can <|s|> retrieve <|s|> a <|s|> sequence <|s|> number <|nl|> <|8-s|> <|2-s|> // <|s|> while <|s|> we <|s|> are <|s|> blocking <|s|> here . <|nl|> <|8-s|> <|2-s|> while <|s|> ( is Blocking . get ( ) ) <|s|> { <|nl|> <|12-s|> // <|s|> do <|s|> nothing <|nl|> <|8-s|> <|2-s|> } <|nl|> <|8-s|> }; <|nl|> <|nl|>
<|del|> <|nl|>
<|8-s|> <|2-s|> log . warn ( <|nl|>
<|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> Creates <|s|> a <|s|> Logging Context Aware Callable <|s|> that <|s|> wraps <|s|> the <|s|> given <|s|> { @ link <|s|> Callable } . <|nl|> <|2-s|> <|s|> * <|nl|>
<|4-s|> assert That ( test Comment Helper . get Published Comments ( r . get Change Id ( ) ) ) . is Empty ( ); <|nl|> <|4-s|> Bad Request Exception <|s|> bad Request Exception <|s|> = <|nl|>
<|4-s|> switch <|s|> ( err . get Error Code ( ) ) <|s|> { <|nl|> <|4-s|> <|2-s|> case <|s|> 1022 : <|s|> // <|s|> ER _ DUP _ KEY <|nl|> <|4-s|> <|2-s|> case <|s|> 1062 : <|s|> // <|s|> ER _ DUP _ ENTRY <|nl|> <|4-s|> <|2-s|> case <|s|> 1169 : <|s|> // <|s|> ER _ DUP _ UNIQUE ; <|nl|>
<|del|> <|nl|>
<|8-s|> <|2-s|> cfg . get Boolean ( <|nl|> <|12-s|> <|2-s|> KAFKA _ SECTION , <|s|> KAFKA _ PUBLISHER _ SUBSECTION , <|s|> ENABLE _ KEY , <|s|> DEFAULT _ BROKER _ ENABLED ); <|nl|>
<|2-s|> <|nl|> <|2-s|> static <|s|> final <|s|> String <|s|> KAFKA _ PROPERTY _ PREFIX <|s|> = <|s|> " Kafka Prop - " ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|2-s|> public <|s|> static <|s|> final <|s|> String <|s|> KAFKA _ CONFIG <|s|> = <|s|> " multi - site . config " ; <|nl|>
<|2-s|> public <|s|> static <|s|> final <|s|> String <|s|> KAFKA _ CONFIG <|s|> = <|s|> " multi - site . config " ; <|nl|>
<|del|> <|nl|>
<|2-s|> private <|s|> Provider < Producer < String , <|s|> String >> <|s|> producer Provider ; <|nl|> <|2-s|> private <|s|> Kafka Configuration <|s|> properties ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|2-s|> private <|s|> final <|s|> Supplier < Collection < Message >> <|s|> replication Config Validation ; <|nl|> <|2-s|> private <|s|> final <|s|> Config <|s|> multi Site Config ; <|nl|>
<|4-s|> <|2-s|> patterns <|s|> = <|s|> Arrays . as List ( cfg . get ( ) . get String List ( CACHE _ SECTION , <|s|> null , <|s|> PATTERN _ KEY ) ); <|nl|>
<|2-s|> static <|s|> final <|s|> String <|s|> ENABLE _ KEY <|s|> = <|s|> " enabled " ; <|nl|> <|2-s|> static <|s|> final <|s|> String <|s|> DEFAULT _ KAFKA _ BOOTSTRAP _ SERVERS <|s|> = <|s|> " localhost : 9092 " ; <|nl|> <|2-s|> static <|s|> final <|s|> boolean <|s|> DEFAULT _ ENABLE _ PROCESSING <|s|> = <|s|> true ; <|nl|>
<|nl|> <|2-s|> // <|s|> Building <|s|> the <|s|> following : <|nl|> <|2-s|> // <|2-s|> <|s|> rc Master <|s|> ( c 1 <|s|> master <|s|> master - tag ) <|s|> <-- <|s|> rc Branch <|s|> ( c 2 <|s|> branch <|s|> branch - tag ) <|nl|> <|2-s|> // <|4-s|> <|2-s|> \ <|16-s|> <|16-s|> <|4-s|> \ <|nl|> <|2-s|> // <|4-s|> ( c 3 _ open ) <|16-s|> <|12-s|> ( c 4 _ open ) <|nl|> <|2-s|> // <|nl|>
<|8-s|> . update ( ); <|nl|> <|nl|> <|4-s|> // <|2-s|> <|s|> rc Master <|s|> ( c 1 <|s|> master ) <|nl|>
<|s|> * <|s|> < p > TODO ( hiesel ): <|s|> Instrument <|s|> this <|s|> heuristic <|s|> and <|s|> proof <|s|> its <|s|> value . <|nl|>
<|2-s|> <|s|> */ <|nl|> <|2-s|> @ Visible For Testing <|nl|>
<|2-s|> /* * <|s|> Returns <|s|> a <|s|> URL <|s|> pointing <|s|> to <|s|> a <|s|> section <|s|> of <|s|> the <|s|> settings <|s|> page . <|s|> */ <|nl|>
<|4-s|> producer <|s|> = <|s|> producer Provider . get ( ); <|nl|> <|4-s|> LOGGER . info ( " Connection <|s|> established . " ); <|nl|>
<|4-s|> producer <|s|> = <|s|> new <|s|> Kafka Producer < > ( properties . kafka Publisher ( ) ); <|nl|>
<|2-s|> /* * <|s|> Skip <|s|> diffstat <|s|> computation <|s|> */ <|nl|> <|2-s|> SKIP _ DIFFSTAT ( 23 ); <|nl|>
<|4-s|> if <|s|> ( ! has ( SKIP _ DIFFSTAT ) ) <|s|> { <|nl|>
<|nl|> <|4-s|> return <|s|> new <|s|> Permission Range ( <|nl|> <|8-s|> permission Name , <|s|> Math . max ( vote Min , <|s|> block Allow Min ) , <|s|> Math . min ( vote Max , <|s|> block Allow Max ) ); <|nl|>
<|4-s|> <|2-s|> this . handle <|s|> = <|s|> validators . add ( " test - " <|s|> + <|s|> reject Type . name ( ) , <|s|> this ); <|nl|>
<|nl|> <|4-s|> abstract <|s|> Builder < T > <|s|> formatter ( Function < T , <|s|> String > <|s|> formatter ); <|nl|> <|nl|>
<|2-s|> /* * <|s|> @ return <|s|> formatter <|s|> to <|s|> format <|s|> field <|s|> values . <|s|> */ <|nl|> <|2-s|> public <|s|> abstract <|s|> Function < T , <|s|> String > <|s|> formatter ( ); <|nl|>
<|4-s|> <|2-s|> log Debug ( <|nl|>
<|2-s|> public <|s|> Context <|s|> start ( F 1 <|s|> field Value ) <|s|> { <|nl|> <|4-s|> return <|s|> new <|s|> Context ( this , <|s|> field Value ); <|nl|>
<|4-s|> return <|s|> new <|s|> Auto Value _ Field . Builder < E > ( ) . value Type ( enum Type ) . formatter ( Enum :: name ) . name ( name ); <|nl|>
<|8-s|> Field . of Integer ( " status " , <|s|> Metadata . Builder :: http Status ) <|nl|>
<|2-s|> public <|s|> static <|s|> Field . Builder < Boolean > <|s|> of Boolean ( <|nl|> <|4-s|> <|2-s|> String <|s|> name , <|s|> Bi Consumer < Metadata . Builder , <|s|> Boolean > <|s|> metadata Mapper ) <|s|> { <|nl|>
<|nl|> <|4-s|> abstract <|s|> Builder < T > <|s|> metadata Mapper ( Bi Consumer < Metadata . Builder , <|s|> T > <|s|> metadata Mapper ); <|nl|> <|nl|>
<|8-s|> Field . of Enum ( Operation . class , <|s|> " operation " , <|s|> Metadata . Builder :: git Operation ) . build ( ); <|nl|>
<|2-s|> // <|s|> The <|s|> type <|s|> of <|s|> change <|s|> ID <|s|> which <|s|> the <|s|> user <|s|> used <|s|> to <|s|> identify <|s|> a <|s|> change <|s|> ( e . g . <|s|> numeric <|s|> ID , <|s|> triplet <|s|> etc . ) . <|nl|>
<|2-s|> // <|s|> The <|s|> value <|s|> of <|s|> the <|s|> @ Export <|s|> annotation <|s|> which <|s|> was <|s|> used <|s|> to <|s|> register <|s|> a <|s|> plugin <|s|> extension . <|nl|> <|2-s|> public <|s|> abstract <|s|> Optional < String > <|s|> export Value ( ); <|nl|>
<|del|> <|nl|>
<|nl|> <|4-s|> public <|s|> abstract <|s|> Builder <|s|> auth Domain Name ( @ Nullable <|s|> String <|s|> auth Domain Name ); <|nl|> <|nl|>
<|s|> * <|s|> < p > Metadata <|s|> to <|s|> provide <|s|> additional <|s|> context <|s|> can <|s|> be <|s|> included <|s|> by <|s|> provided <|s|> a <|s|> { @ link <|s|> Metadata } <|nl|> <|s|> * <|s|> instance . <|nl|>
<|2-s|> public <|s|> abstract <|s|> Optional < Metadata > <|s|> metadata ( ); <|nl|>
<|4-s|> <|2-s|> succeeded <|s|> = <|s|> shared Ref Db . compare And Put ( project Name , <|s|> ref Pair . compare Ref , <|s|> ref Pair . put Value ); <|nl|>
<|16-s|> <|4-s|> Ref Pair <|s|> current <|s|> = <|s|> get Latest Local Ref ( p ); <|nl|> <|16-s|> <|4-s|> return <|s|> new <|s|> Ref Pair ( p . compare Ref , <|s|> current . put Value ); <|nl|>
<|2-s|> <|s|> * <|2-s|> <|s|> < li > { @ code <|s|> SKIP _ DIFFSTAT } <|s|> is <|s|> omitted <|s|> to <|s|> skip <|s|> diffstat <|s|> calculations . <|nl|>
<|2-s|> private <|s|> List < Ref Pair > <|s|> compare And Get Latest Local Refs ( <|nl|>
<|2-s|> protected <|s|> Ref Pair <|s|> compare And Get Latest Local Ref ( <|nl|>
<|del|> <|nl|>
<|12-s|> . render Html ( out ) ); <|nl|>
<|4-s|> return <|s|> Ref Names . is Note Db Meta Ref ( ref Name ) <|s|> || <|s|> ref Name . starts With ( Ref Names . REFS _ SEQUENCES ); <|nl|>
<|4-s|> return <|s|> Ref Names . is Note Db Meta Ref ( ref Name ) <|s|> || <|s|> ref Name . starts With ( Ref Names . REFS _ SEQUENCES ); <|nl|>
<|8-s|> ( latest Ref Pair . compare Ref . get Object Id ( ) . equals ( Object Id . zero Id ( ) ) ) <|nl|> <|12-s|> ? <|s|> ! shared Ref Db . exists ( project Name , <|s|> ref Name ) <|nl|> <|12-s|> : <|s|> shared Ref Db . is Up To Date ( project Name , <|s|> latest Ref Pair . compare Ref ); <|nl|>
<|4-s|> logger . at Finest ( ) . log ( " REST <|s|> call <|s|> failed : <|s|> % d " , <|s|> status Code ); <|nl|>
<|4-s|> <|2-s|> if <|s|> ( change Data . size ( ) <|s|> != <|s|> 1 ) <|s|> { <|nl|> <|8-s|> // <|s|> no <|s|> change <|s|> found <|s|> ( size <|s|> = <|s|> 0 ) <|s|> or <|s|> change Id <|s|> was <|s|> ambiguous <|s|> ( size <|s|> > <|s|> 1 ) <|nl|>
<|2-s|> <|s|> * <|s|> Type <|s|> of <|s|> the <|s|> request , <|s|> telling <|s|> through <|s|> which <|s|> channel <|s|> the <|s|> request <|s|> was <|s|> coming <|s|> in <|s|> ( see <|s|> { @ link <|nl|> <|2-s|> <|s|> * <|s|> Request Type } ) . <|nl|>
<|del|> <|nl|>
<|2-s|> private <|s|> boolean <|s|> is Owner ( Project . Name Key <|s|> project ) <|s|> { <|nl|>
<|2-s|> <|s|> * <|2-s|> <|s|> < li > { @ code <|s|> SKIP _ DIFFSTAT } <|s|> is <|s|> omitted <|s|> to <|s|> ensure <|s|> diffstat <|s|> calculations . <|nl|>
<|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> Skip <|s|> diffstat <|s|> computation <|s|> that <|s|> compute <|s|> the <|s|> insertions <|s|> field <|s|> ( number <|s|> of <|s|> lines <|s|> inserted ) <|s|> and <|nl|> <|2-s|> <|s|> * <|s|> deletions <|s|> field <|s|> ( number <|s|> of <|s|> lines <|s|> deleted ) <|nl|> <|2-s|> <|s|> */ <|nl|>
<|2-s|> <|s|> * <|s|> @ param <|s|> accounts <|s|> may <|s|> be <|s|> either <|s|> just <|s|> a <|s|> list <|s|> of : <|s|> account <|s|> IDs , <|s|> Full <|s|> names , <|s|> usernames , <|s|> or <|s|> emails . <|nl|> <|2-s|> <|s|> * <|4-s|> <|s|> Also <|s|> could <|s|> be <|s|> a <|s|> list <|s|> of <|s|> those : <|s|> " Full <|s|> name <|s|> < email @ example . com > " <|s|> or <|s|> " Full <|s|> name <|s|> ( < ID > ) " <|nl|>
<|2-s|> <|s|> * <|s|> @ param <|s|> accounts <|s|> may <|s|> be <|s|> either <|s|> just <|s|> a <|s|> list <|s|> of : <|s|> account <|s|> IDs , <|s|> Full <|s|> names , <|s|> usernames , <|s|> or <|s|> emails . <|nl|> <|2-s|> <|s|> * <|4-s|> <|s|> Also <|s|> could <|s|> be <|s|> a <|s|> list <|s|> of <|s|> those : <|s|> " Full <|s|> name <|s|> < email @ example . com > " <|s|> or <|s|> " Full <|s|> name <|s|> ( < ID > ) " <|nl|>
<|8-s|> . create ( admin . new Ident ( ) , <|s|> test Repo , <|s|> SUBJECT , <|s|> FILE _ NAME , <|s|> " initial <|s|> content \ n " , <|s|> change Id ) <|nl|>
<|8-s|> . create ( admin . new Ident ( ) , <|s|> test Repo , <|s|> SUBJECT , <|s|> FILE _ NAME , <|s|> " initial <|s|> content \ n " , <|s|> change Id ) <|nl|>
<|nl|>
<|4-s|> } <|s|> catch <|s|> ( Exception <|s|> e ) <|s|> { <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> Dynamic Item . item Of ( binder ( ) , <|s|> Replication Push Filter . class ); <|nl|>
<|4-s|> assert That ( auto Reload Config . get Destinations ( Filter Type . ALL ) ) . has Size ( 1 ); <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|2-s|> public <|s|> static <|s|> boolean <|s|> is Active ( ) <|s|> { <|nl|>
<|12-s|> repository , <|s|> path , <|s|> parse Commit ( repository , <|s|> object Id ) . get Tree ( ) ) ) <|s|> { <|nl|>
public <|s|> class <|s|> Quota Group Definitions <|s|> { <|nl|> <|2-s|> /* * <|nl|> <|2-s|> <|s|> * <|s|> Definition <|s|> of <|s|> repository <|s|> size <|s|> quota <|s|> group . <|s|> { @ link <|s|> Quota Enforcer } <|s|> implementations <|s|> for <|s|> repository <|nl|> <|2-s|> <|s|> * <|s|> size <|s|> quota <|s|> have <|s|> to <|s|> act <|s|> on <|s|> requests <|s|> with <|s|> this <|s|> group <|s|> name . <|nl|> <|2-s|> <|s|> */ <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> this . retry With Trace On Failure <|s|> = <|s|> cfg . get Boolean ( " retry " , <|s|> " retry With Trace On Failure " , <|s|> false ); <|nl|>
<|s|> * <|s|> < p > Metadata <|s|> to <|s|> provide <|s|> additional <|s|> context <|s|> can <|s|> be <|s|> included <|s|> by <|s|> providing <|s|> a <|s|> { @ link <|s|> Metadata } <|nl|>
<|8-s|> <|2-s|> Field . of Enum ( Action Type . class , <|s|> " action _ type " , <|s|> Metadata . Builder :: action Type ) . build ( ); <|nl|>
<|del|> <|nl|>
<|s|> * <|s|> < p > If <|s|> a <|s|> user <|s|> specifies <|s|> an <|s|> unknown <|s|> option <|s|> and <|s|> this <|s|> unknown <|s|> option <|s|> doesn ' t <|s|> get <|s|> accepted , <|s|> the <|nl|>
<|2-s|> boolean <|s|> accept ( String <|s|> name , <|s|> @ Nullable <|s|> String <|s|> value ); <|nl|>
<|16-s|> <|8-s|> // <|s|> This <|s|> field <|s|> is <|s|> only <|s|> used <|s|> for <|s|> staleness <|s|> detection <|s|> which <|s|> will <|s|> discover <|s|> the <|nl|>
<|4-s|> <|2-s|> // <|s|> Therefore , <|s|> defer <|s|> to <|s|> the <|s|> currently <|s|> configured <|s|> All - Users <|s|> name . <|nl|>
<|8-s|> events Storage . persist ( project . get ( ) , <|s|> ref , <|s|> e . get URI ( ) , <|s|> get Remote Config Name ( ) ); <|nl|>
<|2-s|> public <|s|> String <|s|> persist ( String <|s|> project , <|s|> String <|s|> ref , <|s|> URIish <|s|> uri , <|s|> String <|s|> remote ) <|s|> { <|nl|> <|4-s|> String <|s|> json <|s|> = <|s|> get Event Json ( project , <|s|> ref , <|s|> uri , <|s|> remote ); <|nl|>
<|2-s|> public <|s|> void <|s|> delete ( String <|s|> project , <|s|> String <|s|> ref , <|s|> URIish <|s|> uri , <|s|> String <|s|> remote ) <|s|> { <|nl|> <|4-s|> String <|s|> event Key <|s|> = <|s|> get Event Key ( get Event Json ( project , <|s|> ref , <|s|> uri , <|s|> remote ) ); <|nl|>
<|4-s|> <|2-s|> logger . at Warning ( ) . with Cause ( e ) . log ( <|nl|> <|8-s|> <|2-s|> " Account <|s|> % s <|s|> has <|s|> invalid <|s|> filter <|s|> in <|s|> project <|s|> watch <|s|> % s " , <|s|> account Id , <|s|> key ); <|nl|>
<|nl|> <|2-s|> @ Visible For Testing <|nl|>
<|4-s|> push ( " refs / for / master " , <|s|> Push One Commit . SUBJECT , <|s|> " one . txt " , <|s|> " One " ); <|nl|> <|4-s|> Push One Commit . Result <|s|> r <|s|> = <|s|> push ( " refs / for / master " , <|s|> Push One Commit . SUBJECT , <|s|> " two . txt " , <|s|> " Two " ); <|nl|>
<|del|> <|nl|>
<|s|> * <|s|> Filter <|s|> that <|s|> is <|s|> invoked <|s|> before <|s|> list <|s|> of <|s|> remote <|s|> ref <|s|> updates <|s|> is <|s|> pushed <|s|> to <|s|> remote <|s|> instance . <|nl|> <|s|> * <|nl|> <|s|> * <|s|> < p > It <|s|> can <|s|> be <|s|> used <|s|> to <|s|> filter <|s|> out <|s|> unwanted <|s|> updates . <|nl|>
<|4-s|> this . replication Queue <|s|> = <|s|> replication Queue ; <|nl|> <|4-s|> this . auto Reload Executor <|s|> = <|s|> work Queue . create Queue ( 1 , <|s|> plugin Name <|s|> + <|s|> " _ auto - reload - config " ); <|nl|>
<|2-s|> private <|s|> String <|s|> soy Template ( String <|s|> name , <|s|> Sanitized Content . Content Kind <|s|> kind ) <|s|> { <|nl|>
<|2-s|> private <|s|> static <|s|> final <|s|> String <|s|> LOG _ NAME <|s|> = <|s|> " sharedref _ log " ; <|nl|>
<|2-s|> public <|s|> void <|s|> log Ref Update ( String <|s|> project , <|s|> Ref <|s|> curr Ref , <|s|> Object Id <|s|> new Ref Value ) <|s|> { <|nl|>
<|2-s|> public <|s|> void <|s|> log Project Delete ( String <|s|> project ) <|s|> { <|nl|>
<|4-s|> <|2-s|> shared Ref Logger . log Project Delete ( project Name ); <|nl|>
<|4-s|> <|2-s|> succeeded <|s|> = <|nl|> <|8-s|> <|2-s|> shared Ref Db . compare And Put ( project Name , <|s|> get Latest Local Ref ( ref Pair ) , <|s|> ref Pair . put Value ); <|nl|>
<|4-s|> if <|s|> ( lower Case ) <|s|> { <|nl|>
<|4-s|> rep Log . info ( " Replication <|s|> { } <|s|> was <|s|> canceled " , <|s|> get URI ( ) ); <|nl|>
<|4-s|> rep Log . info ( " Replication <|s|> { } <|s|> was <|s|> canceled <|s|> while <|s|> being <|s|> executed " , <|s|> get URI ( ) ); <|nl|>
<|4-s|> if <|s|> ( ! Object Id . zero Id ( ) . equals ( new Ref Value ) ) <|s|> { <|nl|> <|4-s|> <|2-s|> try <|s|> ( Repository <|s|> repository <|s|> = <|nl|> <|12-s|> <|2-s|> git Repository Manager . open Repository ( new <|s|> Project . Name Key ( project ) ); <|nl|> <|8-s|> <|2-s|> Rev Walk <|s|> walk <|s|> = <|s|> new <|s|> Rev Walk ( repository ) ) <|s|> { <|nl|>
<|4-s|> <|2-s|> this . type <|s|> = <|s|> Type . DELETE _ PROJECT ; <|nl|>
<|16-s|> Config Util . get Time Unit ( config , <|s|> " gerrit " , <|s|> null , <|s|> " ssh Connection Timeout " , <|s|> 2 , <|s|> MINUTES ) ); <|nl|>
<|8-s|> throw <|s|> new <|s|> Config Invalid Exception ( <|nl|>
<|8-s|> <|2-s|> && <|s|> request Types ( ) . stream ( ) <|nl|> <|12-s|> <|2-s|> . none Match ( type <|s|> -> <|s|> type . equals Ignore Case ( request Info . request Type ( ) ) ) <|s|> { <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|2-s|> @ Inject <|s|> private <|s|> Request Scope Operations <|s|> request Scope Operations ; <|nl|> <|2-s|> @ Inject <|s|> private <|s|> Project Operations <|s|> project Operations ; <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|2-s|> public <|s|> void <|s|> rerun Finished Check ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|> <|4-s|> check Operations . new Check ( check Key ) . state ( Check State . SUCCESSFUL ) . upsert ( ); <|nl|>
<|4-s|> Check Info <|s|> info <|s|> = <|s|> checks Api Factory . revision ( patch Set Id ) . id ( check Key . checker Uuid ( ) ) . rerun ( ); <|nl|>
<|4-s|> <|2-s|> throws <|s|> Rest Api Exception , <|s|> IOException , <|s|> Config Invalid Exception , <|s|> Permission Backend Exception <|s|> { <|nl|>
<|del|> <|nl|>
<|2-s|> /* * <|s|> Description <|s|> of <|s|> the <|s|> checker <|s|> that <|s|> produced <|s|> this <|s|> check <|s|> */ <|nl|> <|2-s|> public <|s|> String <|s|> checker Description ; <|nl|>
<|2-s|> /* * <|s|> Description <|s|> of <|s|> the <|s|> checker <|s|> that <|s|> produced <|s|> this <|s|> check <|s|> */ <|nl|> <|2-s|> public <|s|> String <|s|> checker Description ; <|nl|>
<|8-s|> // <|s|> - <|s|> 32 px <|s|> for <|s|> avatars <|s|> next <|s|> to <|s|> names <|s|> e . g . <|s|> on <|s|> the <|s|> dashboard . <|s|> This <|s|> is <|s|> also <|s|> Gerrit ' s <|s|> default . <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
Copyright <|s|> ( C ) <|s|> 2019 <|s|> The <|s|> Android <|s|> Open <|s|> Source <|s|> Project <|nl|>
<|2-s|> private <|s|> Git Repository Manager <|s|> git Repository Manager Mock ; <|nl|> <|2-s|> private <|s|> Repository <|s|> repository Mock ; <|nl|> <|2-s|> private <|s|> Permission Backend <|s|> permission Backend Mock ; <|nl|> <|2-s|> private <|s|> Permission Backend . With User <|s|> with User Mock ; <|nl|> <|2-s|> private <|s|> Permission Backend . For Project <|s|> for Project Mock ; <|nl|>
<|4-s|> while <|s|> ( ! is Call Finished . get ( ) ) <|s|> { <|nl|>
<|2-s|> private <|s|> void <|s|> setup Git Repo Manager Mock ( ) <|s|> throws <|s|> IOException <|s|> { <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|2-s|> private <|s|> final <|s|> Provider < Current User > <|s|> self ; <|nl|> <|2-s|> private <|s|> final <|s|> Permission Backend <|s|> permission Backend ; <|nl|> <|2-s|> private <|s|> final <|s|> Administrate Checkers Permission <|s|> permission ; <|nl|> <|2-s|> private <|s|> final <|s|> Checks <|s|> checks ; <|nl|> <|2-s|> private <|s|> final <|s|> Provider < Checks Update > <|s|> checks Update ; <|nl|> <|2-s|> private <|s|> final <|s|> Check Json . Factory <|s|> check Json Factory ; <|nl|>
/* * <|s|> Loads <|s|> cache <|s|> values <|s|> for <|s|> the <|s|> external <|s|> ID <|s|> cache <|s|> using <|s|> either <|s|> a <|s|> full <|s|> or <|s|> a <|s|> partial <|s|> reload . <|s|> */ <|nl|> @ Singleton <|nl|>
<|2-s|> // <|s|> is <|s|> found <|s|> within <|s|> this <|s|> number <|s|> of <|s|> parents , <|s|> we <|s|> fall <|s|> back <|s|> to <|s|> reading <|s|> everything <|s|> from <|s|> scratch . <|nl|>
<|8-s|> config . get Boolean ( " cache " , <|s|> External Id Cache Impl . CACHE _ NAME , <|s|> " enable Partial Reloads " , <|s|> false ); <|nl|>
<|2-s|> private <|s|> String <|s|> project Control ; <|nl|>
<|4-s|> <|s|> * <|s|> @ param <|s|> started <|s|> Set <|s|> the <|s|> time <|s|> the <|s|> check <|s|> started . <|s|> Time <|s|> can <|s|> be <|s|> reset <|s|> to <|s|> " null " <|s|> if <|s|> passed <|s|> @ code <|nl|> <|4-s|> <|s|> * <|4-s|> <|s|> new <|s|> Timestamp ( 0 ) <|nl|>
<|2-s|> // <|s|> is <|s|> found <|s|> within <|s|> this <|s|> number <|s|> of <|s|> parents , <|s|> we <|s|> fall <|s|> back <|s|> to <|s|> reading <|s|> everything <|s|> from <|s|> scratch . <|nl|>
<|4-s|> <|2-s|> Rev Commit <|s|> current Commit <|s|> = <|s|> rw . parse Commit ( ext Id Ref . get Object Id ( ) ); <|nl|>
<|4-s|> <|2-s|> int <|s|> i <|s|> = <|s|> 0 ; <|nl|> <|4-s|> <|2-s|> while <|s|> ( ( parent With Cache Value <|s|> = <|s|> rw . next ( ) ) <|s|> != <|s|> null <|s|> && <|s|> i ++ <|s|> < <|s|> MAX _ HISTORY _ LOOKBACK ) <|s|> { <|nl|>
<|del|> <|nl|>
<|4-s|> return <|s|> Object Id . from String ( Char Matcher . is ( ' / ' ) . remove From ( path ) ); <|nl|>
<|del|> <|nl|>
<|2-s|> // <|s|> Partial <|s|> or <|s|> full <|s|> computation <|nl|>
<|4-s|> sshd Threads <|s|> = <|s|> cfg . get Int ( " sshd " , <|s|> " threads " , <|s|> Math . max ( 4 , <|s|> 2 <|s|> * <|s|> cores ) ); <|nl|>
<|2-s|> public <|s|> void <|s|> insert ( Account . Builder <|s|> account ) <|s|> throws <|s|> IOException <|s|> { <|nl|>
<|8-s|> all Users Name . get ( ) <|s|> + <|s|> " : " <|s|> + <|s|> Ref Names . refs Users ( account . id ( ) ) <|s|> + <|s|> " : " <|s|> + <|s|> meta Id ; <|nl|>
<|2-s|> private <|s|> final <|s|> Provider < Project Cache > <|s|> project Cache Provider ; <|nl|>
<|8-s|> && <|s|> Objects . equals ( other . checker Description , <|s|> checker Description ); <|nl|>
<|4-s|> <|s|> * <|s|> @ param <|s|> started <|s|> Set <|s|> the <|s|> time <|s|> the <|s|> check <|s|> started . <|s|> Time <|s|> can <|s|> be <|s|> reset <|s|> to <|s|> " null " <|s|> if <|s|> passed <|s|> @ code <|nl|> <|4-s|> <|s|> * <|4-s|> <|s|> new <|s|> Timestamp ( 0 ) <|nl|>
<|4-s|> <|s|> * <|s|> @ param <|s|> started <|s|> Set <|s|> the <|s|> time <|s|> the <|s|> check <|s|> started . <|s|> Time <|s|> can <|s|> be <|s|> reset <|s|> to <|s|> " null " <|s|> if <|s|> passed <|s|> @ code <|nl|> <|4-s|> <|s|> * <|4-s|> <|s|> new <|s|> Timestamp ( 0 ) <|nl|>
<|4-s|> <|s|> * <|s|> @ param <|s|> started <|s|> Set <|s|> the <|s|> time <|s|> the <|s|> check <|s|> started . <|s|> Time <|s|> can <|s|> be <|s|> reset <|s|> to <|s|> " null " <|s|> if <|s|> passed <|s|> { @ code <|nl|> <|4-s|> <|s|> * <|4-s|> <|s|> new <|s|> Timestamp ( 0 ) } <|nl|>
<|8-s|> Account <|s|> persisted Account <|s|> = <|nl|> <|12-s|> accounts . insert ( <|nl|> <|16-s|> Account . builder ( id , <|s|> Time Util . now Ts ( ) ) . set Full Name ( name ) . set Preferred Email ( email ) ); <|nl|>
<|4-s|> if <|s|> ( require Change Id <|s|> && <|s|> change Id Footers . is Empty ( ) ) <|s|> { <|nl|>
<|2-s|> /* * <|s|> Reruns <|s|> the <|s|> check <|s|> and <|s|> returns <|s|> the <|s|> { @ link <|s|> Check Info } <|s|> for <|s|> the <|s|> updated <|s|> check . <|s|> */ <|nl|>
<|nl|> <|2-s|> @ Override <|nl|>
<|2-s|> @ Inject <|s|> private <|s|> Request Scope Operations <|s|> request Scope Operations ; <|nl|> <|2-s|> @ Inject <|s|> private <|s|> Project Operations <|s|> project Operations ; <|nl|>
<|4-s|> check Operations . new Check ( check Key ) . state ( Check State . NOT _ STARTED ) . upsert ( ); <|nl|>
<|2-s|> public <|s|> void <|s|> rerun Not Existing Checker Throws Error ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|>
<|8-s|> . add ( " checker Description " , <|s|> checker Description ) <|nl|>
<|del|> <|nl|>
<|2-s|> @ Test <|nl|> <|2-s|> public <|s|> void <|s|> does Full Reload When No Cache State Is Found ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|> <|4-s|> Object Id <|s|> head <|s|> = <|s|> insert External Id ( 1 , <|s|> 1 ); <|nl|> <|nl|> <|4-s|> assert That ( loader . load ( head ) ) . is Equal To ( all From Git ( head ) ); <|nl|> <|4-s|> verify ( external Id Reader Spy , <|s|> times ( 1 ) ) . all ( head ); <|nl|> <|2-s|> } <|nl|> <|nl|> <|2-s|> @ Test <|nl|>
<|4-s|> assert That ( timestamp ) . is Equal To ( Time Util . never ( ) ); <|nl|>
<|8-s|> Iterables . get Only Element ( query Provider . get ( ) . by Key ( new <|s|> Change . Key ( r . get Change Id ( ) ) ); <|nl|> <|4-s|> assert That ( cd . change ( ) . get Status ( ) ) . is Equal To ( Change . Status . MERGED ); <|nl|>
<|del|> <|nl|>
<|4-s|> this ( add ); <|nl|>
<|4-s|> assert That ( info . state ) . is Equal To ( Check State . NOT _ STARTED ); <|nl|>
<|nl|> <|2-s|> /* * <|s|> Wrapper <|s|> class <|s|> to <|s|> stream <|s|> rendered <|s|> output <|s|> to <|s|> a <|s|> { @ link <|s|> Writer } . <|s|> */ <|nl|>
<|12-s|> . set Data ( to Header Soy Data ( paginator , <|s|> revision ) ) , <|nl|> <|8-s|> out ); <|nl|>
<|2-s|> public <|s|> String <|s|> render Html ( String <|s|> template Name , <|s|> Map < String , <|s|> ? > <|s|> soy Data ) <|s|> { <|nl|>
<|8-s|> . set Ij ( Immutable Map . of ( " static Urls " , <|s|> static Urls . build ( ) ) ); <|nl|>
<|4-s|> // <|s|> The <|s|> requested <|s|> value <|s|> was <|s|> not <|s|> in <|s|> the <|s|> cache <|s|> ( hence , <|s|> this <|s|> loader <|s|> was <|s|> invoked ) . <|s|> Therefore , <|s|> try <|s|> to <|nl|> <|4-s|> // <|s|> create <|s|> this <|s|> entry <|s|> from <|s|> a <|s|> past <|s|> value <|s|> using <|s|> the <|s|> minimal <|s|> amount <|s|> of <|s|> Git <|s|> operations <|s|> possible <|s|> to <|nl|> <|4-s|> // <|s|> reduce <|s|> latency . <|nl|>
<|4-s|> // <|s|> The <|s|> requested <|s|> value <|s|> was <|s|> not <|s|> in <|s|> the <|s|> cache <|s|> ( hence , <|s|> this <|s|> loader <|s|> was <|s|> invoked ) . <|s|> Therefore , <|s|> try <|s|> to <|nl|> <|4-s|> // <|s|> create <|s|> this <|s|> entry <|s|> from <|s|> a <|s|> past <|s|> value <|s|> using <|s|> the <|s|> minimal <|s|> amount <|s|> of <|s|> Git <|s|> operations <|s|> possible <|s|> to <|nl|> <|4-s|> // <|s|> reduce <|s|> latency . <|nl|>
<|2-s|> private <|s|> static <|s|> All External Ids <|s|> build All External Ids ( <|nl|>
<|2-s|> private <|s|> static <|s|> All Users Name <|s|> ALL _ USERS <|s|> = <|s|> new <|s|> All Users Name ( All Users Name Provider . DEFAULT ); <|nl|>
<|8-s|> logger . at Warning ( ) . log ( " Expected <|s|> an <|s|> existing <|s|> value <|s|> for <|s|> enum <|s|> % s . " , <|s|> type Token ); <|nl|>
<|2-s|> public <|s|> void <|s|> lower Case Enum Value Is Treated As Unset ( ) <|s|> { <|nl|> <|4-s|> Test Data <|s|> data <|s|> = <|s|> gson . from Json ( " { \ " value \ " :\ " one \ " } " , <|s|> Test Data . class ); <|nl|> <|4-s|> assert That ( data . value ) . is Null ( ); <|nl|>
<|4-s|> <|2-s|> Thread . sleep ( 100 ); <|nl|> <|4-s|> <|2-s|> if <|s|> ( retry Count ++ <|s|> > <|s|> MAX _ RETRY _ COUNT ) <|s|> { <|nl|> <|8-s|> fail ( " Waiting <|s|> until <|s|> call <|s|> finished <|s|> - <|s|> maximum <|s|> number <|s|> of <|s|> retires <|s|> reached " ); <|nl|> <|4-s|> <|2-s|> } <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> return <|s|> get Watched Projects . apply ( rsrc ); <|nl|>
<|4-s|> <|2-s|> Response <?> <|s|> response <|s|> = <|s|> query . apply ( Top Level Resource . INSTANCE ); <|nl|> <|4-s|> <|2-s|> List < Change Info > <|s|> value <|s|> = <|s|> ( List < Change Info > ) <|s|> response . value ( ); <|nl|> <|4-s|> <|2-s|> return <|s|> Response . ok ( value ); <|nl|>
<|2-s|> public <|s|> Response <?> <|s|> apply ( Project Resource <|s|> rsrc , <|s|> Input <|s|> input ) <|s|> { <|nl|>
<|8-s|> Response < Dashboard Info > <|s|> response <|s|> = <|s|> get . get ( ) . apply ( target ); <|nl|> <|8-s|> response . value ( ) . is Default <|s|> = <|s|> true ; <|nl|> <|8-s|> return <|s|> response ; <|nl|>
<|2-s|> public <|s|> Object <|s|> apply ( Project Resource <|s|> rsrc , <|s|> Input <|s|> input ) <|s|> throws <|s|> IOException , <|s|> Rest Api Exception <|s|> { <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|nl|> /* * <|nl|> <|s|> * <|s|> Gerrit <|s|> lib Module <|s|> for <|s|> applying <|s|> a <|s|> ref - filter <|s|> for <|s|> outgoing <|s|> replications . <|nl|> <|s|> * <|nl|> <|s|> * <|s|> < p > It <|s|> should <|s|> be <|s|> used <|s|> only <|s|> when <|s|> an <|s|> actual <|s|> filter <|s|> is <|s|> defined , <|s|> otherwise <|s|> the <|s|> default <|s|> replication <|nl|> <|s|> * <|s|> plugin <|s|> behaviour <|s|> will <|s|> be <|s|> pushing <|s|> all <|s|> refs <|s|> without <|s|> any <|s|> filtering . <|nl|> <|s|> */ <|nl|>
<|2-s|> public <|s|> void <|s|> should Push All Refs When No Filters Setup ( ) <|s|> throws <|s|> Interrupted Exception , <|s|> IOException <|s|> { <|nl|> <|4-s|> should Push All Refs With Dynamic Item Filter ( null ); <|nl|> <|2-s|> } <|nl|>
<|2-s|> public <|s|> void <|s|> should Block Replication Using Push Filter ( ) <|s|> throws <|s|> Interrupted Exception , <|s|> IOException <|s|> { <|nl|>
<|16-s|> return <|s|> Collections . empty List ( ); <|nl|>
<|8-s|> . new Comment Formatter ( ); <|nl|>
<|2-s|> // <|s|> Name <|s|> of <|s|> config <|s|> parameters <|s|> that <|s|> can <|s|> be <|s|> defined <|s|> in <|s|> project . config <|s|> or <|s|> gerrit . config : <|nl|>
<|8-s|> logger . at Severe ( ) . log ( " Project <|s|> % s <|s|> has <|s|> empty <|s|> % s " , <|s|> project , <|s|> OWNERS _ FILE _ NAME ); <|nl|>
<|2-s|> <|s|> * <|s|> { @ link <|s|> External Ids } . <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> <|2-s|> Dynamic Item < Shared Ref Database > <|s|> shared Ref Db Dynamic Item , <|s|> Shared Ref Logger <|s|> shared Ref Logger ) <|s|> { <|nl|> <|4-s|> this . shared Ref Db Dynamic Item <|s|> = <|s|> shared Ref Db Dynamic Item ; <|nl|>
<|4-s|> <|2-s|> Dynamic Item < Shared Ref Database > <|s|> shared Ref Db Dynamic Item , <|s|> Shared Ref Logger <|s|> shared Ref Logger ) <|s|> { <|nl|> <|4-s|> this . shared Ref Db Dynamic Item <|s|> = <|s|> shared Ref Db Dynamic Item ; <|nl|>
<|del|> <|nl|>
<|2-s|> public <|s|> void <|s|> contributor Section Is Unset If No Contributor Agreement Is Set ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|>
<|2-s|> public <|s|> void <|s|> notify Section Is Unset If No Notifications Are Set ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|>
<|2-s|> public <|s|> void <|s|> comment Link Section Is Unset If No Comment Links Are Set ( ) <|s|> throws <|s|> Exception <|s|> { <|nl|>
<|4-s|> assert That ( submit Records ) . is Present ( ); <|nl|>
<|s|> * <|s|> Submit Record } . <|nl|>
<|4-s|> Optional < Submit Record > <|s|> submit Record <|s|> = <|s|> rule . evaluate ( r . get Change ( ) ); <|nl|>
<|4-s|> Optional < Submit Record > <|s|> submit Record <|s|> = <|s|> rule . evaluate ( r . get Change ( ) ); <|nl|> <|4-s|> assert That ( submit Record ) . is Empty ( ); <|nl|>
<|4-s|> assert That ( record ) . is Present ( ); <|nl|>
<|4-s|> assert That ( record ) . has Value ( expected Record ); <|nl|>
<|4-s|> assert That ( record ) . has Value ( expected Record ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|12-s|> Field . of String ( PUBLISHER _ FAILURE _ COUNTER , <|s|> metadata Mapper ( PUBLISHER _ FAILURE _ COUNTER ) ) <|nl|>
<|2-s|> private <|s|> Field < String > <|s|> field ( String <|s|> metadata Key , <|s|> String <|s|> description ) <|s|> { <|nl|> <|4-s|> return <|s|> Field . of String ( <|nl|> <|12-s|> metadata Key , <|nl|> <|12-s|> ( metadata Builder , <|s|> field Value ) <|s|> -> <|nl|> <|16-s|> metadata Builder . add Plugin Metadata ( Plugin Metadata . create ( metadata Key , <|s|> field Value ) ) ) <|nl|> <|8-s|> . description ( description ) <|nl|> <|8-s|> . build ( ); <|nl|>
<|4-s|> } <|s|> catch <|s|> ( Exception <|s|> e ) <|s|> { <|nl|>
<|12-s|> <|2-s|> " Cannot <|s|> handle <|s|> message <|s|> % s : <|s|> [ Exception : <|s|> % s ] " , <|s|> event . get Header ( ) . get Event Type ( ) ); <|nl|> <|8-s|> <|2-s|> subscriber Metrics . increment Subscriber Failed To Consume Message ( ); <|nl|>
<|4-s|> <|2-s|> Subscriber Metrics <|s|> subscriber Metrics ) <|s|> { <|nl|>
<|4-s|> <|2-s|> Subscriber Metrics <|s|> subscriber Metrics ) <|s|> { <|nl|>
<|4-s|> <|2-s|> Subscriber Metrics <|s|> subscriber Metrics ) <|s|> { <|nl|>
<|4-s|> <|2-s|> Subscriber Metrics <|s|> subscriber Metrics ) <|s|> { <|nl|>
<|4-s|> <|2-s|> String <|s|> replacement ) <|s|> { <|nl|>
<|2-s|> boolean <|s|> publish ( String <|s|> topic , <|s|> String <|s|> payload ); <|nl|>
<|4-s|> <|2-s|> // <|s|> This <|s|> error <|s|> should <|s|> not <|s|> be <|s|> thrown <|s|> since <|s|> this <|s|> case <|s|> is <|s|> filtered <|s|> before <|s|> reaching <|s|> this <|s|> code . <|nl|> <|4-s|> <|2-s|> // <|s|> Also <|s|> return <|s|> a <|s|> backfilled <|s|> check <|s|> for <|s|> checkers <|s|> that <|s|> do <|s|> not <|s|> apply <|s|> to <|s|> the <|s|> change . <|nl|>
<|4-s|> <|2-s|> // <|s|> This <|s|> error <|s|> should <|s|> not <|s|> be <|s|> thrown <|s|> since <|s|> this <|s|> case <|s|> is <|s|> filtered <|s|> before <|s|> reaching <|s|> this <|s|> code . <|nl|> <|4-s|> <|2-s|> // <|s|> Also <|s|> return <|s|> a <|s|> backfilled <|s|> check <|s|> for <|s|> checkers <|s|> that <|s|> do <|s|> not <|s|> apply <|s|> to <|s|> the <|s|> change . <|nl|>
<|4-s|> Project . Name Key <|s|> other Project <|s|> = <|s|> project Operations . new Project ( ) . create ( ); <|nl|>
<|nl|> /* * <|s|> Factory <|s|> for <|s|> creating <|s|> an <|s|> { @ link <|s|> Admin Api } <|s|> instance <|s|> for <|s|> a <|s|> remote <|s|> URI . <|s|> */ <|nl|>
<|4-s|> <|2-s|> throw <|s|> new <|s|> Resource Conflict Exception ( <|nl|> <|8-s|> <|2-s|> " base <|s|> revision <|s|> is <|s|> missing <|s|> from <|s|> the <|s|> destination <|s|> branch : <|s|> " <|s|> + <|s|> str ); <|nl|>
<|2-s|> private <|s|> final <|s|> Provider < Kafka Event Subscriber > <|s|> subscriber Provider ; <|nl|> <|2-s|> private <|s|> List < Kafka Event Subscriber > <|s|> subscribers ; <|nl|>
<|2-s|> public <|s|> void <|s|> receive Aync ( String <|s|> topic , <|s|> Consumer < Source Aware Event Wrapper > <|s|> event Consumer ) <|s|> { <|nl|> <|4-s|> Kafka Event Subscriber <|s|> subscriber <|s|> = <|s|> subscriber Provider . get ( ); <|nl|> <|4-s|> subscribers . add ( subscriber ); <|nl|>
<|4-s|> install ( kafka Forwarded Event Router Module ); <|nl|> <|nl|>
<|2-s|> public <|s|> void <|s|> receive Aync ( String <|s|> topic , <|s|> Consumer < Source Aware Event Wrapper > <|s|> event Consumer ) <|s|> { <|nl|> <|4-s|> api Delegate . get ( ) . receive Aync ( topic , <|s|> event Consumer ); <|nl|>
<|4-s|> synchronized <|s|> ( subscribers ) <|s|> { <|nl|> <|4-s|> <|2-s|> subscribers . add ( subscriber ); <|nl|> <|4-s|> } <|nl|>
<|del|> <|nl|>
<|8-s|> <|2-s|> @ Override <|nl|> <|8-s|> <|2-s|> public <|s|> Stored Config <|s|> get User Config ( ) <|s|> throws <|s|> IOException , <|s|> Config Invalid Exception <|s|> { <|nl|> <|12-s|> return <|s|> old System Reader . get User Config ( ); <|nl|> <|8-s|> <|2-s|> } <|nl|>
<|2-s|> private <|s|> final <|s|> Replication Tasks Storage <|s|> replication Tasks Storage ; <|nl|>
<|4-s|> <|2-s|> Replication Tasks Storage <|s|> rts , <|nl|>
<|8-s|> replication Tasks Storage . persist ( project . get ( ) , <|s|> ref , <|s|> e . get URI ( ) , <|s|> get Remote Config Name ( ) ); <|nl|>
<|12-s|> replication Tasks Storage . delete ( <|nl|>
<|2-s|> private <|s|> final <|s|> Replication Tasks Storage <|s|> replication Tasks Storage ; <|nl|>
<|4-s|> <|2-s|> Replication Tasks Storage <|s|> rts ) <|s|> { <|nl|>
<|4-s|> <|2-s|> Set < String > <|s|> tasks Replayed <|s|> = <|s|> new <|s|> Hash Set < > ( ); <|nl|>
<|4-s|> <|2-s|> Push One <|s|> task <|s|> = <|s|> get Pending Push ( uri ); <|nl|> <|4-s|> <|2-s|> if <|s|> ( task <|s|> == <|s|> null ) <|s|> { <|nl|> <|8-s|> task <|s|> = <|s|> op Factory . create ( project , <|s|> uri ); <|nl|> <|8-s|> add Ref ( task , <|s|> ref ); <|nl|> <|8-s|> task . add State ( ref , <|s|> state ); <|nl|>
<|2-s|> void <|s|> notify Finished ( Push One <|s|> task ) <|s|> { <|nl|>
<|4-s|> String <|s|> task Json <|s|> = <|s|> GSON . to Json ( r ) <|s|> + <|s|> " \ n " ; <|nl|> <|4-s|> String <|s|> task Key <|s|> = <|s|> sha 1 ( task Json ) . name ( ); <|nl|>
<|4-s|> String <|s|> task Json <|s|> = <|s|> GSON . to Json ( r ) <|s|> + <|s|> " \ n " ; <|nl|> <|4-s|> String <|s|> task Key <|s|> = <|s|> sha 1 ( task Json ) . name ( ); <|nl|>
<|8-s|> <|2-s|> replication Tasks Storage . persist ( <|nl|> <|12-s|> <|2-s|> new <|s|> Replicate Ref Update ( project Name , <|s|> ref Name , <|s|> uri , <|s|> cfg . get Remote Config Name ( ) ) ); <|nl|>
<|2-s|> private <|s|> void <|s|> fire Pending Tasks ( ) <|s|> { <|nl|>
<|8-s|> String <|s|> event Key <|s|> = <|s|> String . format ( " % s : % s " , <|s|> t . project , <|s|> t . ref ); <|nl|> <|8-s|> if <|s|> ( ! events Replayed . contains ( event Key ) ) <|s|> { <|nl|> <|8-s|> <|2-s|> rep Log . info ( " Firing <|s|> pending <|s|> task <|s|> { } " , <|s|> event Key ); <|nl|>
<|2-s|> public <|s|> String <|s|> persist ( Replicate Ref Update <|s|> r ) <|s|> { <|nl|>
<|4-s|> <|2-s|> logger . at Warning ( ) . with Cause ( e ) . log ( " Couldn ' t <|s|> persist <|s|> event <|s|> % s " , <|s|> json ); <|nl|>
<|del|> <|nl|>
<|2-s|> private <|s|> Path <|s|> plugin Data Dir ; <|nl|>
<|12-s|> . collect ( to List ( ) ); <|nl|>
<|2-s|> Replication State ( Push Result Processing <|s|> processing ) <|s|> { <|nl|>
<|nl|>
<|2-s|> public <|s|> Optional < Change > <|s|> get Updated Change ( ) <|s|> { <|nl|> <|4-s|> return <|s|> Optional . of Nullable ( updated Change ); <|nl|>
<|4-s|> try ( Repository <|s|> repository <|s|> = <|s|> repo Manager . open Repository ( key ) ) <|s|> { <|nl|> <|4-s|> <|2-s|> Repository Cache . close ( repository ); <|nl|> <|4-s|> } <|nl|>
<|4-s|> <|2-s|> clean JGit Cache ( key ); <|nl|>
<|4-s|> return <|s|> current Config . get Config ( ) . get Boolean ( " gerrit " , <|s|> " auto Reload " , <|s|> false ); <|nl|>
<|8-s|> if <|s|> ( ! ( p . equals ( " / " ) <|s|> && <|s|> options . enable Gwt Ui ( ) ) ) <|s|> { <|nl|>
<|nl|> <|4-s|> public <|s|> Replicate Ref Update ( String <|s|> project , <|s|> String <|s|> ref , <|s|> URIish <|s|> uri , <|s|> String <|s|> remote ) <|s|> { <|nl|> <|4-s|> <|2-s|> this . project <|s|> = <|s|> project ; <|nl|> <|4-s|> <|2-s|> this . ref <|s|> = <|s|> ref ; <|nl|> <|4-s|> <|2-s|> this . uri <|s|> = <|s|> uri . to ASCIIString ( ); <|nl|> <|4-s|> <|2-s|> this . remote <|s|> = <|s|> remote ; <|nl|>
<|4-s|> Path <|s|> file <|s|> = <|s|> ref Updates ( ) . resolve ( event Key ); <|nl|>
<|4-s|> <|2-s|> logger . at Fine ( ) . log ( " CREATE <|s|> % s <|s|> ( % s : % s <|s|> = > <|s|> % s ) " , <|s|> file , <|s|> r . project , <|s|> r . ref , <|s|> r . uri ); <|nl|> <|4-s|> <|2-s|> Files . write ( file , <|s|> json . get Bytes ( UTF _ 8 ) ); <|nl|>
<|4-s|> Path <|s|> file <|s|> = <|s|> ref Updates ( ) . resolve ( task Key ); <|nl|> <|nl|>
<|4-s|> Path <|s|> file <|s|> = <|s|> ref Updates ( ) . resolve ( task Key ); <|nl|> <|nl|>
<|4-s|> <|2-s|> logger . at Fine ( ) . log ( " DELETE <|s|> % s <|s|> ( % s : % s <|s|> = > <|s|> % s ) " , <|s|> file , <|s|> r . project , <|s|> r . ref , <|s|> r . uri ); <|nl|> <|4-s|> <|2-s|> Files . delete ( file ); <|nl|>
import <|s|> static <|s|> com . google . gerrit . server . group . System Group Backend . REGISTERED _ USERS ; <|nl|> import <|s|> static <|s|> com . google . gerrit . testutil . Gerrit JUnit . assert Throws ; <|nl|>
<|del|> <|nl|>
<|8-s|> Repository <|s|> source Repo <|s|> = <|s|> repo Manager . open Repository ( project ) ) <|s|> { <|nl|>
<|12-s|> <|2-s|> " change <|s|> % s <|s|> of <|s|> project <|s|> % s <|s|> unexpectedly <|s|> had <|s|> status <|s|> % s <|s|> after <|s|> submit <|s|> attempt " , <|nl|> <|12-s|> <|2-s|> updated Change . get Id ( ) , <|s|> updated Change . get Project ( ) , <|s|> updated Change . get Status ( ) ); <|nl|> <|4-s|> <|2-s|> logger . at Warning ( ) . log ( msg ); <|nl|> <|4-s|> <|2-s|> throw <|s|> new <|s|> Rest Api Exception ( msg ); <|nl|>
<|4-s|> wait Until ( ( ) <|s|> -> <|s|> project Exists ( new <|s|> Project . Name Key ( source Project <|s|> + <|s|> " replica . git " ) ) ); <|nl|>
<|4-s|> wait Until ( ( ) <|s|> -> <|s|> project Exists ( new <|s|> Project . Name Key ( source Project <|s|> + <|s|> " replica . git " ) ) ); <|nl|>
<|del|> <|nl|>
<|del|> <|nl|>
<|4-s|> private <|s|> Test Broad Cast <|4-s|> <|2-s|> <|s|> m Test Broad Cast ; <|nl|>
<|nl|>
<|nl|>
<|12-s|> Platform Config <|s|> cfg <|s|> = <|s|> new <|s|> Platform Config ( Service Type . IN _ PROC , <|nl|>
<|4-s|> private <|s|> static <|s|> RIHelper <|8-s|> <|2-s|> s _ m Ri Helper Instance <|8-s|> <|2-s|> <|s|> = <|s|> null ; <|nl|>
<|4-s|> <|s|> * <|s|> 8 . <|s|> on Post Listener <|s|> event <|s|> handler <|nl|>
<|nl|>
<|8-s|> m PMHelper . clear All ( ); <|nl|>
<|del|> <|nl|>
<|4-s|> <|s|> * <|12-s|> 2 . <|s|> query Params Map <|s|> map <|s|> with <|s|> query <|s|> paramter <|s|> and <|s|> value <|nl|> <|4-s|> <|s|> * <|12-s|> 3 . <|s|> On Put Listener <|s|> event <|s|> handler <|nl|>
<|12-s|> Platform Config <|s|> cfg <|s|> = <|s|> new <|s|> Platform Config ( Service Type . IN _ PROC , <|nl|>
<|4-s|> String <|16-s|> <|4-s|> <|2-s|> HOST <|16-s|> <|16-s|> <|4-s|> <|s|> = <|s|> " coap :/ / 192 . 168 . 1 . 2 : 5000 " ; <|nl|>
<|nl|>
<|s|> * <|s|> // <|s|> Copyright <|s|> 2018 <|s|> Intel <|s|> Corporation <|s|> All <|s|> Rights <|s|> Reserved . <|nl|>
<|s|> * <|s|> // <|s|> Copyright <|s|> 2018 <|s|> Intel <|s|> Corporation <|s|> All <|s|> Rights <|s|> Reserved . <|nl|>
<|s|> * <|s|> // <|s|> Copyright <|s|> 2016 - 2018 <|s|> Intel <|s|> Corporation <|s|> All <|s|> Rights <|s|> Reserved . <|nl|>
<|s|> * <|s|> // <|s|> Copyright <|s|> 2016 - 2018 <|s|> Intel <|s|> Corporation <|s|> All <|s|> Rights <|s|> Reserved . <|nl|>
<|4-s|> public <|s|> static <|s|> final <|s|> String <|s|> OCF _ OIC _ URI _ PREFIX _ MEDIA _ CONTROL <|s|> = <|s|> " / ocf / media Control / " ; <|nl|> <|4-s|> public <|s|> static <|s|> final <|s|> String <|s|> UPNP _ OIC _ URI _ PREFIX _ MEDIA _ CONTROL <|s|> = <|s|> " / upnp / media Control / " ; <|nl|>
<|s|> * <|s|> // <|s|> Copyright <|s|> 2016 - 2018 <|s|> Intel <|s|> Corporation <|s|> All <|s|> Rights <|s|> Reserved . <|nl|>
<|4-s|> static <|s|> public <|s|> final <|s|> String <|s|> RESOURCE _ TYPE <|s|> = <|s|> " oic . d . light " ; <|nl|> <|4-s|> static <|s|> public <|s|> final <|s|> String <|s|> DEVICE _ RESOURCE _ TYPE <|s|> = <|s|> " oic . wk . d " ; <|nl|>
<|4-s|> public <|s|> void <|s|> update ( int <|s|> brightness ) <|s|> { <|nl|>
<|nl|>
<|8-s|> OCMain . set Delayed Callback ( stop Observe , <|s|> 30 ); <|nl|>
<|16-s|> <|4-s|> // <|s|> next Event <|s|> and <|s|> now <|s|> are <|s|> in <|s|> microseconds <|nl|> <|16-s|> <|4-s|> long <|s|> time To Wait <|s|> = <|s|> ( next Event <|s|> - <|s|> now ) <|s|> * <|s|> 1000 ; <|nl|>
<|8-s|> int <|s|> ret <|s|> = <|s|> OCMain . init Platform ( " Android " ); <|nl|> <|8-s|> ret <|s|> |= <|s|> OCMain . add Device ( " / oic / d " , <|s|> " oic . d . phone " , <|s|> " Kishen ' s <|s|> Android <|s|> Phone " , <|s|> " ocf . 1 . 0 . 0 " , <|s|> " ocf . res . 1 . 0 . 0 " ); <|nl|>
<|8-s|> OCMain . rep Set Int ( root , <|s|> " a " , <|s|> 1 ); <|nl|>
<|8-s|> System . out . println ( " inside <|s|> Obt Init Handler . initilize ( ) " ); <|nl|>
<|8-s|> if <|s|> ( 0 <|s|> > <|s|> OCObt . discover Owned Devices ( owned Device Handler ) ) <|s|> { <|nl|>
<|16-s|> <|4-s|> System . out . print ( " Enter <|s|> resource <|s|> type <|s|> [ " <|s|> + <|s|> ( j <|s|> + <|s|> 1 ) <|s|> + <|s|> " ]: <|s|> " ); <|nl|>
<|8-s|> System . out . println ( " inside <|s|> Obt Init Handler . initilize ( ) " ); <|nl|>
<|del|> <|nl|>
<|16-s|> <|4-s|> long <|s|> time To Wait <|s|> = <|s|> ( NANOS _ PER _ SECOND <|s|> / <|s|> OCClock . OC _ CLOCK _ SECOND ) <|s|> * <|s|> ( next Event <|s|> - <|s|> now ); <|nl|>
<|8-s|> new <|s|> Post Light Request Handler ( activity , <|s|> light ) . handler ( request , <|s|> interfaces ); <|nl|>
<|del|> <|nl|>
<|8-s|> // <|s|> the <|s|> factory <|s|> presets <|s|> handler <|s|> must <|s|> be <|s|> set <|s|> prior <|s|> to <|s|> calling <|s|> system Init ( ) . <|nl|> <|8-s|> // <|s|> The <|s|> system Init ( ) <|s|> function <|s|> will <|s|> cause <|s|> the <|s|> factory <|s|> presets <|s|> handler <|s|> to <|nl|> <|8-s|> // <|s|> be <|s|> called <|s|> if <|s|> it <|s|> is <|s|> set . <|nl|>
<|8-s|> // <|s|> the <|s|> factory <|s|> presets <|s|> handler <|s|> must <|s|> be <|s|> set <|s|> prior <|s|> to <|s|> calling <|s|> system Init ( ) . <|nl|> <|8-s|> // <|s|> The <|s|> system Init ( ) <|s|> function <|s|> will <|s|> cause <|s|> the <|s|> factory <|s|> presets <|s|> handler <|s|> to <|nl|> <|8-s|> // <|s|> be <|s|> called <|s|> if <|s|> it <|s|> is <|s|> set . <|nl|>
<|8-s|> System . out . println ( " Get <|s|> Owned <|s|> Device <|s|> Name <|s|> Handler : " ); <|nl|>
<|8-s|> System . out . println ( " Get <|s|> Unowned <|s|> Device <|s|> Name <|s|> Handler : " ); <|nl|>
<|4-s|> public <|s|> boolean <|s|> get Boolean ( ) <|s|> throws <|s|> Oc Cbor Exception <|s|> { <|nl|>
<|4-s|> public <|s|> long <|s|> get Long ( ) <|s|> throws <|s|> Oc Cbor Exception <|s|> { <|nl|>
<|4-s|> public <|s|> double <|s|> get Double ( ) <|s|> throws <|s|> Oc Cbor Exception <|s|> { <|nl|>
<|del|> <|nl|>
<|4-s|> public <|s|> boolean <|s|> get Boolean ( String <|s|> key ) <|s|> throws <|s|> Oc Cbor Exception <|s|> { <|nl|>
<|4-s|> public <|s|> long <|s|> get Long ( String <|s|> key ) <|s|> throws <|s|> Oc Cbor Exception <|s|> { <|nl|>
<|4-s|> public <|s|> double <|s|> get Double ( String <|s|> key ) <|s|> throws <|s|> Oc Cbor Exception <|s|> { <|nl|>
<|8-s|> if <|s|> ( ( native Rep <|s|> != <|s|> null ) <|s|> && <|s|> ( OCRep . get Cbor Errno ( ) <|s|> == <|s|> 0 ) ) <|s|> { <|nl|>
<|12-s|> } <|nl|> <|12-s|> refresh State ( ); <|nl|>
<|del|> <|nl|>
<|12-s|> int <|s|> qs Quick Pulldown Value <|s|> = <|s|> Settings . System . get Int ( <|nl|> <|16-s|> <|4-s|> m Context . get Content Resolver ( ) , <|s|> Settings . System . STATUS _ BAR _ QUICK _ QS _ PULLDOWN , <|s|> 0 ); <|nl|>
<|16-s|> View <|s|> v <|s|> = <|s|> m Inflater . inflate ( R . layout . app _ grid _ item , <|s|> null ); <|nl|>
<|8-s|> m Show Indicator <|s|> = <|s|> Settings . System . get Int For User ( m Context . get Content Resolver ( ) , <|nl|> <|16-s|> Settings . System . HIDE _ LOCKSCREEN _ INDICATOR _ DISPLAY , <|s|> 0 , <|s|> User Handle . USER _ CURRENT ) <|s|> == <|s|> 0 ; <|nl|>
<|16-s|> Settings . System . QS _ PANEL _ BG _ ALPHA , <|s|> 221 , <|nl|>
<|8-s|> boolean <|s|> location Disabled <|s|> = <|s|> Settings . Secure . get Int ( get Activity ( ) . get Content Resolver ( ) , <|nl|>
<|16-s|> boolean <|s|> disable If Music Active <|s|> = <|s|> get Prefs ( context ) . get Boolean ( Event Service Settings . EVENT _ MUSIC _ ACTIVE , <|s|> true ); <|nl|>
<|del|> <|nl|>
<|16-s|> <|4-s|> case <|s|> Motion Event . ACTION _ CANCEL : <|nl|>
private <|s|> void <|s|> init Dimens ( ) <|s|> { <|nl|> <|4-s|> public <|s|> final <|s|> int <|s|> MAX _ VISIBLE _ ICONS _ WHEN _ DARK <|s|> = <|nl|> <|12-s|> get Resources ( ) . get Integer ( R . integer . config _ max Visible Notification Icons When Dark ); <|nl|> <|4-s|> public <|s|> final <|s|> int <|s|> MAX _ STATIC _ ICONS <|s|> = <|nl|> <|12-s|> get Resources ( ) . get Integer ( R . integer . config _ max Visible Notification Icons ); <|nl|>
<|4-s|> // public <|s|> static <|s|> final <|s|> int <|s|> MAX _ VISIBLE _ ICONS _ WHEN _ DARK <|s|> = <|s|> 5 ; <|nl|> <|4-s|> // public <|s|> static <|s|> final <|s|> int <|s|> MAX _ STATIC _ ICONS <|s|> = <|s|> 4 ; <|nl|>
<|4-s|> public <|s|> int <|s|> MAX _ VISIBLE _ ICONS _ WHEN _ DARK <|s|> = <|s|> 5 ; <|nl|> <|4-s|> public <|s|> int <|s|> MAX _ STATIC _ ICONS <|s|> = <|s|> 4 ; <|nl|>
<|8-s|> // <|s|> Use <|s|> the <|s|> System UI <|s|> context , <|s|> so <|s|> the <|s|> toast <|s|> gets <|s|> themed <|s|> properly . <|nl|> <|8-s|> Toast . make Text ( m Sys Ui Context , <|s|> toast Text , <|s|> Toast . LENGTH _ SHORT ) . show ( ); <|nl|>
<|12-s|> log . info ( " provision ONT <|s|> with <|s|> device <|s|> id <|s|> : <|s|> { } <|s|> success <|s|> : <|s|> { } " <|s|> + <|s|> serial Number , <|s|> result ); <|nl|>
<|8-s|> log . info ( " create Chassis <|s|> with <|s|> clli <|s|> : <|s|> { } " <|s|> , <|s|> request . get CLLI ( ) ); <|nl|>
<|8-s|> // <|s|> Get <|s|> the <|s|> uplink <|s|> port <|nl|> <|8-s|> Port <|s|> uplink Port <|s|> = <|s|> get Uplink Port ( device Service . get Device ( port . device Id ( ) ) ); <|nl|> <|8-s|> if <|s|> ( uplink Port <|s|> == <|s|> null ) <|s|> { <|nl|> <|12-s|> log . warn ( " No <|s|> uplink <|s|> port <|s|> found <|s|> for <|s|> OLT <|s|> device <|s|> { } " , <|s|> port . device Id ( ) ); <|nl|>
<|nl|>
<|4-s|> /* * <|nl|> <|4-s|> <|s|> * <|s|> { @ inherit Doc } <|nl|> <|4-s|> <|s|> */ <|nl|> <|4-s|> @ Override <|nl|> <|4-s|> protected <|s|> boolean <|s|> resolve ( ) <|s|> { <|nl|> <|4-s|> <|2-s|> return <|s|> Capella ECross Reference Adapter . this . resolve ( ); <|nl|>
<|2-s|> private <|s|> static <|s|> Map < String , <|s|> String > <|s|> filter Name Exceptions ; <|nl|> <|2-s|> <|nl|> <|2-s|> private <|s|> Map < Diagram Description , <|s|> Set < String >> <|s|> valid Filter Names ; <|nl|>
<|2-s|> protected <|s|> Is Human Checkbox <|s|> is Human Checkbox ; <|nl|> <|2-s|> protected <|s|> Is Actor Checkbox <|s|> is Actor Checkbox ; <|nl|>
<|4-s|> <|2-s|> if <|s|> ( is Human Checkbox . is Enabled ( ) <|s|> && <|s|> ( is An OE <|s|> || <|s|> is ASystem <|s|> || <|s|> has Children ) ) <|s|> { <|nl|>
<|4-s|> <|2-s|> if <|s|> ( is Actor Checkbox . is Enabled ( ) <|s|> && <|s|> ( is In SALevel <|s|> || <|s|> is ASystem <|s|> || <|s|> cannot Became Component <|s|> || <|s|> cannot Became Actor ) ) <|s|> { <|nl|>
<|s|> * <|s|> Copyright <|s|> ( c ) <|s|> 2006 , <|s|> 2019 <|s|> THALES <|s|> GLOBAL <|s|> SERVICES . <|nl|>
<|s|> * <|s|> Copyright <|s|> ( c ) <|s|> 2006 , <|s|> 2019 <|s|> THALES <|s|> GLOBAL <|s|> SERVICES . <|nl|>
<|s|> * <|s|> Copyright <|s|> ( c ) <|s|> 2006 , <|s|> 2019 <|s|> THALES <|s|> GLOBAL <|s|> SERVICES . <|nl|>
<|del|> <|nl|>
